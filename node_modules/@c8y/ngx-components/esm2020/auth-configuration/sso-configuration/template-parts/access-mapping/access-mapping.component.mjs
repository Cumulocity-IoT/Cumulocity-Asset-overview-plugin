import { Component, Input } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { pull, defaultsDeep } from 'lodash-es';
import { ControlContainer, NgForm } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
import * as i4 from "ngx-bootstrap/popover";
import * as i5 from "./dynamic-access-mapping.component";
import * as i6 from "./inventory-roles-mapping.component";
export class AccessMappingComponent {
    constructor(controlContainer) {
        this.controlContainer = controlContainer;
        this.USE_ACCESS_MAPPING_ON_USER_CREATION_TOOLTIP = gettext('The access mapping will be executed only once during the first login, then the administrator can edit the user roles. During the next login, these mappings will not be executed.');
        this.USE_ACCESS_MAPPING_ON_USER_CREATION_OPTION = gettext('Use dynamic access mapping only on user creation');
        this.UPDATE_ROLES_LISTED_IN_ACCESS_MAPPING_ON_EACH_LOG_IN_TOOLTIP = gettext('The access mapping will be executed only once during the first login, then the administrator can edit the user roles. During the next login only the roles listed in the access mappings will be updated.');
        this.UPDATE_ROLES_LISTED_IN_ACCESS_MAPPING_ON_EACH_LOG_IN_OPTION = gettext('Roles selected in the rules above will be reassigned to a user on each log in and other ones will be unchanged');
        this.CLEAR_AND_UPDATED_ROLES_ON_EACH_LOG_IN_TOOLTIP = gettext('The access mapping will be executed during the first login. The administrator cannot edit the SSO user roles. During the next login all the roles will be cleared and the mapping will be executed again.');
        this.CLEAR_AND_UPDATED_ROLES_ON_EACH_LOG_IN_OPTION = gettext('Roles selected in the rules above will be reassigned to a user on each log in and other ones will be cleared');
    }
    ngOnChanges() {
        if (this.templateModel && this.apps && this.groups) {
            this.setDynamicMapping();
        }
    }
    addAccessMapping() {
        const emptyMapping = {
            when: {
                operator: 'AND',
                childPredicates: [{ parameterPath: '', operator: 'EQ', value: '' }]
            },
            thenGroups: [],
            thenApplications: []
        };
        this.templateModel.onNewUser.dynamicMapping.mappings.push(emptyMapping);
    }
    addInventoryMapping() {
        const emptyInventoryMapping = {
            when: {
                operator: 'AND',
                childPredicates: [{ parameterPath: '', operator: 'EQ', value: '' }]
            },
            thenInventoryRoles: []
        };
        this.templateModel.onNewUser.dynamicMapping.inventoryMappings.push(emptyInventoryMapping);
    }
    onRemove(accessMapping) {
        pull(this.templateModel.onNewUser.dynamicMapping.mappings, accessMapping);
    }
    onRemoveInventoryMapping(inventoryMapping) {
        pull(this.templateModel.onNewUser.dynamicMapping.inventoryMappings, inventoryMapping);
    }
    setDynamicMappingConfiguration(mapRolesOnlyForNewUser, manageRolesOnlyFromAccessMapping = false) {
        this.templateModel.onNewUser.dynamicMapping.configuration = {
            mapRolesOnlyForNewUser,
            manageRolesOnlyFromAccessMapping
        };
        this.controlContainer.control.markAsDirty();
    }
    get mapRolesOnlyForNewUser() {
        return this.templateModel.onNewUser.dynamicMapping.configuration.mapRolesOnlyForNewUser;
    }
    get manageRolesOnlyFromAccessMapping() {
        return this.templateModel.onNewUser.dynamicMapping.configuration
            .manageRolesOnlyFromAccessMapping;
    }
    setDynamicMapping() {
        defaultsDeep(this.templateModel.onNewUser, {
            dynamicMapping: {
                mappings: [],
                inventoryMappings: [],
                configuration: { mapRolesOnlyForNewUser: false, manageRolesOnlyFromAccessMapping: false }
            }
        });
    }
}
AccessMappingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: AccessMappingComponent, deps: [{ token: i1.ControlContainer }], target: i0.ɵɵFactoryTarget.Component });
AccessMappingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: AccessMappingComponent, selector: "c8y-sso-access-mapping", inputs: { apps: "apps", groups: "groups", inventoryRoles: "inventoryRoles", templateModel: "templateModel" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"col-md-12 p-t-16\">\n  <div class=\"row m-l-8 m-r-8\">\n    <div class=\"col-xs-12 col-sm-3 col-md-2\">\n      <div class=\"h4 text-normal text-right text-left-xs\" translate>Access mapping</div>\n    </div>\n\n    <div class=\"col-xs-12 col-sm-9 col-md-10 col-lg-9\">\n      <div class=\"dynamic-access\">\n        <div class=\"legend form-block m-t-4\" translate>Dynamic access mapping</div>\n        <c8y-form-group>\n          <c8y-ui-empty-state\n            *ngIf=\"templateModel.onNewUser.dynamicMapping.mappings.length === 0\"\n            [icon]=\"'list'\"\n            [title]=\"'No access mapping rules defined.' | translate\"\n            [subtitle]=\"'Click below to add a new mapping.' | translate\"\n            [horizontal]=\"true\"\n          ></c8y-ui-empty-state>\n          <div\n            *ngFor=\"\n              let accessMapping of templateModel.onNewUser.dynamicMapping.mappings;\n              index as idx\n            \"\n          >\n            <c8y-sso-dynamic-access-mapping\n              [accessMapping]=\"accessMapping\"\n              (onRemoveAccessMapping)=\"onRemove(accessMapping)\"\n              [apps]=\"apps\"\n              [groups]=\"groups\"\n              [accessMappingIndex]=\"idx\"\n            ></c8y-sso-dynamic-access-mapping>\n          </div>\n          <div class=\"scroll-column-footer\">\n            <button\n              id=\"add-access-mapping-button\"\n              class=\"btn btn-default m-b-16\"\n              type=\"button\"\n              title=\"{{ 'Add access mapping' | translate }}\"\n              (click)=\"addAccessMapping()\"\n            >\n              <i c8yIcon=\"plus-circle\" class=\"m-r-4\"></i>\n              {{ 'Add access mapping' | translate }}\n            </button>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"dynamic-access\">\n        <div class=\"legend form-block m-t-4\" translate>Inventory roles mapping</div>\n        <c8y-form-group>\n          <c8y-ui-empty-state\n            *ngIf=\"templateModel.onNewUser.dynamicMapping.inventoryMappings.length === 0\"\n            [icon]=\"'list'\"\n            [title]=\"'No inventory roles mapping rules defined.' | translate\"\n            [subtitle]=\"'Click below to add a new mapping.' | translate\"\n            [horizontal]=\"true\"\n          ></c8y-ui-empty-state>\n          <div\n            *ngFor=\"\n              let inventoryMapping of templateModel.onNewUser.dynamicMapping.inventoryMappings;\n              index as idx\n            \"\n          >\n            <c8y-sso-inventory-roles-mapping\n              [inventoryRoles]=\"inventoryRoles\"\n              [inventoryMapping]=\"inventoryMapping\"\n              (onRemoveInventoryMapping)=\"onRemoveInventoryMapping(inventoryMapping)\"\n              [inventoryMappingIndex]=\"idx\"\n            ></c8y-sso-inventory-roles-mapping>\n          </div>\n          <div class=\"scroll-column-footer\">\n            <button\n              id=\"add-inventory-mapping-button\"\n              class=\"btn btn-default m-b-16\"\n              type=\"button\"\n              title=\"{{ 'Add inventory roles mapping' | translate }}\"\n              (click)=\"addInventoryMapping()\"\n            >\n              <i c8yIcon=\"plus-circle\" class=\"m-r-4\"></i>\n              {{ 'Add inventory roles mapping' | translate }}\n            </button>\n          </div>\n        </c8y-form-group>\n      </div>\n      <c8y-form-group>\n        <label\n          title=\"{{ USE_ACCESS_MAPPING_ON_USER_CREATION_OPTION | translate }}\"\n          class=\"c8y-radio input-sm\"\n        >\n          <input\n            type=\"radio\"\n            name=\"dynamicAccessMappingConfiguration\"\n            [checked]=\"mapRolesOnlyForNewUser\"\n            (change)=\"setDynamicMappingConfiguration(true)\"\n          />\n          <span></span>\n          <span>{{ USE_ACCESS_MAPPING_ON_USER_CREATION_OPTION | translate }}</span>\n          <button\n            class=\"btn-help\"\n            type=\"button\"\n            [attr.aria-label]=\"'Help' | translate\"\n            popover=\"{{ USE_ACCESS_MAPPING_ON_USER_CREATION_TOOLTIP | translate }}\"\n            placement=\"right\"\n            triggers=\"focus\"\n            container=\"body\"\n          ></button>\n        </label>\n        <label\n          title=\"{{ UPDATE_ROLES_LISTED_IN_ACCESS_MAPPING_ON_EACH_LOG_IN_OPTION | translate }}\"\n          class=\"c8y-radio input-sm\"\n        >\n          <input\n            type=\"radio\"\n            name=\"dynamicAccessMappingConfiguration\"\n            [checked]=\"!mapRolesOnlyForNewUser && manageRolesOnlyFromAccessMapping\"\n            (change)=\"setDynamicMappingConfiguration(false, true)\"\n          />\n          <span></span>\n          <span>\n            {{ UPDATE_ROLES_LISTED_IN_ACCESS_MAPPING_ON_EACH_LOG_IN_OPTION | translate }}\n          </span>\n          <button\n            type=\"button\"\n            class=\"btn-help\"\n            [attr.aria-label]=\"'Help' | translate\"\n            popover=\"{{ UPDATE_ROLES_LISTED_IN_ACCESS_MAPPING_ON_EACH_LOG_IN_TOOLTIP | translate }}\"\n            placement=\"right\"\n            triggers=\"focus\"\n            container=\"body\"\n          ></button>\n        </label>\n        <label\n          title=\"{{ CLEAR_AND_UPDATED_ROLES_ON_EACH_LOG_IN_OPTION | translate }}\"\n          class=\"c8y-radio input-sm\"\n        >\n          <input\n            type=\"radio\"\n            name=\"dynamicAccessMappingConfiguration\"\n            [checked]=\"!mapRolesOnlyForNewUser && !manageRolesOnlyFromAccessMapping\"\n            (change)=\"setDynamicMappingConfiguration(false, false)\"\n          />\n          <span></span>\n          <span>\n            {{ CLEAR_AND_UPDATED_ROLES_ON_EACH_LOG_IN_OPTION | translate }}\n          </span>\n          <button\n            class=\"btn-help\"\n            type=\"button\"\n            [attr.aria-label]=\"'Help' | translate\"\n            popover=\"{{ CLEAR_AND_UPDATED_ROLES_ON_EACH_LOG_IN_TOOLTIP | translate }}\"\n            placement=\"right\"\n            triggers=\"focus\"\n            container=\"body\"\n          ></button>\n        </label>\n      </c8y-form-group>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "component", type: i2.EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: ["icon", "title", "subtitle", "horizontal"] }, { kind: "directive", type: i2.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i4.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "component", type: i5.DynamicAccessMappingComponent, selector: "c8y-sso-dynamic-access-mapping", inputs: ["groups", "apps", "accessMapping", "accessMappingIndex"], outputs: ["onRemoveAccessMapping"] }, { kind: "component", type: i6.InventoryRolesMappingComponent, selector: "c8y-sso-inventory-roles-mapping", inputs: ["inventoryMapping", "inventoryMappingIndex", "inventoryRoles"], outputs: ["onRemoveInventoryMapping"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }], viewProviders: [{ provide: ControlContainer, useExisting: NgForm }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: AccessMappingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-sso-access-mapping', viewProviders: [{ provide: ControlContainer, useExisting: NgForm }], template: "<div class=\"col-md-12 p-t-16\">\n  <div class=\"row m-l-8 m-r-8\">\n    <div class=\"col-xs-12 col-sm-3 col-md-2\">\n      <div class=\"h4 text-normal text-right text-left-xs\" translate>Access mapping</div>\n    </div>\n\n    <div class=\"col-xs-12 col-sm-9 col-md-10 col-lg-9\">\n      <div class=\"dynamic-access\">\n        <div class=\"legend form-block m-t-4\" translate>Dynamic access mapping</div>\n        <c8y-form-group>\n          <c8y-ui-empty-state\n            *ngIf=\"templateModel.onNewUser.dynamicMapping.mappings.length === 0\"\n            [icon]=\"'list'\"\n            [title]=\"'No access mapping rules defined.' | translate\"\n            [subtitle]=\"'Click below to add a new mapping.' | translate\"\n            [horizontal]=\"true\"\n          ></c8y-ui-empty-state>\n          <div\n            *ngFor=\"\n              let accessMapping of templateModel.onNewUser.dynamicMapping.mappings;\n              index as idx\n            \"\n          >\n            <c8y-sso-dynamic-access-mapping\n              [accessMapping]=\"accessMapping\"\n              (onRemoveAccessMapping)=\"onRemove(accessMapping)\"\n              [apps]=\"apps\"\n              [groups]=\"groups\"\n              [accessMappingIndex]=\"idx\"\n            ></c8y-sso-dynamic-access-mapping>\n          </div>\n          <div class=\"scroll-column-footer\">\n            <button\n              id=\"add-access-mapping-button\"\n              class=\"btn btn-default m-b-16\"\n              type=\"button\"\n              title=\"{{ 'Add access mapping' | translate }}\"\n              (click)=\"addAccessMapping()\"\n            >\n              <i c8yIcon=\"plus-circle\" class=\"m-r-4\"></i>\n              {{ 'Add access mapping' | translate }}\n            </button>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"dynamic-access\">\n        <div class=\"legend form-block m-t-4\" translate>Inventory roles mapping</div>\n        <c8y-form-group>\n          <c8y-ui-empty-state\n            *ngIf=\"templateModel.onNewUser.dynamicMapping.inventoryMappings.length === 0\"\n            [icon]=\"'list'\"\n            [title]=\"'No inventory roles mapping rules defined.' | translate\"\n            [subtitle]=\"'Click below to add a new mapping.' | translate\"\n            [horizontal]=\"true\"\n          ></c8y-ui-empty-state>\n          <div\n            *ngFor=\"\n              let inventoryMapping of templateModel.onNewUser.dynamicMapping.inventoryMappings;\n              index as idx\n            \"\n          >\n            <c8y-sso-inventory-roles-mapping\n              [inventoryRoles]=\"inventoryRoles\"\n              [inventoryMapping]=\"inventoryMapping\"\n              (onRemoveInventoryMapping)=\"onRemoveInventoryMapping(inventoryMapping)\"\n              [inventoryMappingIndex]=\"idx\"\n            ></c8y-sso-inventory-roles-mapping>\n          </div>\n          <div class=\"scroll-column-footer\">\n            <button\n              id=\"add-inventory-mapping-button\"\n              class=\"btn btn-default m-b-16\"\n              type=\"button\"\n              title=\"{{ 'Add inventory roles mapping' | translate }}\"\n              (click)=\"addInventoryMapping()\"\n            >\n              <i c8yIcon=\"plus-circle\" class=\"m-r-4\"></i>\n              {{ 'Add inventory roles mapping' | translate }}\n            </button>\n          </div>\n        </c8y-form-group>\n      </div>\n      <c8y-form-group>\n        <label\n          title=\"{{ USE_ACCESS_MAPPING_ON_USER_CREATION_OPTION | translate }}\"\n          class=\"c8y-radio input-sm\"\n        >\n          <input\n            type=\"radio\"\n            name=\"dynamicAccessMappingConfiguration\"\n            [checked]=\"mapRolesOnlyForNewUser\"\n            (change)=\"setDynamicMappingConfiguration(true)\"\n          />\n          <span></span>\n          <span>{{ USE_ACCESS_MAPPING_ON_USER_CREATION_OPTION | translate }}</span>\n          <button\n            class=\"btn-help\"\n            type=\"button\"\n            [attr.aria-label]=\"'Help' | translate\"\n            popover=\"{{ USE_ACCESS_MAPPING_ON_USER_CREATION_TOOLTIP | translate }}\"\n            placement=\"right\"\n            triggers=\"focus\"\n            container=\"body\"\n          ></button>\n        </label>\n        <label\n          title=\"{{ UPDATE_ROLES_LISTED_IN_ACCESS_MAPPING_ON_EACH_LOG_IN_OPTION | translate }}\"\n          class=\"c8y-radio input-sm\"\n        >\n          <input\n            type=\"radio\"\n            name=\"dynamicAccessMappingConfiguration\"\n            [checked]=\"!mapRolesOnlyForNewUser && manageRolesOnlyFromAccessMapping\"\n            (change)=\"setDynamicMappingConfiguration(false, true)\"\n          />\n          <span></span>\n          <span>\n            {{ UPDATE_ROLES_LISTED_IN_ACCESS_MAPPING_ON_EACH_LOG_IN_OPTION | translate }}\n          </span>\n          <button\n            type=\"button\"\n            class=\"btn-help\"\n            [attr.aria-label]=\"'Help' | translate\"\n            popover=\"{{ UPDATE_ROLES_LISTED_IN_ACCESS_MAPPING_ON_EACH_LOG_IN_TOOLTIP | translate }}\"\n            placement=\"right\"\n            triggers=\"focus\"\n            container=\"body\"\n          ></button>\n        </label>\n        <label\n          title=\"{{ CLEAR_AND_UPDATED_ROLES_ON_EACH_LOG_IN_OPTION | translate }}\"\n          class=\"c8y-radio input-sm\"\n        >\n          <input\n            type=\"radio\"\n            name=\"dynamicAccessMappingConfiguration\"\n            [checked]=\"!mapRolesOnlyForNewUser && !manageRolesOnlyFromAccessMapping\"\n            (change)=\"setDynamicMappingConfiguration(false, false)\"\n          />\n          <span></span>\n          <span>\n            {{ CLEAR_AND_UPDATED_ROLES_ON_EACH_LOG_IN_OPTION | translate }}\n          </span>\n          <button\n            class=\"btn-help\"\n            type=\"button\"\n            [attr.aria-label]=\"'Help' | translate\"\n            popover=\"{{ CLEAR_AND_UPDATED_ROLES_ON_EACH_LOG_IN_TOOLTIP | translate }}\"\n            placement=\"right\"\n            triggers=\"focus\"\n            container=\"body\"\n          ></button>\n        </label>\n      </c8y-form-group>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ControlContainer }]; }, propDecorators: { apps: [{
                type: Input
            }], groups: [{
                type: Input
            }], inventoryRoles: [{
                type: Input
            }], templateModel: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,