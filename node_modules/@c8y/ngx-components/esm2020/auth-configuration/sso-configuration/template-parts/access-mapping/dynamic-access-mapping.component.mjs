import { Component, Input, Output, EventEmitter } from '@angular/core';
import { ControlContainer, NgForm } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
import * as i3 from "./child-predicates.component";
export class DynamicAccessMappingComponent {
    constructor() {
        this.onRemoveAccessMapping = new EventEmitter();
    }
    ngOnChanges() {
        if (this.accessMapping && this.apps && this.groups) {
            this.setSelectedItems();
        }
    }
    onRemoveAllChildPredicates() {
        this.onRemoveAccessMapping.emit(this.accessMapping);
    }
    getIds(selectedItems) {
        return selectedItems.map(item => parseInt(item.id, 10));
    }
    setSelectedItems() {
        if (this.accessMapping) {
            if (this.accessMapping.thenGroups) {
                this.selectedGroups = this.groups.filter(item => this.accessMapping.thenGroups.includes(item.id));
            }
            if (this.accessMapping.thenApplications) {
                this.selectedApps = this.apps.filter(item => this.accessMapping.thenApplications.includes(+item.id));
            }
        }
    }
}
DynamicAccessMappingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: DynamicAccessMappingComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
DynamicAccessMappingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: DynamicAccessMappingComponent, selector: "c8y-sso-dynamic-access-mapping", inputs: { groups: "groups", apps: "apps", accessMapping: "accessMapping", accessMappingIndex: "accessMappingIndex" }, outputs: { onRemoveAccessMapping: "onRemoveAccessMapping" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"card\">\n  <div class=\"card-block overflow-visible\" *ngIf=\"accessMapping.when.childPredicates.length != 0\">\n    <c8y-sso-child-predicates\n      [childPredicates]=\"accessMapping.when.childPredicates\"\n      [accessMappingIndex]=\"'am' + accessMappingIndex\"\n      (onRemoveAllChildPredicates)=\"onRemoveAllChildPredicates()\"\n    ></c8y-sso-child-predicates>\n\n    <div class=\"legend form-block\" translate>Provide access to</div>\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div title=\"{{ 'Default global roles' | translate }}\" class=\"form-group\">\n          <label [for]=\"'groups' + accessMappingIndex\" class=\"control-label\">\n            {{ 'Default global roles' | translate }}\n          </label>\n          <c8y-select\n            [id]=\"'groups' + accessMappingIndex\"\n            [items]=\"groups\"\n            [selected]=\"selectedGroups\"\n            [disableApplyOnNoSelection]=\"true\"\n            (onChange)=\"selectedGroups = $event; accessMapping.thenGroups = getIds($event)\"\n          ></c8y-select>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div title=\"{{ 'Default applications' | translate }}\" class=\"form-group\">\n          <label [for]=\"'apps' + accessMappingIndex\" class=\"control-label\">\n            {{ 'Default applications' | translate }}\n          </label>\n          <c8y-select\n            [id]=\"'apps' + accessMappingIndex\"\n            [items]=\"apps\"\n            [selected]=\"selectedApps\"\n            [disableApplyOnNoSelection]=\"true\"\n            (onChange)=\"selectedApps = $event; accessMapping.thenApplications = getIds($event)\"\n          ></c8y-select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i1.SelectComponent, selector: "c8y-select", inputs: ["placeholder", "selectedLabel", "applyLabel", "items", "selected", "updateItems", "disableApplyOnNoSelection"], outputs: ["onChange"] }, { kind: "component", type: i3.ChildPredicatesComponent, selector: "c8y-sso-child-predicates", inputs: ["childPredicates", "accessMappingIndex"], outputs: ["onRemoveAllChildPredicates"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }], viewProviders: [{ provide: ControlContainer, useExisting: NgForm }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: DynamicAccessMappingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-sso-dynamic-access-mapping', viewProviders: [{ provide: ControlContainer, useExisting: NgForm }], template: "<div class=\"card\">\n  <div class=\"card-block overflow-visible\" *ngIf=\"accessMapping.when.childPredicates.length != 0\">\n    <c8y-sso-child-predicates\n      [childPredicates]=\"accessMapping.when.childPredicates\"\n      [accessMappingIndex]=\"'am' + accessMappingIndex\"\n      (onRemoveAllChildPredicates)=\"onRemoveAllChildPredicates()\"\n    ></c8y-sso-child-predicates>\n\n    <div class=\"legend form-block\" translate>Provide access to</div>\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div title=\"{{ 'Default global roles' | translate }}\" class=\"form-group\">\n          <label [for]=\"'groups' + accessMappingIndex\" class=\"control-label\">\n            {{ 'Default global roles' | translate }}\n          </label>\n          <c8y-select\n            [id]=\"'groups' + accessMappingIndex\"\n            [items]=\"groups\"\n            [selected]=\"selectedGroups\"\n            [disableApplyOnNoSelection]=\"true\"\n            (onChange)=\"selectedGroups = $event; accessMapping.thenGroups = getIds($event)\"\n          ></c8y-select>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div title=\"{{ 'Default applications' | translate }}\" class=\"form-group\">\n          <label [for]=\"'apps' + accessMappingIndex\" class=\"control-label\">\n            {{ 'Default applications' | translate }}\n          </label>\n          <c8y-select\n            [id]=\"'apps' + accessMappingIndex\"\n            [items]=\"apps\"\n            [selected]=\"selectedApps\"\n            [disableApplyOnNoSelection]=\"true\"\n            (onChange)=\"selectedApps = $event; accessMapping.thenApplications = getIds($event)\"\n          ></c8y-select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n" }]
        }], propDecorators: { groups: [{
                type: Input
            }], apps: [{
                type: Input
            }], accessMapping: [{
                type: Input
            }], onRemoveAccessMapping: [{
                type: Output
            }], accessMappingIndex: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1hY2Nlc3MtbWFwcGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9hdXRoLWNvbmZpZ3VyYXRpb24vc3NvLWNvbmZpZ3VyYXRpb24vdGVtcGxhdGUtcGFydHMvYWNjZXNzLW1hcHBpbmcvZHluYW1pYy1hY2Nlc3MtbWFwcGluZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9hdXRoLWNvbmZpZ3VyYXRpb24vc3NvLWNvbmZpZ3VyYXRpb24vdGVtcGxhdGUtcGFydHMvYWNjZXNzLW1hcHBpbmcvZHluYW1pYy1hY2Nlc3MtbWFwcGluZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7QUFTMUQsTUFBTSxPQUFPLDZCQUE2QjtJQUwxQztRQWFZLDBCQUFxQixHQUFnQyxJQUFJLFlBQVksRUFBRSxDQUFDO0tBZ0NuRjtJQTVCQyxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNsRCxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUN6QjtJQUNILENBQUM7SUFFRCwwQkFBMEI7UUFDeEIsSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELE1BQU0sQ0FBQyxhQUFhO1FBQ2xCLE9BQU8sYUFBYSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVPLGdCQUFnQjtRQUN0QixJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdEIsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRTtnQkFDakMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUM5QyxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUNoRCxDQUFDO2FBQ0g7WUFDRCxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLEVBQUU7Z0JBQ3ZDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FDMUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQ3ZELENBQUM7YUFDSDtTQUNGO0lBQ0gsQ0FBQzs7MEhBdkNVLDZCQUE2Qjs4R0FBN0IsNkJBQTZCLDhRQ1YxQyxtdURBeUNBLDByQkRqQ2lCLENBQUMsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxDQUFDOzJGQUV4RCw2QkFBNkI7a0JBTHpDLFNBQVM7K0JBQ0UsZ0NBQWdDLGlCQUUzQixDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQzs4QkFHMUQsTUFBTTtzQkFBZCxLQUFLO2dCQUdHLElBQUk7c0JBQVosS0FBSztnQkFHRyxhQUFhO3NCQUFyQixLQUFLO2dCQUNJLHFCQUFxQjtzQkFBOUIsTUFBTTtnQkFFRSxrQkFBa0I7c0JBQTFCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgSUFwcGxpY2F0aW9uLCBJVXNlckdyb3VwIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWNjZXNzTWFwcGluZyB9IGZyb20gJy4uLy4uL3Nzby1jb25maWd1cmF0aW9uLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXNzby1keW5hbWljLWFjY2Vzcy1tYXBwaW5nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2R5bmFtaWMtYWNjZXNzLW1hcHBpbmcuY29tcG9uZW50Lmh0bWwnLFxuICB2aWV3UHJvdmlkZXJzOiBbeyBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLCB1c2VFeGlzdGluZzogTmdGb3JtIH1dXG59KVxuZXhwb3J0IGNsYXNzIER5bmFtaWNBY2Nlc3NNYXBwaW5nQ29tcG9uZW50IHtcbiAgQElucHV0KCkgZ3JvdXBzOiBJVXNlckdyb3VwW107XG4gIHNlbGVjdGVkR3JvdXBzOiBJVXNlckdyb3VwW107XG5cbiAgQElucHV0KCkgYXBwczogSUFwcGxpY2F0aW9uW107XG4gIHNlbGVjdGVkQXBwczogSUFwcGxpY2F0aW9uW107XG5cbiAgQElucHV0KCkgYWNjZXNzTWFwcGluZzogQWNjZXNzTWFwcGluZztcbiAgQE91dHB1dCgpIG9uUmVtb3ZlQWNjZXNzTWFwcGluZzogRXZlbnRFbWl0dGVyPEFjY2Vzc01hcHBpbmc+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBJbnB1dCgpIGFjY2Vzc01hcHBpbmdJbmRleDogbnVtYmVyO1xuXG4gIG5nT25DaGFuZ2VzKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmFjY2Vzc01hcHBpbmcgJiYgdGhpcy5hcHBzICYmIHRoaXMuZ3JvdXBzKSB7XG4gICAgICB0aGlzLnNldFNlbGVjdGVkSXRlbXMoKTtcbiAgICB9XG4gIH1cblxuICBvblJlbW92ZUFsbENoaWxkUHJlZGljYXRlcygpIHtcbiAgICB0aGlzLm9uUmVtb3ZlQWNjZXNzTWFwcGluZy5lbWl0KHRoaXMuYWNjZXNzTWFwcGluZyk7XG4gIH1cblxuICBnZXRJZHMoc2VsZWN0ZWRJdGVtcykge1xuICAgIHJldHVybiBzZWxlY3RlZEl0ZW1zLm1hcChpdGVtID0+IHBhcnNlSW50KGl0ZW0uaWQsIDEwKSk7XG4gIH1cblxuICBwcml2YXRlIHNldFNlbGVjdGVkSXRlbXMoKSB7XG4gICAgaWYgKHRoaXMuYWNjZXNzTWFwcGluZykge1xuICAgICAgaWYgKHRoaXMuYWNjZXNzTWFwcGluZy50aGVuR3JvdXBzKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRHcm91cHMgPSB0aGlzLmdyb3Vwcy5maWx0ZXIoaXRlbSA9PlxuICAgICAgICAgIHRoaXMuYWNjZXNzTWFwcGluZy50aGVuR3JvdXBzLmluY2x1ZGVzKGl0ZW0uaWQpXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5hY2Nlc3NNYXBwaW5nLnRoZW5BcHBsaWNhdGlvbnMpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZEFwcHMgPSB0aGlzLmFwcHMuZmlsdGVyKGl0ZW0gPT5cbiAgICAgICAgICB0aGlzLmFjY2Vzc01hcHBpbmcudGhlbkFwcGxpY2F0aW9ucy5pbmNsdWRlcygraXRlbS5pZClcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gIDxkaXYgY2xhc3M9XCJjYXJkLWJsb2NrIG92ZXJmbG93LXZpc2libGVcIiAqbmdJZj1cImFjY2Vzc01hcHBpbmcud2hlbi5jaGlsZFByZWRpY2F0ZXMubGVuZ3RoICE9IDBcIj5cbiAgICA8Yzh5LXNzby1jaGlsZC1wcmVkaWNhdGVzXG4gICAgICBbY2hpbGRQcmVkaWNhdGVzXT1cImFjY2Vzc01hcHBpbmcud2hlbi5jaGlsZFByZWRpY2F0ZXNcIlxuICAgICAgW2FjY2Vzc01hcHBpbmdJbmRleF09XCInYW0nICsgYWNjZXNzTWFwcGluZ0luZGV4XCJcbiAgICAgIChvblJlbW92ZUFsbENoaWxkUHJlZGljYXRlcyk9XCJvblJlbW92ZUFsbENoaWxkUHJlZGljYXRlcygpXCJcbiAgICA+PC9jOHktc3NvLWNoaWxkLXByZWRpY2F0ZXM+XG5cbiAgICA8ZGl2IGNsYXNzPVwibGVnZW5kIGZvcm0tYmxvY2tcIiB0cmFuc2xhdGU+UHJvdmlkZSBhY2Nlc3MgdG88L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cbiAgICAgICAgPGRpdiB0aXRsZT1cInt7ICdEZWZhdWx0IGdsb2JhbCByb2xlcycgfCB0cmFuc2xhdGUgfX1cIiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICA8bGFiZWwgW2Zvcl09XCInZ3JvdXBzJyArIGFjY2Vzc01hcHBpbmdJbmRleFwiIGNsYXNzPVwiY29udHJvbC1sYWJlbFwiPlxuICAgICAgICAgICAge3sgJ0RlZmF1bHQgZ2xvYmFsIHJvbGVzJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgPGM4eS1zZWxlY3RcbiAgICAgICAgICAgIFtpZF09XCInZ3JvdXBzJyArIGFjY2Vzc01hcHBpbmdJbmRleFwiXG4gICAgICAgICAgICBbaXRlbXNdPVwiZ3JvdXBzXCJcbiAgICAgICAgICAgIFtzZWxlY3RlZF09XCJzZWxlY3RlZEdyb3Vwc1wiXG4gICAgICAgICAgICBbZGlzYWJsZUFwcGx5T25Ob1NlbGVjdGlvbl09XCJ0cnVlXCJcbiAgICAgICAgICAgIChvbkNoYW5nZSk9XCJzZWxlY3RlZEdyb3VwcyA9ICRldmVudDsgYWNjZXNzTWFwcGluZy50aGVuR3JvdXBzID0gZ2V0SWRzKCRldmVudClcIlxuICAgICAgICAgID48L2M4eS1zZWxlY3Q+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cbiAgICAgICAgPGRpdiB0aXRsZT1cInt7ICdEZWZhdWx0IGFwcGxpY2F0aW9ucycgfCB0cmFuc2xhdGUgfX1cIiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICA8bGFiZWwgW2Zvcl09XCInYXBwcycgKyBhY2Nlc3NNYXBwaW5nSW5kZXhcIiBjbGFzcz1cImNvbnRyb2wtbGFiZWxcIj5cbiAgICAgICAgICAgIHt7ICdEZWZhdWx0IGFwcGxpY2F0aW9ucycgfCB0cmFuc2xhdGUgfX1cbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDxjOHktc2VsZWN0XG4gICAgICAgICAgICBbaWRdPVwiJ2FwcHMnICsgYWNjZXNzTWFwcGluZ0luZGV4XCJcbiAgICAgICAgICAgIFtpdGVtc109XCJhcHBzXCJcbiAgICAgICAgICAgIFtzZWxlY3RlZF09XCJzZWxlY3RlZEFwcHNcIlxuICAgICAgICAgICAgW2Rpc2FibGVBcHBseU9uTm9TZWxlY3Rpb25dPVwidHJ1ZVwiXG4gICAgICAgICAgICAob25DaGFuZ2UpPVwic2VsZWN0ZWRBcHBzID0gJGV2ZW50OyBhY2Nlc3NNYXBwaW5nLnRoZW5BcHBsaWNhdGlvbnMgPSBnZXRJZHMoJGV2ZW50KVwiXG4gICAgICAgICAgPjwvYzh5LXNlbGVjdD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==