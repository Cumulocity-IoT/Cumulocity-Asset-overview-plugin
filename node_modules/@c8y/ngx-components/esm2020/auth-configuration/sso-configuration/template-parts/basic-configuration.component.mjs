import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
import { ControlContainer, NgForm } from '@angular/forms';
import { memoize } from '@c8y/ngx-components';
import { TenantService } from '@c8y/client';
import { defaults } from 'lodash-es';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
export class BasicConfigurationComponent {
    constructor(tenantService) {
        this.tenantService = tenantService;
    }
    shouldShow(field) {
        return field in this.templateModel;
    }
    async ngOnInit() {
        const currentTenant = (await this.tenantService.current()).data;
        const { domainName } = currentTenant;
        this.redirectToPlatformWarningParams = {
            host: `https://${domainName}`,
            defaultRedirectUrl: `https://${domainName}/tenant/oauth`
        };
        defaults(this.templateModel, {
            redirectToPlatform: this.redirectToPlatformWarningParams.defaultRedirectUrl
        });
    }
}
BasicConfigurationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: BasicConfigurationComponent, deps: [{ token: i1.TenantService }], target: i0.ɵɵFactoryTarget.Component });
BasicConfigurationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: BasicConfigurationComponent, selector: "c8y-basic-configuration", inputs: { templateModel: "templateModel" }, ngImport: i0, template: "<div class=\"col-md-12 p-t-24\">\n  <div class=\"row m-l-8 m-r-8\">\n    <div class=\"col-xs-12 col-sm-3 col-md-2\">\n      <h4 class=\"text-right text-left-xs\" translate>Basic</h4>\n    </div>\n\n    <div class=\"col-xs-12 col-sm-9 col-md-10 col-lg-9\" *ngIf=\"templateModel\">\n      <div class=\"row\" *ngIf=\"shouldShow('keyCloakAddress')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"keyCloakAddress\" class=\"control-label\" translate>Keycloak address</label>\n            <input\n              class=\"form-control\"\n              type=\"url\"\n              id=\"keyCloakAddress\"\n              name=\"keyCloakAddress\"\n              [(ngModel)]=\"templateModel.keyCloakAddress\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'https://example.de' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"shouldShow('aadAddress')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"aadAddress\" class=\"control-label\" translate>Azure AD address</label>\n            <input\n              class=\"form-control\"\n              type=\"url\"\n              id=\"aadAddress\"\n              name=\"aadAddress\"\n              [(ngModel)]=\"templateModel.aadAddress\"\n              [placeholder]=\"\n                'e.g. {{ example }}' | translate: { example: 'https://login.microsoftonline.de' }\n              \"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('tenant')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"tenant\" class=\"control-label\" translate>Tenant</label>\n            <input\n              class=\"form-control\"\n              id=\"tenant\"\n              name=\"tenant\"\n              [(ngModel)]=\"templateModel.tenant\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'c8y.onmicrosoft.de' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('applicationId')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"applicationId\" class=\"control-label\" translate>Application ID</label>\n            <input\n              class=\"form-control\"\n              required\n              id=\"applicationId\"\n              name=\"applicationId\"\n              [(ngModel)]=\"templateModel.applicationId\"\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('realmName')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"realmName\" class=\"control-label\" translate>Realm name</label>\n            <input\n              class=\"form-control\"\n              required\n              id=\"realmName\"\n              name=\"realmName\"\n              [(ngModel)]=\"templateModel.realmName\"\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('redirectToPlatform')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"redirectToPlatform\" class=\"control-label\" translate>Redirect URL</label>\n            <input\n              type=\"url\"\n              class=\"form-control\"\n              id=\"redirectToPlatform\"\n              name=\"redirectToPlatform\"\n              [(ngModel)]=\"templateModel.redirectToPlatform\"\n              [placeholder]=\"\n                'e.g. {{ example }}'\n                  | translate\n                    : {\n                        example:\n                          redirectToPlatformWarningParams?.defaultRedirectUrl ||\n                          'https://tenant.domain.com'\n                      }\n              \"\n              required\n            />\n          </c8y-form-group>\n\n          <div\n            *ngIf=\"\n              redirectToPlatformWarningParams &&\n              templateModel.redirectToPlatform != redirectToPlatformWarningParams.defaultRedirectUrl\n            \"\n          >\n            <div\n              class=\"alert alert-warning max-width-100 m-b-32\"\n              ngNonBindable\n              translate\n              [translateParams]=\"redirectToPlatformWarningParams\"\n            >\n              For correct application behavior you can use only {{ defaultRedirectUrl }} or\n              {{ host }} values, it is advised to use the first one.\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-6\" *ngIf=\"shouldShow('clientSecret')\">\n          <c8y-form-group>\n            <label for=\"clientSecret\" class=\"control-label\" translate>Client secret</label>\n            <input\n              class=\"form-control\"\n              required\n              id=\"clientSecret\"\n              name=\"clientSecret\"\n              [(ngModel)]=\"templateModel.clientSecret\"\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-6\" *ngIf=\"shouldShow('clientId')\">\n          <c8y-form-group>\n            <label for=\"clientId\" class=\"control-label\" translate>Client ID</label>\n            <input\n              class=\"form-control\"\n              id=\"clientId\"\n              name=\"clientId\"\n              [(ngModel)]=\"templateModel.clientId\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: '254234981c-78a8-4588\u2026' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('issuer')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"issuer\" class=\"control-label\" translate>Token issuer</label>\n            <input\n              class=\"form-control\"\n              id=\"issuer\"\n              name=\"issuer\"\n              [(ngModel)]=\"templateModel.issuer\"\n              [placeholder]=\"\n                'e.g. {{ example }}'\n                  | translate: { example: 'https://login.microsoftonline.de/237652-3727' }\n              \"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('scopeId')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"scopeId\" class=\"control-label\" translate>Scope ID</label>\n            <input\n              class=\"form-control\"\n              id=\"scopeId\"\n              name=\"scopeId\"\n              [(ngModel)]=\"templateModel.scopeId\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: '237652-3727' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-6\" *ngIf=\"shouldShow('buttonName')\">\n          <c8y-form-group>\n            <label for=\"buttonName\" class=\"control-label\" translate>Button name</label>\n            <input\n              class=\"form-control\"\n              id=\"buttonName\"\n              name=\"buttonName\"\n              [(ngModel)]=\"templateModel.buttonName\"\n              [placeholder]=\"'e.g. Log in with Azure AD' | translate\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-6\" *ngIf=\"shouldShow('providerName')\">\n          <c8y-form-group>\n            <label for=\"providerName\" class=\"control-label\" translate>Provider name</label>\n            <input\n              class=\"form-control\"\n              id=\"providerName\"\n              name=\"providerName\"\n              [(ngModel)]=\"templateModel.providerName\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'Azure AD' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('audience')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"audience\" class=\"control-label\" translate>Audience</label>\n            <input\n              class=\"form-control\"\n              id=\"audience\"\n              name=\"audience\"\n              [(ngModel)]=\"templateModel.audience\"\n              [placeholder]=\"\n                'e.g. {{ example }}' | translate: { example: 'https://test.example.com' }\n              \"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('visibleOnLoginPage')\">\n        <div class=\"col-sm-6\">\n          <label\n            for=\"visibleOnLoginPage\"\n            title=\"{{ 'Visible on login page' | translate }}\"\n            class=\"c8y-switch\"\n          >\n            <input\n              id=\"visibleOnLoginPage\"\n              name=\"visibleOnLoginPage\"\n              type=\"checkbox\"\n              [(ngModel)]=\"templateModel.visibleOnLoginPage\"\n            />\n            <span></span>\n            <span class=\"control-label\">{{ 'Visible on login page' | translate }}</span>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i2.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i2.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }], viewProviders: [{ provide: ControlContainer, useExisting: NgForm }] });
__decorate([
    memoize(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", void 0)
], BasicConfigurationComponent.prototype, "shouldShow", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: BasicConfigurationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-basic-configuration', viewProviders: [{ provide: ControlContainer, useExisting: NgForm }], template: "<div class=\"col-md-12 p-t-24\">\n  <div class=\"row m-l-8 m-r-8\">\n    <div class=\"col-xs-12 col-sm-3 col-md-2\">\n      <h4 class=\"text-right text-left-xs\" translate>Basic</h4>\n    </div>\n\n    <div class=\"col-xs-12 col-sm-9 col-md-10 col-lg-9\" *ngIf=\"templateModel\">\n      <div class=\"row\" *ngIf=\"shouldShow('keyCloakAddress')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"keyCloakAddress\" class=\"control-label\" translate>Keycloak address</label>\n            <input\n              class=\"form-control\"\n              type=\"url\"\n              id=\"keyCloakAddress\"\n              name=\"keyCloakAddress\"\n              [(ngModel)]=\"templateModel.keyCloakAddress\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'https://example.de' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"shouldShow('aadAddress')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"aadAddress\" class=\"control-label\" translate>Azure AD address</label>\n            <input\n              class=\"form-control\"\n              type=\"url\"\n              id=\"aadAddress\"\n              name=\"aadAddress\"\n              [(ngModel)]=\"templateModel.aadAddress\"\n              [placeholder]=\"\n                'e.g. {{ example }}' | translate: { example: 'https://login.microsoftonline.de' }\n              \"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('tenant')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"tenant\" class=\"control-label\" translate>Tenant</label>\n            <input\n              class=\"form-control\"\n              id=\"tenant\"\n              name=\"tenant\"\n              [(ngModel)]=\"templateModel.tenant\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'c8y.onmicrosoft.de' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('applicationId')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"applicationId\" class=\"control-label\" translate>Application ID</label>\n            <input\n              class=\"form-control\"\n              required\n              id=\"applicationId\"\n              name=\"applicationId\"\n              [(ngModel)]=\"templateModel.applicationId\"\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('realmName')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"realmName\" class=\"control-label\" translate>Realm name</label>\n            <input\n              class=\"form-control\"\n              required\n              id=\"realmName\"\n              name=\"realmName\"\n              [(ngModel)]=\"templateModel.realmName\"\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('redirectToPlatform')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"redirectToPlatform\" class=\"control-label\" translate>Redirect URL</label>\n            <input\n              type=\"url\"\n              class=\"form-control\"\n              id=\"redirectToPlatform\"\n              name=\"redirectToPlatform\"\n              [(ngModel)]=\"templateModel.redirectToPlatform\"\n              [placeholder]=\"\n                'e.g. {{ example }}'\n                  | translate\n                    : {\n                        example:\n                          redirectToPlatformWarningParams?.defaultRedirectUrl ||\n                          'https://tenant.domain.com'\n                      }\n              \"\n              required\n            />\n          </c8y-form-group>\n\n          <div\n            *ngIf=\"\n              redirectToPlatformWarningParams &&\n              templateModel.redirectToPlatform != redirectToPlatformWarningParams.defaultRedirectUrl\n            \"\n          >\n            <div\n              class=\"alert alert-warning max-width-100 m-b-32\"\n              ngNonBindable\n              translate\n              [translateParams]=\"redirectToPlatformWarningParams\"\n            >\n              For correct application behavior you can use only {{ defaultRedirectUrl }} or\n              {{ host }} values, it is advised to use the first one.\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-6\" *ngIf=\"shouldShow('clientSecret')\">\n          <c8y-form-group>\n            <label for=\"clientSecret\" class=\"control-label\" translate>Client secret</label>\n            <input\n              class=\"form-control\"\n              required\n              id=\"clientSecret\"\n              name=\"clientSecret\"\n              [(ngModel)]=\"templateModel.clientSecret\"\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-6\" *ngIf=\"shouldShow('clientId')\">\n          <c8y-form-group>\n            <label for=\"clientId\" class=\"control-label\" translate>Client ID</label>\n            <input\n              class=\"form-control\"\n              id=\"clientId\"\n              name=\"clientId\"\n              [(ngModel)]=\"templateModel.clientId\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: '254234981c-78a8-4588\u2026' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('issuer')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"issuer\" class=\"control-label\" translate>Token issuer</label>\n            <input\n              class=\"form-control\"\n              id=\"issuer\"\n              name=\"issuer\"\n              [(ngModel)]=\"templateModel.issuer\"\n              [placeholder]=\"\n                'e.g. {{ example }}'\n                  | translate: { example: 'https://login.microsoftonline.de/237652-3727' }\n              \"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('scopeId')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"scopeId\" class=\"control-label\" translate>Scope ID</label>\n            <input\n              class=\"form-control\"\n              id=\"scopeId\"\n              name=\"scopeId\"\n              [(ngModel)]=\"templateModel.scopeId\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: '237652-3727' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-6\" *ngIf=\"shouldShow('buttonName')\">\n          <c8y-form-group>\n            <label for=\"buttonName\" class=\"control-label\" translate>Button name</label>\n            <input\n              class=\"form-control\"\n              id=\"buttonName\"\n              name=\"buttonName\"\n              [(ngModel)]=\"templateModel.buttonName\"\n              [placeholder]=\"'e.g. Log in with Azure AD' | translate\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-6\" *ngIf=\"shouldShow('providerName')\">\n          <c8y-form-group>\n            <label for=\"providerName\" class=\"control-label\" translate>Provider name</label>\n            <input\n              class=\"form-control\"\n              id=\"providerName\"\n              name=\"providerName\"\n              [(ngModel)]=\"templateModel.providerName\"\n              [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'Azure AD' }\"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('audience')\">\n        <div class=\"col-sm-6\">\n          <c8y-form-group>\n            <label for=\"audience\" class=\"control-label\" translate>Audience</label>\n            <input\n              class=\"form-control\"\n              id=\"audience\"\n              name=\"audience\"\n              [(ngModel)]=\"templateModel.audience\"\n              [placeholder]=\"\n                'e.g. {{ example }}' | translate: { example: 'https://test.example.com' }\n              \"\n              required\n            />\n          </c8y-form-group>\n        </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"shouldShow('visibleOnLoginPage')\">\n        <div class=\"col-sm-6\">\n          <label\n            for=\"visibleOnLoginPage\"\n            title=\"{{ 'Visible on login page' | translate }}\"\n            class=\"c8y-switch\"\n          >\n            <input\n              id=\"visibleOnLoginPage\"\n              name=\"visibleOnLoginPage\"\n              type=\"checkbox\"\n              [(ngModel)]=\"templateModel.visibleOnLoginPage\"\n            />\n            <span></span>\n            <span class=\"control-label\">{{ 'Visible on login page' | translate }}</span>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.TenantService }]; }, propDecorators: { templateModel: [{
                type: Input
            }], shouldShow: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzaWMtY29uZmlndXJhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9hdXRoLWNvbmZpZ3VyYXRpb24vc3NvLWNvbmZpZ3VyYXRpb24vdGVtcGxhdGUtcGFydHMvYmFzaWMtY29uZmlndXJhdGlvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9hdXRoLWNvbmZpZ3VyYXRpb24vc3NvLWNvbmZpZ3VyYXRpb24vdGVtcGxhdGUtcGFydHMvYmFzaWMtY29uZmlndXJhdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzFELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzVDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7OztBQU9yQyxNQUFNLE9BQU8sMkJBQTJCO0lBS3RDLFlBQW9CLGFBQTRCO1FBQTVCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO0lBQUcsQ0FBQztJQUdwRCxVQUFVLENBQUMsS0FBYTtRQUN0QixPQUFPLEtBQUssSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxLQUFLLENBQUMsUUFBUTtRQUNaLE1BQU0sYUFBYSxHQUFHLENBQUMsTUFBTSxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2hFLE1BQU0sRUFBRSxVQUFVLEVBQUUsR0FBRyxhQUFhLENBQUM7UUFDckMsSUFBSSxDQUFDLCtCQUErQixHQUFHO1lBQ3JDLElBQUksRUFBRSxXQUFXLFVBQVUsRUFBRTtZQUM3QixrQkFBa0IsRUFBRSxXQUFXLFVBQVUsZUFBZTtTQUN6RCxDQUFDO1FBQ0YsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDM0Isa0JBQWtCLEVBQUUsSUFBSSxDQUFDLCtCQUErQixDQUFDLGtCQUFrQjtTQUM1RSxDQUFDLENBQUM7SUFDTCxDQUFDOzt3SEF0QlUsMkJBQTJCOzRHQUEzQiwyQkFBMkIsMkdDWHhDLG00U0EyUUEsdWhERGxRaUIsQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFVbkU7SUFEQyxPQUFPLEVBQUU7Ozs7NkRBR1Q7MkZBVlUsMkJBQTJCO2tCQUx2QyxTQUFTOytCQUNFLHlCQUF5QixpQkFFcEIsQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLENBQUM7b0dBRzFELGFBQWE7c0JBQXJCLEtBQUs7Z0JBT04sVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgbWVtb2l6ZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgVGVuYW50U2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSAnbG9kYXNoLWVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWJhc2ljLWNvbmZpZ3VyYXRpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vYmFzaWMtY29uZmlndXJhdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gIHZpZXdQcm92aWRlcnM6IFt7IHByb3ZpZGU6IENvbnRyb2xDb250YWluZXIsIHVzZUV4aXN0aW5nOiBOZ0Zvcm0gfV1cbn0pXG5leHBvcnQgY2xhc3MgQmFzaWNDb25maWd1cmF0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgdGVtcGxhdGVNb2RlbDtcblxuICByZWRpcmVjdFRvUGxhdGZvcm1XYXJuaW5nUGFyYW1zOiB7IGRlZmF1bHRSZWRpcmVjdFVybDogc3RyaW5nOyBob3N0Pzogc3RyaW5nIH07XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0ZW5hbnRTZXJ2aWNlOiBUZW5hbnRTZXJ2aWNlKSB7fVxuXG4gIEBtZW1vaXplKClcbiAgc2hvdWxkU2hvdyhmaWVsZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGZpZWxkIGluIHRoaXMudGVtcGxhdGVNb2RlbDtcbiAgfVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIGNvbnN0IGN1cnJlbnRUZW5hbnQgPSAoYXdhaXQgdGhpcy50ZW5hbnRTZXJ2aWNlLmN1cnJlbnQoKSkuZGF0YTtcbiAgICBjb25zdCB7IGRvbWFpbk5hbWUgfSA9IGN1cnJlbnRUZW5hbnQ7XG4gICAgdGhpcy5yZWRpcmVjdFRvUGxhdGZvcm1XYXJuaW5nUGFyYW1zID0ge1xuICAgICAgaG9zdDogYGh0dHBzOi8vJHtkb21haW5OYW1lfWAsXG4gICAgICBkZWZhdWx0UmVkaXJlY3RVcmw6IGBodHRwczovLyR7ZG9tYWluTmFtZX0vdGVuYW50L29hdXRoYFxuICAgIH07XG4gICAgZGVmYXVsdHModGhpcy50ZW1wbGF0ZU1vZGVsLCB7XG4gICAgICByZWRpcmVjdFRvUGxhdGZvcm06IHRoaXMucmVkaXJlY3RUb1BsYXRmb3JtV2FybmluZ1BhcmFtcy5kZWZhdWx0UmVkaXJlY3RVcmxcbiAgICB9KTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImNvbC1tZC0xMiBwLXQtMjRcIj5cbiAgPGRpdiBjbGFzcz1cInJvdyBtLWwtOCBtLXItOFwiPlxuICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLXNtLTMgY29sLW1kLTJcIj5cbiAgICAgIDxoNCBjbGFzcz1cInRleHQtcmlnaHQgdGV4dC1sZWZ0LXhzXCIgdHJhbnNsYXRlPkJhc2ljPC9oND5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLXNtLTkgY29sLW1kLTEwIGNvbC1sZy05XCIgKm5nSWY9XCJ0ZW1wbGF0ZU1vZGVsXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwicm93XCIgKm5nSWY9XCJzaG91bGRTaG93KCdrZXlDbG9ha0FkZHJlc3MnKVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cbiAgICAgICAgICA8Yzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwia2V5Q2xvYWtBZGRyZXNzXCIgY2xhc3M9XCJjb250cm9sLWxhYmVsXCIgdHJhbnNsYXRlPktleWNsb2FrIGFkZHJlc3M8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgdHlwZT1cInVybFwiXG4gICAgICAgICAgICAgIGlkPVwia2V5Q2xvYWtBZGRyZXNzXCJcbiAgICAgICAgICAgICAgbmFtZT1cImtleUNsb2FrQWRkcmVzc1wiXG4gICAgICAgICAgICAgIFsobmdNb2RlbCldPVwidGVtcGxhdGVNb2RlbC5rZXlDbG9ha0FkZHJlc3NcIlxuICAgICAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwiJ2UuZy4ge3sgZXhhbXBsZSB9fScgfCB0cmFuc2xhdGU6IHsgZXhhbXBsZTogJ2h0dHBzOi8vZXhhbXBsZS5kZScgfVwiXG4gICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvYzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwicm93XCIgKm5nSWY9XCJzaG91bGRTaG93KCdhYWRBZGRyZXNzJylcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS02XCI+XG4gICAgICAgICAgPGM4eS1mb3JtLWdyb3VwPlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cImFhZEFkZHJlc3NcIiBjbGFzcz1cImNvbnRyb2wtbGFiZWxcIiB0cmFuc2xhdGU+QXp1cmUgQUQgYWRkcmVzczwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICB0eXBlPVwidXJsXCJcbiAgICAgICAgICAgICAgaWQ9XCJhYWRBZGRyZXNzXCJcbiAgICAgICAgICAgICAgbmFtZT1cImFhZEFkZHJlc3NcIlxuICAgICAgICAgICAgICBbKG5nTW9kZWwpXT1cInRlbXBsYXRlTW9kZWwuYWFkQWRkcmVzc1wiXG4gICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCJcbiAgICAgICAgICAgICAgICAnZS5nLiB7eyBleGFtcGxlIH19JyB8IHRyYW5zbGF0ZTogeyBleGFtcGxlOiAnaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuZGUnIH1cbiAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9jOHktZm9ybS1ncm91cD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInJvd1wiICpuZ0lmPVwic2hvdWxkU2hvdygndGVuYW50JylcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS02XCI+XG4gICAgICAgICAgPGM4eS1mb3JtLWdyb3VwPlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cInRlbmFudFwiIGNsYXNzPVwiY29udHJvbC1sYWJlbFwiIHRyYW5zbGF0ZT5UZW5hbnQ8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgaWQ9XCJ0ZW5hbnRcIlxuICAgICAgICAgICAgICBuYW1lPVwidGVuYW50XCJcbiAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ0ZW1wbGF0ZU1vZGVsLnRlbmFudFwiXG4gICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCInZS5nLiB7eyBleGFtcGxlIH19JyB8IHRyYW5zbGF0ZTogeyBleGFtcGxlOiAnYzh5Lm9ubWljcm9zb2Z0LmRlJyB9XCJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9jOHktZm9ybS1ncm91cD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInJvd1wiICpuZ0lmPVwic2hvdWxkU2hvdygnYXBwbGljYXRpb25JZCcpXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiPlxuICAgICAgICAgIDxjOHktZm9ybS1ncm91cD5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJhcHBsaWNhdGlvbklkXCIgY2xhc3M9XCJjb250cm9sLWxhYmVsXCIgdHJhbnNsYXRlPkFwcGxpY2F0aW9uIElEPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgIGlkPVwiYXBwbGljYXRpb25JZFwiXG4gICAgICAgICAgICAgIG5hbWU9XCJhcHBsaWNhdGlvbklkXCJcbiAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ0ZW1wbGF0ZU1vZGVsLmFwcGxpY2F0aW9uSWRcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2M4eS1mb3JtLWdyb3VwPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzPVwicm93XCIgKm5nSWY9XCJzaG91bGRTaG93KCdyZWFsbU5hbWUnKVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cbiAgICAgICAgICA8Yzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwicmVhbG1OYW1lXCIgY2xhc3M9XCJjb250cm9sLWxhYmVsXCIgdHJhbnNsYXRlPlJlYWxtIG5hbWU8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgaWQ9XCJyZWFsbU5hbWVcIlxuICAgICAgICAgICAgICBuYW1lPVwicmVhbG1OYW1lXCJcbiAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ0ZW1wbGF0ZU1vZGVsLnJlYWxtTmFtZVwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvYzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIiAqbmdJZj1cInNob3VsZFNob3coJ3JlZGlyZWN0VG9QbGF0Zm9ybScpXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiPlxuICAgICAgICAgIDxjOHktZm9ybS1ncm91cD5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJyZWRpcmVjdFRvUGxhdGZvcm1cIiBjbGFzcz1cImNvbnRyb2wtbGFiZWxcIiB0cmFuc2xhdGU+UmVkaXJlY3QgVVJMPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICB0eXBlPVwidXJsXCJcbiAgICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICBpZD1cInJlZGlyZWN0VG9QbGF0Zm9ybVwiXG4gICAgICAgICAgICAgIG5hbWU9XCJyZWRpcmVjdFRvUGxhdGZvcm1cIlxuICAgICAgICAgICAgICBbKG5nTW9kZWwpXT1cInRlbXBsYXRlTW9kZWwucmVkaXJlY3RUb1BsYXRmb3JtXCJcbiAgICAgICAgICAgICAgW3BsYWNlaG9sZGVyXT1cIlxuICAgICAgICAgICAgICAgICdlLmcuIHt7IGV4YW1wbGUgfX0nXG4gICAgICAgICAgICAgICAgICB8IHRyYW5zbGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4YW1wbGU6XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0VG9QbGF0Zm9ybVdhcm5pbmdQYXJhbXM/LmRlZmF1bHRSZWRpcmVjdFVybCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnaHR0cHM6Ly90ZW5hbnQuZG9tYWluLmNvbSdcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvYzh5LWZvcm0tZ3JvdXA+XG5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAqbmdJZj1cIlxuICAgICAgICAgICAgICByZWRpcmVjdFRvUGxhdGZvcm1XYXJuaW5nUGFyYW1zICYmXG4gICAgICAgICAgICAgIHRlbXBsYXRlTW9kZWwucmVkaXJlY3RUb1BsYXRmb3JtICE9IHJlZGlyZWN0VG9QbGF0Zm9ybVdhcm5pbmdQYXJhbXMuZGVmYXVsdFJlZGlyZWN0VXJsXG4gICAgICAgICAgICBcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY2xhc3M9XCJhbGVydCBhbGVydC13YXJuaW5nIG1heC13aWR0aC0xMDAgbS1iLTMyXCJcbiAgICAgICAgICAgICAgbmdOb25CaW5kYWJsZVxuICAgICAgICAgICAgICB0cmFuc2xhdGVcbiAgICAgICAgICAgICAgW3RyYW5zbGF0ZVBhcmFtc109XCJyZWRpcmVjdFRvUGxhdGZvcm1XYXJuaW5nUGFyYW1zXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgRm9yIGNvcnJlY3QgYXBwbGljYXRpb24gYmVoYXZpb3IgeW91IGNhbiB1c2Ugb25seSB7eyBkZWZhdWx0UmVkaXJlY3RVcmwgfX0gb3JcbiAgICAgICAgICAgICAge3sgaG9zdCB9fSB2YWx1ZXMsIGl0IGlzIGFkdmlzZWQgdG8gdXNlIHRoZSBmaXJzdCBvbmUuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIiAqbmdJZj1cInNob3VsZFNob3coJ2NsaWVudFNlY3JldCcpXCI+XG4gICAgICAgICAgPGM4eS1mb3JtLWdyb3VwPlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cImNsaWVudFNlY3JldFwiIGNsYXNzPVwiY29udHJvbC1sYWJlbFwiIHRyYW5zbGF0ZT5DbGllbnQgc2VjcmV0PC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgIGlkPVwiY2xpZW50U2VjcmV0XCJcbiAgICAgICAgICAgICAgbmFtZT1cImNsaWVudFNlY3JldFwiXG4gICAgICAgICAgICAgIFsobmdNb2RlbCldPVwidGVtcGxhdGVNb2RlbC5jbGllbnRTZWNyZXRcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2M4eS1mb3JtLWdyb3VwPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiICpuZ0lmPVwic2hvdWxkU2hvdygnY2xpZW50SWQnKVwiPlxuICAgICAgICAgIDxjOHktZm9ybS1ncm91cD5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJjbGllbnRJZFwiIGNsYXNzPVwiY29udHJvbC1sYWJlbFwiIHRyYW5zbGF0ZT5DbGllbnQgSUQ8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgaWQ9XCJjbGllbnRJZFwiXG4gICAgICAgICAgICAgIG5hbWU9XCJjbGllbnRJZFwiXG4gICAgICAgICAgICAgIFsobmdNb2RlbCldPVwidGVtcGxhdGVNb2RlbC5jbGllbnRJZFwiXG4gICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCInZS5nLiB7eyBleGFtcGxlIH19JyB8IHRyYW5zbGF0ZTogeyBleGFtcGxlOiAnMjU0MjM0OTgxYy03OGE4LTQ1ODjigKYnIH1cIlxuICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2M4eS1mb3JtLWdyb3VwPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzPVwicm93XCIgKm5nSWY9XCJzaG91bGRTaG93KCdpc3N1ZXInKVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cbiAgICAgICAgICA8Yzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwiaXNzdWVyXCIgY2xhc3M9XCJjb250cm9sLWxhYmVsXCIgdHJhbnNsYXRlPlRva2VuIGlzc3VlcjwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICBpZD1cImlzc3VlclwiXG4gICAgICAgICAgICAgIG5hbWU9XCJpc3N1ZXJcIlxuICAgICAgICAgICAgICBbKG5nTW9kZWwpXT1cInRlbXBsYXRlTW9kZWwuaXNzdWVyXCJcbiAgICAgICAgICAgICAgW3BsYWNlaG9sZGVyXT1cIlxuICAgICAgICAgICAgICAgICdlLmcuIHt7IGV4YW1wbGUgfX0nXG4gICAgICAgICAgICAgICAgICB8IHRyYW5zbGF0ZTogeyBleGFtcGxlOiAnaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuZGUvMjM3NjUyLTM3MjcnIH1cbiAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9jOHktZm9ybS1ncm91cD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInJvd1wiICpuZ0lmPVwic2hvdWxkU2hvdygnc2NvcGVJZCcpXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiPlxuICAgICAgICAgIDxjOHktZm9ybS1ncm91cD5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJzY29wZUlkXCIgY2xhc3M9XCJjb250cm9sLWxhYmVsXCIgdHJhbnNsYXRlPlNjb3BlIElEPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgIGlkPVwic2NvcGVJZFwiXG4gICAgICAgICAgICAgIG5hbWU9XCJzY29wZUlkXCJcbiAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ0ZW1wbGF0ZU1vZGVsLnNjb3BlSWRcIlxuICAgICAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwiJ2UuZy4ge3sgZXhhbXBsZSB9fScgfCB0cmFuc2xhdGU6IHsgZXhhbXBsZTogJzIzNzY1Mi0zNzI3JyB9XCJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9jOHktZm9ybS1ncm91cD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIiAqbmdJZj1cInNob3VsZFNob3coJ2J1dHRvbk5hbWUnKVwiPlxuICAgICAgICAgIDxjOHktZm9ybS1ncm91cD5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJidXR0b25OYW1lXCIgY2xhc3M9XCJjb250cm9sLWxhYmVsXCIgdHJhbnNsYXRlPkJ1dHRvbiBuYW1lPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgIGlkPVwiYnV0dG9uTmFtZVwiXG4gICAgICAgICAgICAgIG5hbWU9XCJidXR0b25OYW1lXCJcbiAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ0ZW1wbGF0ZU1vZGVsLmJ1dHRvbk5hbWVcIlxuICAgICAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwiJ2UuZy4gTG9nIGluIHdpdGggQXp1cmUgQUQnIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9jOHktZm9ybS1ncm91cD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIiAqbmdJZj1cInNob3VsZFNob3coJ3Byb3ZpZGVyTmFtZScpXCI+XG4gICAgICAgICAgPGM4eS1mb3JtLWdyb3VwPlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cInByb3ZpZGVyTmFtZVwiIGNsYXNzPVwiY29udHJvbC1sYWJlbFwiIHRyYW5zbGF0ZT5Qcm92aWRlciBuYW1lPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgIGlkPVwicHJvdmlkZXJOYW1lXCJcbiAgICAgICAgICAgICAgbmFtZT1cInByb3ZpZGVyTmFtZVwiXG4gICAgICAgICAgICAgIFsobmdNb2RlbCldPVwidGVtcGxhdGVNb2RlbC5wcm92aWRlck5hbWVcIlxuICAgICAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwiJ2UuZy4ge3sgZXhhbXBsZSB9fScgfCB0cmFuc2xhdGU6IHsgZXhhbXBsZTogJ0F6dXJlIEFEJyB9XCJcbiAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9jOHktZm9ybS1ncm91cD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInJvd1wiICpuZ0lmPVwic2hvdWxkU2hvdygnYXVkaWVuY2UnKVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cbiAgICAgICAgICA8Yzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwiYXVkaWVuY2VcIiBjbGFzcz1cImNvbnRyb2wtbGFiZWxcIiB0cmFuc2xhdGU+QXVkaWVuY2U8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgaWQ9XCJhdWRpZW5jZVwiXG4gICAgICAgICAgICAgIG5hbWU9XCJhdWRpZW5jZVwiXG4gICAgICAgICAgICAgIFsobmdNb2RlbCldPVwidGVtcGxhdGVNb2RlbC5hdWRpZW5jZVwiXG4gICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCJcbiAgICAgICAgICAgICAgICAnZS5nLiB7eyBleGFtcGxlIH19JyB8IHRyYW5zbGF0ZTogeyBleGFtcGxlOiAnaHR0cHM6Ly90ZXN0LmV4YW1wbGUuY29tJyB9XG4gICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvYzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIiAqbmdJZj1cInNob3VsZFNob3coJ3Zpc2libGVPbkxvZ2luUGFnZScpXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgZm9yPVwidmlzaWJsZU9uTG9naW5QYWdlXCJcbiAgICAgICAgICAgIHRpdGxlPVwie3sgJ1Zpc2libGUgb24gbG9naW4gcGFnZScgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICAgICAgY2xhc3M9XCJjOHktc3dpdGNoXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgaWQ9XCJ2aXNpYmxlT25Mb2dpblBhZ2VcIlxuICAgICAgICAgICAgICBuYW1lPVwidmlzaWJsZU9uTG9naW5QYWdlXCJcbiAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ0ZW1wbGF0ZU1vZGVsLnZpc2libGVPbkxvZ2luUGFnZVwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJjb250cm9sLWxhYmVsXCI+e3sgJ1Zpc2libGUgb24gbG9naW4gcGFnZScgfCB0cmFuc2xhdGUgfX08L3NwYW4+XG4gICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==