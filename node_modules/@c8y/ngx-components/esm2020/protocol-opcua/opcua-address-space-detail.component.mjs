import { Component, Input, Output, EventEmitter } from '@angular/core';
import { AddressSpaceService } from './address-space.service';
import { omit } from 'lodash-es';
import * as i0 from "@angular/core";
import * as i1 from "./address-space.service";
import * as i2 from "@angular/common";
import * as i3 from "@c8y/ngx-components";
export class OpcuaAddressSpaceDetailComponent {
    constructor(addressSpaceService) {
        this.addressSpaceService = addressSpaceService;
        this.selected = false;
        this.showDetails = false;
        this.toggleAttrDetail = new EventEmitter();
    }
    set node(n) {
        this._node = n;
        if (n) {
            this.setNodeData(n);
        }
        else {
            // remove details from current view
            this.showDetails = false;
        }
    }
    setNodeData(nodeData) {
        this.showDetails = true;
        const { attributes, references } = nodeData;
        this.nodeDataRef = references;
        const omitList = [
            'attributes',
            'references',
            'children',
            'currentlyLoadingChildren',
            'expanded',
            'browsePath',
            'relativePath',
            'parentNode'
        ];
        this.nodeDataAttr = Object.assign({}, attributes, omit(nodeData, omitList));
    }
    toggleDetail(node) {
        this.showDetails = !this.showDetails;
        this.toggleAttrDetail.emit(node);
    }
    navigateTo(ancestors) {
        const nodeNavData = {
            node: this._node,
            selectedAncestorIds: ancestors
        };
        this.toggleDetail(this._node);
        this.addressSpaceService.triggerNodeToOpen(nodeNavData);
    }
}
OpcuaAddressSpaceDetailComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: OpcuaAddressSpaceDetailComponent, deps: [{ token: i1.AddressSpaceService }], target: i0.ɵɵFactoryTarget.Component });
OpcuaAddressSpaceDetailComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: OpcuaAddressSpaceDetailComponent, selector: "opcua-address-space-detail", inputs: { node: "node" }, outputs: { toggleAttrDetail: "toggleAttrDetail" }, ngImport: i0, template: "<div\n  class=\"card flex-scroll m-b-4 split-row-2 animated fast\"\n  style=\"pointer-events: all\"\n  [ngClass]=\"{ fadeInRightBig: showDetails, fadeOutRightBig: !showDetails }\"\n>\n  <div class=\"card-header separator \">\n    <h4>{{ 'Attributes' | translate }}</h4>\n    <button\n      class=\"close m-l-auto visible-sm visible-xs\"\n      title=\"{{ 'Close' | translate }}\"\n      (click)=\"toggleDetail(nodeDataAttr)\"\n    >\n      &times;\n    </button>\n  </div>\n  <div class=\"card-inner-scroll\">\n    <div class=\"card-block\">\n      <table class=\"table table-striped table-condensed\">\n        <colgroup>\n          <col width=\"50%\" />\n          <col width=\"50%\" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th>{{ 'Attribute' | translate }}</th>\n            <th>{{ 'Value' | translate }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of nodeDataAttr | keyvalue\">\n            <td>{{ item.key }}</td>\n            <td *ngIf=\"item.key === 'absolutePaths'\" class=\"text-break-word\">\n              {{ item.value | json }}\n            </td>\n            <td *ngIf=\"item.key === 'ancestorNodeIds'\" class=\"text-break-word\">\n              <a *ngFor=\"let value of item.value\" (click)=\"navigateTo(value)\">\n                {{ value | json }}</a\n              >\n            </td>\n            <td *ngIf=\"item.key !== 'absolutePaths' && item.key !== 'ancestorNodeIds'\">\n              {{ item.value }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<div\n  class=\"card flex-scroll split-row-2 animated fast\"\n  style=\"pointer-events: all\"\n  [ngClass]=\"{ fadeInRightBig: showDetails, fadeOutRightBig: !showDetails }\"\n>\n  <div class=\"card-header separator\">\n    <h4>{{ 'References' | translate }}</h4>\n  </div>\n  <div class=\"card-inner-scroll\">\n    <div class=\"card-block\">\n      <table class=\"table table-striped table-condensed\">\n        <colgroup>\n          <col width=\"50%\" />\n          <col width=\"50%\" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th>{{ 'Attribute' | translate }}</th>\n            <th>{{ 'Value' | translate }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of nodeDataRef\">\n            <td>{{ item.referenceLabel }}</td>\n            <td class=\"text-break-word\">{{ item.targetLabel }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i2.JsonPipe, name: "json" }, { kind: "pipe", type: i2.KeyValuePipe, name: "keyvalue" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: OpcuaAddressSpaceDetailComponent, decorators: [{
            type: Component,
            args: [{ selector: 'opcua-address-space-detail', template: "<div\n  class=\"card flex-scroll m-b-4 split-row-2 animated fast\"\n  style=\"pointer-events: all\"\n  [ngClass]=\"{ fadeInRightBig: showDetails, fadeOutRightBig: !showDetails }\"\n>\n  <div class=\"card-header separator \">\n    <h4>{{ 'Attributes' | translate }}</h4>\n    <button\n      class=\"close m-l-auto visible-sm visible-xs\"\n      title=\"{{ 'Close' | translate }}\"\n      (click)=\"toggleDetail(nodeDataAttr)\"\n    >\n      &times;\n    </button>\n  </div>\n  <div class=\"card-inner-scroll\">\n    <div class=\"card-block\">\n      <table class=\"table table-striped table-condensed\">\n        <colgroup>\n          <col width=\"50%\" />\n          <col width=\"50%\" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th>{{ 'Attribute' | translate }}</th>\n            <th>{{ 'Value' | translate }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of nodeDataAttr | keyvalue\">\n            <td>{{ item.key }}</td>\n            <td *ngIf=\"item.key === 'absolutePaths'\" class=\"text-break-word\">\n              {{ item.value | json }}\n            </td>\n            <td *ngIf=\"item.key === 'ancestorNodeIds'\" class=\"text-break-word\">\n              <a *ngFor=\"let value of item.value\" (click)=\"navigateTo(value)\">\n                {{ value | json }}</a\n              >\n            </td>\n            <td *ngIf=\"item.key !== 'absolutePaths' && item.key !== 'ancestorNodeIds'\">\n              {{ item.value }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<div\n  class=\"card flex-scroll split-row-2 animated fast\"\n  style=\"pointer-events: all\"\n  [ngClass]=\"{ fadeInRightBig: showDetails, fadeOutRightBig: !showDetails }\"\n>\n  <div class=\"card-header separator\">\n    <h4>{{ 'References' | translate }}</h4>\n  </div>\n  <div class=\"card-inner-scroll\">\n    <div class=\"card-block\">\n      <table class=\"table table-striped table-condensed\">\n        <colgroup>\n          <col width=\"50%\" />\n          <col width=\"50%\" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th>{{ 'Attribute' | translate }}</th>\n            <th>{{ 'Value' | translate }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of nodeDataRef\">\n            <td>{{ item.referenceLabel }}</td>\n            <td class=\"text-break-word\">{{ item.targetLabel }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AddressSpaceService }]; }, propDecorators: { node: [{
                type: Input
            }], toggleAttrDetail: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BjdWEtYWRkcmVzcy1zcGFjZS1kZXRhaWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvdG9jb2wtb3BjdWEvb3BjdWEtYWRkcmVzcy1zcGFjZS1kZXRhaWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vcHJvdG9jb2wtb3BjdWEvb3BjdWEtYWRkcmVzcy1zcGFjZS1kZXRhaWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQW9CLG1CQUFtQixFQUFzQixNQUFNLHlCQUF5QixDQUFDO0FBQ3BHLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7O0FBTWpDLE1BQU0sT0FBTyxnQ0FBZ0M7SUFtQjNDLFlBQW9CLG1CQUF3QztRQUF4Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBUDVELGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsZ0JBQVcsR0FBRyxLQUFLLENBQUM7UUFFVixxQkFBZ0IsR0FBbUMsSUFBSSxZQUFZLEVBQW9CLENBQUM7SUFJbkMsQ0FBQztJQWxCaEUsSUFBYSxJQUFJLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxFQUFFO1lBQ0wsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNyQjthQUFNO1lBQ0wsbUNBQW1DO1lBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1NBQzFCO0lBQ0gsQ0FBQztJQVdELFdBQVcsQ0FBQyxRQUFRO1FBQ2xCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLE1BQU0sRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEdBQUcsUUFBUSxDQUFDO1FBQzVDLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO1FBQzlCLE1BQU0sUUFBUSxHQUFHO1lBQ2YsWUFBWTtZQUNaLFlBQVk7WUFDWixVQUFVO1lBQ1YsMEJBQTBCO1lBQzFCLFVBQVU7WUFDVixZQUFZO1lBQ1osY0FBYztZQUNkLFlBQVk7U0FDYixDQUFDO1FBQ0YsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFRCxZQUFZLENBQUMsSUFBSTtRQUNmLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELFVBQVUsQ0FBQyxTQUFtQjtRQUM1QixNQUFNLFdBQVcsR0FBdUI7WUFDdEMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ2hCLG1CQUFtQixFQUFFLFNBQVM7U0FDL0IsQ0FBQztRQUVGLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMxRCxDQUFDOzs2SEFsRFUsZ0NBQWdDO2lIQUFoQyxnQ0FBZ0MsK0lDUjdDLHkvRUErRUE7MkZEdkVhLGdDQUFnQztrQkFKNUMsU0FBUzsrQkFDRSw0QkFBNEI7MEdBSXpCLElBQUk7c0JBQWhCLEtBQUs7Z0JBY0ksZ0JBQWdCO3NCQUF6QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFkZHJlc3NTcGFjZU5vZGUsIEFkZHJlc3NTcGFjZVNlcnZpY2UsIE5vZGVOYXZpZ2F0aW9uRGF0YSB9IGZyb20gJy4vYWRkcmVzcy1zcGFjZS5zZXJ2aWNlJztcbmltcG9ydCB7IG9taXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdvcGN1YS1hZGRyZXNzLXNwYWNlLWRldGFpbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9vcGN1YS1hZGRyZXNzLXNwYWNlLWRldGFpbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgT3BjdWFBZGRyZXNzU3BhY2VEZXRhaWxDb21wb25lbnQge1xuICBASW5wdXQoKSBzZXQgbm9kZShuKSB7XG4gICAgdGhpcy5fbm9kZSA9IG47XG4gICAgaWYgKG4pIHtcbiAgICAgIHRoaXMuc2V0Tm9kZURhdGEobik7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHJlbW92ZSBkZXRhaWxzIGZyb20gY3VycmVudCB2aWV3XG4gICAgICB0aGlzLnNob3dEZXRhaWxzID0gZmFsc2U7XG4gICAgfVxuICB9XG4gIG5vZGVEYXRhQXR0cjogTWFwPHN0cmluZywgc3RyaW5nPjtcbiAgbm9kZURhdGFSZWY6IG9iamVjdFtdO1xuICBzZWxlY3RlZCA9IGZhbHNlO1xuICBzaG93RGV0YWlscyA9IGZhbHNlO1xuXG4gIEBPdXRwdXQoKSB0b2dnbGVBdHRyRGV0YWlsOiBFdmVudEVtaXR0ZXI8QWRkcmVzc1NwYWNlTm9kZT4gPSBuZXcgRXZlbnRFbWl0dGVyPEFkZHJlc3NTcGFjZU5vZGU+KCk7XG5cbiAgcHJpdmF0ZSBfbm9kZTogQWRkcmVzc1NwYWNlTm9kZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFkZHJlc3NTcGFjZVNlcnZpY2U6IEFkZHJlc3NTcGFjZVNlcnZpY2UpIHt9XG4gIHNldE5vZGVEYXRhKG5vZGVEYXRhKSB7XG4gICAgdGhpcy5zaG93RGV0YWlscyA9IHRydWU7XG4gICAgY29uc3QgeyBhdHRyaWJ1dGVzLCByZWZlcmVuY2VzIH0gPSBub2RlRGF0YTtcbiAgICB0aGlzLm5vZGVEYXRhUmVmID0gcmVmZXJlbmNlcztcbiAgICBjb25zdCBvbWl0TGlzdCA9IFtcbiAgICAgICdhdHRyaWJ1dGVzJyxcbiAgICAgICdyZWZlcmVuY2VzJyxcbiAgICAgICdjaGlsZHJlbicsXG4gICAgICAnY3VycmVudGx5TG9hZGluZ0NoaWxkcmVuJyxcbiAgICAgICdleHBhbmRlZCcsXG4gICAgICAnYnJvd3NlUGF0aCcsXG4gICAgICAncmVsYXRpdmVQYXRoJyxcbiAgICAgICdwYXJlbnROb2RlJ1xuICAgIF07XG4gICAgdGhpcy5ub2RlRGF0YUF0dHIgPSBPYmplY3QuYXNzaWduKHt9LCBhdHRyaWJ1dGVzLCBvbWl0KG5vZGVEYXRhLCBvbWl0TGlzdCkpO1xuICB9XG5cbiAgdG9nZ2xlRGV0YWlsKG5vZGUpIHtcbiAgICB0aGlzLnNob3dEZXRhaWxzID0gIXRoaXMuc2hvd0RldGFpbHM7XG4gICAgdGhpcy50b2dnbGVBdHRyRGV0YWlsLmVtaXQobm9kZSk7XG4gIH1cblxuICBuYXZpZ2F0ZVRvKGFuY2VzdG9yczogc3RyaW5nW10pIHtcbiAgICBjb25zdCBub2RlTmF2RGF0YTogTm9kZU5hdmlnYXRpb25EYXRhID0ge1xuICAgICAgbm9kZTogdGhpcy5fbm9kZSxcbiAgICAgIHNlbGVjdGVkQW5jZXN0b3JJZHM6IGFuY2VzdG9yc1xuICAgIH07XG5cbiAgICB0aGlzLnRvZ2dsZURldGFpbCh0aGlzLl9ub2RlKTtcbiAgICB0aGlzLmFkZHJlc3NTcGFjZVNlcnZpY2UudHJpZ2dlck5vZGVUb09wZW4obm9kZU5hdkRhdGEpO1xuICB9XG59XG4iLCI8ZGl2XG4gIGNsYXNzPVwiY2FyZCBmbGV4LXNjcm9sbCBtLWItNCBzcGxpdC1yb3ctMiBhbmltYXRlZCBmYXN0XCJcbiAgc3R5bGU9XCJwb2ludGVyLWV2ZW50czogYWxsXCJcbiAgW25nQ2xhc3NdPVwieyBmYWRlSW5SaWdodEJpZzogc2hvd0RldGFpbHMsIGZhZGVPdXRSaWdodEJpZzogIXNob3dEZXRhaWxzIH1cIlxuPlxuICA8ZGl2IGNsYXNzPVwiY2FyZC1oZWFkZXIgc2VwYXJhdG9yIFwiPlxuICAgIDxoND57eyAnQXR0cmlidXRlcycgfCB0cmFuc2xhdGUgfX08L2g0PlxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzPVwiY2xvc2UgbS1sLWF1dG8gdmlzaWJsZS1zbSB2aXNpYmxlLXhzXCJcbiAgICAgIHRpdGxlPVwie3sgJ0Nsb3NlJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgICAoY2xpY2spPVwidG9nZ2xlRGV0YWlsKG5vZGVEYXRhQXR0cilcIlxuICAgID5cbiAgICAgICZ0aW1lcztcbiAgICA8L2J1dHRvbj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjYXJkLWlubmVyLXNjcm9sbFwiPlxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJsb2NrXCI+XG4gICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkIHRhYmxlLWNvbmRlbnNlZFwiPlxuICAgICAgICA8Y29sZ3JvdXA+XG4gICAgICAgICAgPGNvbCB3aWR0aD1cIjUwJVwiIC8+XG4gICAgICAgICAgPGNvbCB3aWR0aD1cIjUwJVwiIC8+XG4gICAgICAgIDwvY29sZ3JvdXA+XG4gICAgICAgIDx0aGVhZD5cbiAgICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGg+e3sgJ0F0dHJpYnV0ZScgfCB0cmFuc2xhdGUgfX08L3RoPlxuICAgICAgICAgICAgPHRoPnt7ICdWYWx1ZScgfCB0cmFuc2xhdGUgfX08L3RoPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGhlYWQ+XG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgICA8dHIgKm5nRm9yPVwibGV0IGl0ZW0gb2Ygbm9kZURhdGFBdHRyIHwga2V5dmFsdWVcIj5cbiAgICAgICAgICAgIDx0ZD57eyBpdGVtLmtleSB9fTwvdGQ+XG4gICAgICAgICAgICA8dGQgKm5nSWY9XCJpdGVtLmtleSA9PT0gJ2Fic29sdXRlUGF0aHMnXCIgY2xhc3M9XCJ0ZXh0LWJyZWFrLXdvcmRcIj5cbiAgICAgICAgICAgICAge3sgaXRlbS52YWx1ZSB8IGpzb24gfX1cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8dGQgKm5nSWY9XCJpdGVtLmtleSA9PT0gJ2FuY2VzdG9yTm9kZUlkcydcIiBjbGFzcz1cInRleHQtYnJlYWstd29yZFwiPlxuICAgICAgICAgICAgICA8YSAqbmdGb3I9XCJsZXQgdmFsdWUgb2YgaXRlbS52YWx1ZVwiIChjbGljayk9XCJuYXZpZ2F0ZVRvKHZhbHVlKVwiPlxuICAgICAgICAgICAgICAgIHt7IHZhbHVlIHwganNvbiB9fTwvYVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkICpuZ0lmPVwiaXRlbS5rZXkgIT09ICdhYnNvbHV0ZVBhdGhzJyAmJiBpdGVtLmtleSAhPT0gJ2FuY2VzdG9yTm9kZUlkcydcIj5cbiAgICAgICAgICAgICAge3sgaXRlbS52YWx1ZSB9fVxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICA8L3RyPlxuICAgICAgICA8L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbjxkaXZcbiAgY2xhc3M9XCJjYXJkIGZsZXgtc2Nyb2xsIHNwbGl0LXJvdy0yIGFuaW1hdGVkIGZhc3RcIlxuICBzdHlsZT1cInBvaW50ZXItZXZlbnRzOiBhbGxcIlxuICBbbmdDbGFzc109XCJ7IGZhZGVJblJpZ2h0QmlnOiBzaG93RGV0YWlscywgZmFkZU91dFJpZ2h0QmlnOiAhc2hvd0RldGFpbHMgfVwiXG4+XG4gIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlciBzZXBhcmF0b3JcIj5cbiAgICA8aDQ+e3sgJ1JlZmVyZW5jZXMnIHwgdHJhbnNsYXRlIH19PC9oND5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjYXJkLWlubmVyLXNjcm9sbFwiPlxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJsb2NrXCI+XG4gICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkIHRhYmxlLWNvbmRlbnNlZFwiPlxuICAgICAgICA8Y29sZ3JvdXA+XG4gICAgICAgICAgPGNvbCB3aWR0aD1cIjUwJVwiIC8+XG4gICAgICAgICAgPGNvbCB3aWR0aD1cIjUwJVwiIC8+XG4gICAgICAgIDwvY29sZ3JvdXA+XG4gICAgICAgIDx0aGVhZD5cbiAgICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGg+e3sgJ0F0dHJpYnV0ZScgfCB0cmFuc2xhdGUgfX08L3RoPlxuICAgICAgICAgICAgPHRoPnt7ICdWYWx1ZScgfCB0cmFuc2xhdGUgfX08L3RoPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGhlYWQ+XG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgICA8dHIgKm5nRm9yPVwibGV0IGl0ZW0gb2Ygbm9kZURhdGFSZWZcIj5cbiAgICAgICAgICAgIDx0ZD57eyBpdGVtLnJlZmVyZW5jZUxhYmVsIH19PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRleHQtYnJlYWstd29yZFwiPnt7IGl0ZW0udGFyZ2V0TGFiZWwgfX08L3RkPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGJvZHk+XG4gICAgICA8L3RhYmxlPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19