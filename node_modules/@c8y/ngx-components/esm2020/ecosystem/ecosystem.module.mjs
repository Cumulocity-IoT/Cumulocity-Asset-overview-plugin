import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { CoreModule, FormsModule, gettext, hookNavigator, hookRoute, hookTab, hookWizard, ViewContext } from '@c8y/ngx-components';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { ActivityLogComponent } from './activity-log/activity-log.component';
import { ApplicationPropertiesComponent } from './application-properties/application-properties.component';
import { ApplicationPropertiesGuard } from './application-properties/application-properties.guard';
import { AddExternalApplicationComponent } from './applications/add-external-applicaiton/add-external-application.component';
import { AddWebApplicationComponent } from './applications/add-web-application/add-web-application.component';
import { ApplicationListComponent } from './applications/application-list/application-list.component';
import { InstallFromPackageComponent } from './applications/install-from-package/install-from-package.component';
import { EcosystemNavigationFactory } from './ecosystem-navigation.factory';
import { EcosystemTabs } from './ecosystem-tabs.factory';
import { FeatureListComponent } from './features/feature-list.component';
import { AddMicroserviceComponent } from './microservices/add-microservice.component';
import { MicroserviceListComponent } from './microservices/microservice-list.component';
import { AddPackageComponent } from './packages/add-package.component';
import { DeployApplicationComponent } from './packages/deploy-application/deploy-application.component';
import { PackageDetailsComponent } from './packages/package-details/package-details.component';
import { PackagesListComponent } from './packages/package-list/packages-list.component';
import { PackageVersionsComponent } from './packages/package-versions/packages-versions.component';
import { PackageContentsComponent } from './packages/package-versions/package-contents/packages-contents.component';
import { PackageVersionsPluginsComponent } from './packages/package-versions/package-contents/contents-plugins/contents-plugins.component';
import { PackageVersionsAppsComponent } from './packages/package-versions/package-contents/contents-apps/contents-apps.component';
import { PackageGuard } from './packages/package.guard';
import { PackageVersionsListComponent } from './packages/package-versions/package-versions-list/package-versions-list.component';
import { PackageVersionsGuard } from './packages/package-versions.guard';
import { SubscriptionModalComponent } from './application-properties/subscription-modal/subscription-modal.component';
import { EcosystemWizards, SharedEcosystemModule } from '@c8y/ngx-components/ecosystem/shared';
import { ApplicationPluginsModule } from './application-plugins';
import { UpdateApplicationModalComponent } from './application-properties/update-application-modal/update-application-modal.component';
import { LicenseConfirmModule } from '@c8y/ngx-components/ecosystem/license-confirm';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
const ecosystemMainRoutes = [
    {
        path: 'ecosystem/application',
        redirectTo: 'ecosystem/application/applications',
        pathMatch: 'full'
    },
    {
        // keeps legacy links functional
        path: 'ecosystem/applications',
        redirectTo: 'ecosystem/application/applications',
        pathMatch: 'full'
    },
    {
        path: 'ecosystem/application/applications',
        component: ApplicationListComponent
    },
    {
        path: 'ecosystem/extension/extensions',
        component: PackagesListComponent
    },
    {
        path: 'ecosystem/application/features',
        component: FeatureListComponent
    },
    {
        path: 'ecosystem/microservice/microservices',
        component: MicroserviceListComponent
    }
];
const applicationDetailsRoutes = [
    {
        path: 'properties',
        component: ApplicationPropertiesComponent,
        icon: 'list',
        label: gettext('Properties'),
        context: ViewContext.Application,
        priority: 5,
        canActivate: [ApplicationPropertiesGuard]
    },
    {
        path: 'properties',
        component: ApplicationPropertiesComponent,
        icon: 'list',
        label: gettext('Properties'),
        context: ViewContext.Feature,
        priority: 5,
        canActivate: [ApplicationPropertiesGuard]
    },
    {
        path: 'package-details',
        component: PackageDetailsComponent,
        icon: 'big-parcel',
        label: gettext('Extension package'),
        context: ViewContext.Extension,
        priority: 10,
        canActivate: [PackageGuard]
    },
    {
        path: 'package-versions',
        component: PackageVersionsComponent,
        icon: 'c8y-modules',
        label: gettext('Versions'),
        context: ViewContext.Extension,
        priority: 1,
        canActivate: [PackageGuard, PackageVersionsGuard]
    },
    {
        path: 'properties',
        component: ApplicationPropertiesComponent,
        icon: 'list',
        label: gettext('Properties'),
        context: ViewContext.Microservice,
        priority: 5,
        canActivate: [ApplicationPropertiesGuard]
    }
];
export class EcosystemModule {
}
EcosystemModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: EcosystemModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EcosystemModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.0.6", ngImport: i0, type: EcosystemModule, declarations: [ApplicationListComponent,
        MicroserviceListComponent,
        ApplicationPropertiesComponent,
        AddMicroserviceComponent,
        ActivityLogComponent,
        AddWebApplicationComponent,
        AddExternalApplicationComponent,
        InstallFromPackageComponent,
        PackagesListComponent,
        PackageDetailsComponent,
        DeployApplicationComponent,
        AddPackageComponent,
        FeatureListComponent,
        PackageVersionsComponent,
        PackageVersionsPluginsComponent,
        PackageVersionsAppsComponent,
        PackageContentsComponent,
        PackageVersionsListComponent,
        SubscriptionModalComponent,
        UpdateApplicationModalComponent], imports: [CoreModule,
        BsDropdownModule,
        TooltipModule,
        FormsModule,
        ReactiveFormsModule, i1.RouterModule, PopoverModule,
        ApplicationPluginsModule,
        SharedEcosystemModule,
        LicenseConfirmModule], exports: [ApplicationPropertiesComponent, UpdateApplicationModalComponent] });
EcosystemModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: EcosystemModule, providers: [
        hookTab(EcosystemTabs),
        hookNavigator(EcosystemNavigationFactory),
        hookRoute(applicationDetailsRoutes),
        PackageGuard,
        PackageVersionsGuard,
        ApplicationPropertiesGuard,
        hookWizard({
            wizardId: EcosystemWizards.APPLICATION_UPLOAD,
            component: AddWebApplicationComponent,
            name: gettext('Upload web application'),
            c8yIcon: 'upload'
        }),
        hookWizard({
            name: undefined,
            wizardId: EcosystemWizards.PACKAGE_UPLOAD,
            component: AddPackageComponent
        }),
        hookWizard({
            wizardId: EcosystemWizards.APPLICATION_UPLOAD,
            component: AddExternalApplicationComponent,
            name: gettext('External application'),
            c8yIcon: 'cloud-link'
        }),
        hookWizard({
            wizardId: EcosystemWizards.BLUEPRINT_DEPLOYMENT,
            component: DeployApplicationComponent,
            name: gettext('Deploy package'),
            c8yIcon: 'big-parcel'
        }),
        hookWizard({
            wizardId: EcosystemWizards.APPLICATION_UPLOAD,
            component: InstallFromPackageComponent,
            name: gettext('Install from available extension packages'),
            c8yIcon: 'big-parcel'
        }),
        hookWizard({
            name: undefined,
            wizardId: EcosystemWizards.MICROSERVICE_UPLOAD,
            component: AddMicroserviceComponent
        })
    ], imports: [CoreModule,
        BsDropdownModule,
        TooltipModule,
        FormsModule,
        ReactiveFormsModule,
        RouterModule.forChild(ecosystemMainRoutes),
        PopoverModule,
        ApplicationPluginsModule,
        SharedEcosystemModule,
        LicenseConfirmModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: EcosystemModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        ApplicationListComponent,
                        MicroserviceListComponent,
                        ApplicationPropertiesComponent,
                        AddMicroserviceComponent,
                        ActivityLogComponent,
                        AddWebApplicationComponent,
                        AddExternalApplicationComponent,
                        InstallFromPackageComponent,
                        PackagesListComponent,
                        PackageDetailsComponent,
                        DeployApplicationComponent,
                        AddPackageComponent,
                        FeatureListComponent,
                        PackageVersionsComponent,
                        PackageVersionsPluginsComponent,
                        PackageVersionsAppsComponent,
                        PackageContentsComponent,
                        PackageVersionsListComponent,
                        SubscriptionModalComponent,
                        UpdateApplicationModalComponent
                    ],
                    imports: [
                        CoreModule,
                        BsDropdownModule,
                        TooltipModule,
                        FormsModule,
                        ReactiveFormsModule,
                        RouterModule.forChild(ecosystemMainRoutes),
                        PopoverModule,
                        ApplicationPluginsModule,
                        SharedEcosystemModule,
                        LicenseConfirmModule
                    ],
                    exports: [ApplicationPropertiesComponent, UpdateApplicationModalComponent],
                    providers: [
                        hookTab(EcosystemTabs),
                        hookNavigator(EcosystemNavigationFactory),
                        hookRoute(applicationDetailsRoutes),
                        PackageGuard,
                        PackageVersionsGuard,
                        ApplicationPropertiesGuard,
                        hookWizard({
                            wizardId: EcosystemWizards.APPLICATION_UPLOAD,
                            component: AddWebApplicationComponent,
                            name: gettext('Upload web application'),
                            c8yIcon: 'upload'
                        }),
                        hookWizard({
                            name: undefined,
                            wizardId: EcosystemWizards.PACKAGE_UPLOAD,
                            component: AddPackageComponent
                        }),
                        hookWizard({
                            wizardId: EcosystemWizards.APPLICATION_UPLOAD,
                            component: AddExternalApplicationComponent,
                            name: gettext('External application'),
                            c8yIcon: 'cloud-link'
                        }),
                        hookWizard({
                            wizardId: EcosystemWizards.BLUEPRINT_DEPLOYMENT,
                            component: DeployApplicationComponent,
                            name: gettext('Deploy package'),
                            c8yIcon: 'big-parcel'
                        }),
                        hookWizard({
                            wizardId: EcosystemWizards.APPLICATION_UPLOAD,
                            component: InstallFromPackageComponent,
                            name: gettext('Install from available extension packages'),
                            c8yIcon: 'big-parcel'
                        }),
                        hookWizard({
                            name: undefined,
                            wizardId: EcosystemWizards.MICROSERVICE_UPLOAD,
                            component: AddMicroserviceComponent
                        })
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,