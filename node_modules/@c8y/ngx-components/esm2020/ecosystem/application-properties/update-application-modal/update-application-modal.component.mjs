import { Component, ViewChild } from '@angular/core';
import { ApplicationService, InventoryService } from '@c8y/client';
import { AlertService } from '@c8y/ngx-components';
import { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
import * as i2 from "@c8y/ngx-components/ecosystem/shared";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "@angular/common";
export class UpdateApplicationModalComponent {
    constructor(inventoryService, ecosystemService, applicationService, alertService) {
        this.inventoryService = inventoryService;
        this.ecosystemService = ecosystemService;
        this.applicationService = applicationService;
        this.alertService = alertService;
        this.isUpdateOngoing = true;
        this.updateFailure = false;
        this.result = new Promise((resolve, reject) => {
            this._resolve = resolve;
            this._reject = reject;
        });
    }
    ngOnInit() {
        this.updateApplication();
    }
    done() {
        if (!this.updateFailure) {
            this._resolve();
            this.modal._dismiss();
            return;
        }
        this._reject();
        this.modal._dismiss();
    }
    async updateApplication() {
        try {
            const binaryMoId = this.sourcePackage.activeVersionId;
            await this.inventoryService.detail(binaryMoId); // only trying if we can access it
            await this.ecosystemService.uploadBinaryFromOtherPackage(this.sourcePackage, this.application, this.sourcePackage.activeVersionId);
        }
        catch (e) {
            if (e.res?.status === 404) {
                try {
                    this.updateFailure = !(await this.ecosystemService.fallbackToClone(this.application, this.sourcePackage));
                }
                catch (ex) {
                    this.updateFailure = true;
                    this.ecosystemService.alertError(e);
                }
            }
            else {
                this.updateFailure = true;
                this.ecosystemService.alertError(e);
            }
        }
        finally {
            this.isUpdateOngoing = false;
        }
    }
}
UpdateApplicationModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: UpdateApplicationModalComponent, deps: [{ token: i1.InventoryService }, { token: i2.EcosystemService }, { token: i1.ApplicationService }, { token: i3.AlertService }], target: i0.ɵɵFactoryTarget.Component });
UpdateApplicationModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: UpdateApplicationModalComponent, selector: "c8y-update-application-modal", viewQueries: [{ propertyName: "modal", first: true, predicate: ["modal"], descendants: true }], ngImport: i0, template: "<c8y-modal\n  [title]=\"'Update application' | translate\"\n  [headerClasses]=\"'dialog-header'\"\n  [customFooter]=\"true\"\n  #modal\n>\n  <ng-container c8y-modal-title>\n    <span class=\"dlt-c8y-icon-installing-updates\"></span>\n  </ng-container>\n\n  <c8y-progress-bar\n    *ngIf=\"isUpdateOngoing\"\n    [message]=\"'Updating\u2026' | translate\"\n    class=\"text-center d-block p-t-56 p-b-56 m-t-4 m-b-4\"\n    style=\"min-height: 180px\"\n  ></c8y-progress-bar>\n\n  <c8y-operation-result\n    *ngIf=\"!isUpdateOngoing && !updateFailure\"\n    text=\"{{ 'Update completed' | translate }}\"\n    [size]=\"120\"\n    [vertical]=\"true\"\n    type=\"success\"\n  ></c8y-operation-result>\n  <c8y-operation-result\n    *ngIf=\"!isUpdateOngoing && updateFailure\"\n    text=\"{{ 'Failed to update application.' | translate }}\"\n    [size]=\"120\"\n    [vertical]=\"true\"\n    type=\"error\"\n  ></c8y-operation-result>\n  <div class=\"modal-footer\">\n    <button\n      title=\"{{ 'Close' | translate }}\"\n      [disabled]=\"isUpdateOngoing\"\n      class=\"btn btn-default\"\n      (click)=\"done()\"\n    >\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</c8y-modal>\n", dependencies: [{ kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.ProgressBarComponent, selector: "c8y-progress-bar", inputs: ["message", "progress"] }, { kind: "component", type: i3.OperationResultComponent, selector: "c8y-operation-result", inputs: ["text", "vertical", "size", "type"] }, { kind: "component", type: i3.ModalComponent, selector: "c8y-modal", inputs: ["disabled", "close", "dismiss", "title", "body", "customFooter", "headerClasses", "labels"], outputs: ["onDismiss", "onClose"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: UpdateApplicationModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-update-application-modal', template: "<c8y-modal\n  [title]=\"'Update application' | translate\"\n  [headerClasses]=\"'dialog-header'\"\n  [customFooter]=\"true\"\n  #modal\n>\n  <ng-container c8y-modal-title>\n    <span class=\"dlt-c8y-icon-installing-updates\"></span>\n  </ng-container>\n\n  <c8y-progress-bar\n    *ngIf=\"isUpdateOngoing\"\n    [message]=\"'Updating\u2026' | translate\"\n    class=\"text-center d-block p-t-56 p-b-56 m-t-4 m-b-4\"\n    style=\"min-height: 180px\"\n  ></c8y-progress-bar>\n\n  <c8y-operation-result\n    *ngIf=\"!isUpdateOngoing && !updateFailure\"\n    text=\"{{ 'Update completed' | translate }}\"\n    [size]=\"120\"\n    [vertical]=\"true\"\n    type=\"success\"\n  ></c8y-operation-result>\n  <c8y-operation-result\n    *ngIf=\"!isUpdateOngoing && updateFailure\"\n    text=\"{{ 'Failed to update application.' | translate }}\"\n    [size]=\"120\"\n    [vertical]=\"true\"\n    type=\"error\"\n  ></c8y-operation-result>\n  <div class=\"modal-footer\">\n    <button\n      title=\"{{ 'Close' | translate }}\"\n      [disabled]=\"isUpdateOngoing\"\n      class=\"btn btn-default\"\n      (click)=\"done()\"\n    >\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</c8y-modal>\n" }]
        }], ctorParameters: function () { return [{ type: i1.InventoryService }, { type: i2.EcosystemService }, { type: i1.ApplicationService }, { type: i3.AlertService }]; }, propDecorators: { modal: [{
                type: ViewChild,
                args: ['modal', { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBkYXRlLWFwcGxpY2F0aW9uLW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2Vjb3N5c3RlbS9hcHBsaWNhdGlvbi1wcm9wZXJ0aWVzL3VwZGF0ZS1hcHBsaWNhdGlvbi1tb2RhbC91cGRhdGUtYXBwbGljYXRpb24tbW9kYWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vZWNvc3lzdGVtL2FwcGxpY2F0aW9uLXByb3BlcnRpZXMvdXBkYXRlLWFwcGxpY2F0aW9uLW1vZGFsL3VwZGF0ZS1hcHBsaWNhdGlvbi1tb2RhbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsa0JBQWtCLEVBQWdCLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQzs7Ozs7O0FBTXhFLE1BQU0sT0FBTywrQkFBK0I7SUFjMUMsWUFDVSxnQkFBa0MsRUFDbEMsZ0JBQWtDLEVBQ2xDLGtCQUFzQyxFQUN0QyxZQUEwQjtRQUgxQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQWhCcEMsb0JBQWUsR0FBRyxJQUFJLENBQUM7UUFDdkIsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFHdEIsV0FBTSxHQUFrQixJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUN0RCxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQztZQUN4QixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQVVBLENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN2QixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDaEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUN0QixPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxLQUFLLENBQUMsaUJBQWlCO1FBQ3JCLElBQUk7WUFDRixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQztZQUN0RCxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxrQ0FBa0M7WUFDbEYsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsNEJBQTRCLENBQ3RELElBQUksQ0FBQyxhQUFhLEVBQ2xCLElBQUksQ0FBQyxXQUFXLEVBQ2hCLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUNuQyxDQUFDO1NBQ0g7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxNQUFNLEtBQUssR0FBRyxFQUFFO2dCQUN6QixJQUFJO29CQUNGLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLGVBQWUsQ0FDaEUsSUFBSSxDQUFDLFdBQVcsRUFDaEIsSUFBSSxDQUFDLGFBQWEsQ0FDbkIsQ0FBQyxDQUFDO2lCQUNKO2dCQUFDLE9BQU8sRUFBRSxFQUFFO29CQUNYLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO29CQUMxQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUNyQzthQUNGO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO2dCQUMxQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3JDO1NBQ0Y7Z0JBQVM7WUFDUixJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztTQUM5QjtJQUNILENBQUM7OzRIQTlEVSwrQkFBK0I7Z0hBQS9CLCtCQUErQixvS0NUNUMseXFDQTBDQTsyRkRqQ2EsK0JBQStCO2tCQUozQyxTQUFTOytCQUNFLDhCQUE4QjtrTUFJTyxLQUFLO3NCQUFuRCxTQUFTO3VCQUFDLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBsaWNhdGlvblNlcnZpY2UsIElBcHBsaWNhdGlvbiwgSW52ZW50b3J5U2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgRWNvc3lzdGVtU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvZWNvc3lzdGVtL3NoYXJlZCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS11cGRhdGUtYXBwbGljYXRpb24tbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vdXBkYXRlLWFwcGxpY2F0aW9uLW1vZGFsLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBVcGRhdGVBcHBsaWNhdGlvbk1vZGFsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQFZpZXdDaGlsZCgnbW9kYWwnLCB7IHN0YXRpYzogZmFsc2UgfSkgcHJpdmF0ZSBtb2RhbDtcbiAgaXNVcGRhdGVPbmdvaW5nID0gdHJ1ZTtcbiAgdXBkYXRlRmFpbHVyZSA9IGZhbHNlO1xuICBzb3VyY2VQYWNrYWdlOiBJQXBwbGljYXRpb247XG4gIGFwcGxpY2F0aW9uOiBJQXBwbGljYXRpb247XG4gIHJlc3VsdDogUHJvbWlzZTx2b2lkPiA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0aGlzLl9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICB0aGlzLl9yZWplY3QgPSByZWplY3Q7XG4gIH0pO1xuXG4gIHByaXZhdGUgX3Jlc29sdmU6ICh2YWx1ZTogdm9pZCB8IFByb21pc2VMaWtlPHZvaWQ+KSA9PiB2b2lkO1xuICBwcml2YXRlIF9yZWplY3Q6ICh2YWx1ZTogdm9pZCB8IFByb21pc2VMaWtlPHZvaWQ+KSA9PiB2b2lkO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgaW52ZW50b3J5U2VydmljZTogSW52ZW50b3J5U2VydmljZSxcbiAgICBwcml2YXRlIGVjb3N5c3RlbVNlcnZpY2U6IEVjb3N5c3RlbVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhcHBsaWNhdGlvblNlcnZpY2U6IEFwcGxpY2F0aW9uU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0U2VydmljZTogQWxlcnRTZXJ2aWNlXG4gICkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnVwZGF0ZUFwcGxpY2F0aW9uKCk7XG4gIH1cblxuICBkb25lKCkge1xuICAgIGlmICghdGhpcy51cGRhdGVGYWlsdXJlKSB7XG4gICAgICB0aGlzLl9yZXNvbHZlKCk7XG4gICAgICB0aGlzLm1vZGFsLl9kaXNtaXNzKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX3JlamVjdCgpO1xuICAgIHRoaXMubW9kYWwuX2Rpc21pc3MoKTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZUFwcGxpY2F0aW9uKCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBiaW5hcnlNb0lkID0gdGhpcy5zb3VyY2VQYWNrYWdlLmFjdGl2ZVZlcnNpb25JZDtcbiAgICAgIGF3YWl0IHRoaXMuaW52ZW50b3J5U2VydmljZS5kZXRhaWwoYmluYXJ5TW9JZCk7IC8vIG9ubHkgdHJ5aW5nIGlmIHdlIGNhbiBhY2Nlc3MgaXRcbiAgICAgIGF3YWl0IHRoaXMuZWNvc3lzdGVtU2VydmljZS51cGxvYWRCaW5hcnlGcm9tT3RoZXJQYWNrYWdlKFxuICAgICAgICB0aGlzLnNvdXJjZVBhY2thZ2UsXG4gICAgICAgIHRoaXMuYXBwbGljYXRpb24sXG4gICAgICAgIHRoaXMuc291cmNlUGFja2FnZS5hY3RpdmVWZXJzaW9uSWRcbiAgICAgICk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgaWYgKGUucmVzPy5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHRoaXMudXBkYXRlRmFpbHVyZSA9ICEoYXdhaXQgdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmZhbGxiYWNrVG9DbG9uZShcbiAgICAgICAgICAgIHRoaXMuYXBwbGljYXRpb24sXG4gICAgICAgICAgICB0aGlzLnNvdXJjZVBhY2thZ2VcbiAgICAgICAgICApKTtcbiAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICB0aGlzLnVwZGF0ZUZhaWx1cmUgPSB0cnVlO1xuICAgICAgICAgIHRoaXMuZWNvc3lzdGVtU2VydmljZS5hbGVydEVycm9yKGUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnVwZGF0ZUZhaWx1cmUgPSB0cnVlO1xuICAgICAgICB0aGlzLmVjb3N5c3RlbVNlcnZpY2UuYWxlcnRFcnJvcihlKTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5pc1VwZGF0ZU9uZ29pbmcgPSBmYWxzZTtcbiAgICB9XG4gIH1cbn1cbiIsIjxjOHktbW9kYWxcbiAgW3RpdGxlXT1cIidVcGRhdGUgYXBwbGljYXRpb24nIHwgdHJhbnNsYXRlXCJcbiAgW2hlYWRlckNsYXNzZXNdPVwiJ2RpYWxvZy1oZWFkZXInXCJcbiAgW2N1c3RvbUZvb3Rlcl09XCJ0cnVlXCJcbiAgI21vZGFsXG4+XG4gIDxuZy1jb250YWluZXIgYzh5LW1vZGFsLXRpdGxlPlxuICAgIDxzcGFuIGNsYXNzPVwiZGx0LWM4eS1pY29uLWluc3RhbGxpbmctdXBkYXRlc1wiPjwvc3Bhbj5cbiAgPC9uZy1jb250YWluZXI+XG5cbiAgPGM4eS1wcm9ncmVzcy1iYXJcbiAgICAqbmdJZj1cImlzVXBkYXRlT25nb2luZ1wiXG4gICAgW21lc3NhZ2VdPVwiJ1VwZGF0aW5n4oCmJyB8IHRyYW5zbGF0ZVwiXG4gICAgY2xhc3M9XCJ0ZXh0LWNlbnRlciBkLWJsb2NrIHAtdC01NiBwLWItNTYgbS10LTQgbS1iLTRcIlxuICAgIHN0eWxlPVwibWluLWhlaWdodDogMTgwcHhcIlxuICA+PC9jOHktcHJvZ3Jlc3MtYmFyPlxuXG4gIDxjOHktb3BlcmF0aW9uLXJlc3VsdFxuICAgICpuZ0lmPVwiIWlzVXBkYXRlT25nb2luZyAmJiAhdXBkYXRlRmFpbHVyZVwiXG4gICAgdGV4dD1cInt7ICdVcGRhdGUgY29tcGxldGVkJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgW3NpemVdPVwiMTIwXCJcbiAgICBbdmVydGljYWxdPVwidHJ1ZVwiXG4gICAgdHlwZT1cInN1Y2Nlc3NcIlxuICA+PC9jOHktb3BlcmF0aW9uLXJlc3VsdD5cbiAgPGM4eS1vcGVyYXRpb24tcmVzdWx0XG4gICAgKm5nSWY9XCIhaXNVcGRhdGVPbmdvaW5nICYmIHVwZGF0ZUZhaWx1cmVcIlxuICAgIHRleHQ9XCJ7eyAnRmFpbGVkIHRvIHVwZGF0ZSBhcHBsaWNhdGlvbi4nIHwgdHJhbnNsYXRlIH19XCJcbiAgICBbc2l6ZV09XCIxMjBcIlxuICAgIFt2ZXJ0aWNhbF09XCJ0cnVlXCJcbiAgICB0eXBlPVwiZXJyb3JcIlxuICA+PC9jOHktb3BlcmF0aW9uLXJlc3VsdD5cbiAgPGRpdiBjbGFzcz1cIm1vZGFsLWZvb3RlclwiPlxuICAgIDxidXR0b25cbiAgICAgIHRpdGxlPVwie3sgJ0Nsb3NlJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgICBbZGlzYWJsZWRdPVwiaXNVcGRhdGVPbmdvaW5nXCJcbiAgICAgIGNsYXNzPVwiYnRuIGJ0bi1kZWZhdWx0XCJcbiAgICAgIChjbGljayk9XCJkb25lKClcIlxuICAgID5cbiAgICAgIHt7ICdDbG9zZScgfCB0cmFuc2xhdGUgfX1cbiAgICA8L2J1dHRvbj5cbiAgPC9kaXY+XG48L2M4eS1tb2RhbD5cbiJdfQ==