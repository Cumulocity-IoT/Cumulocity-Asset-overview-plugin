import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewChild } from '@angular/core';
import { AlertService, C8yStepper, gettext, ModalService, Status } from '@c8y/ngx-components';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { CreateBulkOperationDetailsComponent } from '@c8y/ngx-components/operations/create-bulk-operation-details';
import { BULK_OPERATION_EVENT } from '@c8y/ngx-components/operations/product-experience';
import { get } from 'lodash-es';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { CustomStep } from './custom-step.directive';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/operations/bulk-operations-service";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
import * as i4 from "@angular/cdk/stepper";
import * as i5 from "@c8y/ngx-components/operations/device-selector";
import * as i6 from "@c8y/ngx-components/operations/create-bulk-operation-details";
import * as i7 from "@c8y/ngx-components/operations/operation-summary";
export class BulkOperationStepper {
    constructor(bulkOperationService, modal, alert) {
        this.bulkOperationService = bulkOperationService;
        this.modal = modal;
        this.alert = alert;
        this.BULK_OPERATION_EVENT = BULK_OPERATION_EVENT;
        this.selectionChange = new EventEmitter();
        this.steps = [];
        this.showStepper = false;
        this.showButtons = false;
        this.stepperButtonsLabels = { custom: gettext('Schedule bulk operation') };
        this.deviceTypesSubject$ = new Subject();
        this.endSubscriptions = new Subject();
        this.deviceTypes$ = this.deviceTypesSubject$.asObservable();
    }
    ngAfterViewInit() {
        setTimeout(() => {
            // wait for the next event loop turn as `steps` has already been checked in this CD cycle
            this.steps = this.customSteps.toArray();
            this.showStepper = true;
            setTimeout(() => {
                // postpone rendering of buttons for custom steps to the point where custom steps have already been rendered
                this.showButtons = true;
                if (this.stepper) {
                    this.stepper.selectionChange.pipe(takeUntil(this.endSubscriptions)).subscribe(event => {
                        this.selectionChange.next(event);
                    });
                    this.operationDetailsForm =
                        this.createBulkOperationDetailsComponent.fgOperationDescription;
                }
            });
        });
    }
    changeDeviceTypes(deviceTypes) {
        if (deviceTypes) {
            this.deviceTypesSubject$.next(Array.isArray(deviceTypes) ? deviceTypes : [deviceTypes]);
        }
        else {
            this.deviceTypesSubject$.next([]);
        }
    }
    async confirmDeviceSelection($event) {
        if (!this.deviceQueryString) {
            try {
                await this.modal.confirm(gettext('All devices selected'), gettext('You are about to schedule the bulk operation to be executed for all devices. Do you want to proceed?'), Status.WARNING, { ok: gettext('Schedule for all devices'), cancel: gettext('Cancel and select devices') });
                $event.step.completed = true;
                $event.stepper.next();
                this.operationDetails = this.retrieveOperationDetails
                    ? await this.retrieveOperationDetails()
                    : undefined;
            }
            catch (ex) {
                // Intentionally empty
            }
        }
        else {
            $event.step.completed = true;
            $event.stepper.next();
            this.operationDetails = this.retrieveOperationDetails
                ? await this.retrieveOperationDetails()
                : undefined;
        }
        this.bulkOperationType = this.bulkOperationService.retrieveBulkOperationType(get(this.operationDetails, 'prototype'));
        if (this.operationDetailsForm &&
            get(this.operationDetailsForm, 'controls.description.pristine') &&
            this.operationDetails) {
            this.operationDetailsForm.patchValue({
                description: get(this.operationDetails, 'prototype.description')
            });
        }
    }
    cancel() {
        this.close();
    }
    async scheduleBulkOperation() {
        this.pendingStatus = true;
        try {
            this.operationDetails.prototype.description = get(this.operationDetailsForm, 'controls.description.value');
            this.operationDetails.note = get(this.operationDetailsForm, 'controls.note.value');
            this.operationDetails.schedule = get(this.operationDetailsForm, 'controls.schedule.value');
            await this.bulkOperationService.scheduleBulkOperation(this.deviceQueryString, this.operationDetails);
            this.alert.success(gettext('New bulk operation scheduled.'));
            this.close();
        }
        catch (ex) {
            this.alert.addServerFailure(ex);
        }
        this.pendingStatus = false;
    }
    ngOnDestroy() {
        this.endSubscriptions.next();
        this.endSubscriptions.complete();
    }
    close() {
        this.stepper.reset();
        this.bulkOperationService.returnToBulkOperationOverview();
    }
}
BulkOperationStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: BulkOperationStepper, deps: [{ token: i1.BulkOperationsService }, { token: i2.ModalService }, { token: i2.AlertService }], target: i0.ɵɵFactoryTarget.Component });
BulkOperationStepper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: BulkOperationStepper, selector: "c8y-bulk-operation-stepper", inputs: { type: "type" }, outputs: { selectionChange: "selectionChange" }, queries: [{ propertyName: "customSteps", predicate: CustomStep }], viewQueries: [{ propertyName: "stepper", first: true, predicate: C8yStepper, descendants: true }, { propertyName: "createBulkOperationDetailsComponent", first: true, predicate: CreateBulkOperationDetailsComponent, descendants: true }], ngImport: i0, template: "<div class=\"fit-h\">\n  <c8y-stepper\n    class=\"d-col no-align-items fit-h c8y-stepper--no-btns a-i-center\"\n    linear\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    [customClasses]=\"['col-xs-10', 'col-sm-8', 'm-t-24', 'm-b-40', 'p-0', 'flex-no-shrink']\"\n    *ngIf=\"showStepper\"\n    c8yProductExperience\n    [actionName]=\"BULK_OPERATION_EVENT\"\n    [actionData]=\"{ bulkOperationType: type }\"\n  >\n    <!-- CUSTOM STEPS 1 to N-2 -->\n    <cdk-step\n      *ngFor=\"let step of steps\"\n      [label]=\"step.label | translate\"\n      [completed]=\"step.completed\"\n    >\n      <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w\"\n        *ngIf=\"showButtons\"\n        [disabled]=\"step.buttonsDisabled\"\n        (onNext)=\"step.onNext($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n    <!-- STEP N-1 - Data-grid -->\n    <cdk-step [label]=\"'Filter target devices' | translate\">\n      <div class=\"card-block p-b-0 p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"d-flex j-c-center p-b-8 p-t-4\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <h4 class=\"text-center text-normal m-b-16\">\n              {{ 'Filter target devices' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <c8y-device-selector\n          [deviceTypes]=\"deviceTypes$\"\n          (onDeviceQueryStringChange)=\"deviceQueryString = $event\"\n        ></c8y-device-selector>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w\"\n        *ngIf=\"showButtons\"\n        (onNext)=\"confirmDeviceSelection($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n\n    <!-- STEP N - Scheduler -->\n    <cdk-step [label]=\"'Confirm and schedule bulk operation' | translate\">\n      <div class=\"card-block flex-no-shrink p-b-0 p-t-0 separator-bottom col-xs-12\">\n        <div class=\"d-flex j-c-center p-b-8 p-t-4\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <h4 class=\"text-center text-normal m-b-16\">\n              {{ 'Confirm and schedule bulk operation' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-b-0\">\n            <div class=\"d-flex j-c-center p-t-8 p-b-8\">\n              <div class=\"col-xs-12 col-sm-6\">\n                <c8y-operation-summary\n                  [name]=\"operationDetails?.name | translate\"\n                  [description]=\"operationDetails?.description | translate\"\n                  [deviceQueryString]=\"deviceQueryString\"\n                ></c8y-operation-summary>\n              </div>\n            </div>\n            <div class=\"d-flex j-c-center\">\n              <div class=\"col-xs-12 col-sm-6\">\n                <c8y-create-bulk-operation-details\n                  [bulkOperationType]=\"bulkOperationType\"\n                ></c8y-create-bulk-operation-details>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w\"\n        *ngIf=\"showButtons\"\n        [labels]=\"stepperButtonsLabels\"\n        [pending]=\"pendingStatus\"\n        [disabled]=\"operationDetailsForm?.invalid\"\n        (onCancel)=\"cancel()\"\n        (onCustom)=\"scheduleBulkOperation()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</div>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.C8yStepper, selector: "c8y-stepper", inputs: ["disableDefaultIcons", "disableProgressButtons", "customClasses", "hideStepProgress", "useStepLabelsAsTitlesOnly"], outputs: ["onStepChange"] }, { kind: "component", type: i4.CdkStep, selector: "cdk-step", inputs: ["stepControl", "label", "errorMessage", "aria-label", "aria-labelledby", "state", "editable", "optional", "completed", "hasError"], outputs: ["interacted"], exportAs: ["cdkStep"] }, { kind: "component", type: i2.C8yStepperButtons, selector: "c8y-stepper-buttons", inputs: ["labels", "pending", "disabled", "showButtons"], outputs: ["onCancel", "onNext", "onBack", "onCustom"] }, { kind: "directive", type: i2.ProductExperienceDirective, selector: "[c8yProductExperience]", inputs: ["actionName", "actionData", "inherit", "suppressDataOverriding"] }, { kind: "component", type: i5.DeviceSelectorComponent, selector: "c8y-device-selector", inputs: ["deviceTypes"], outputs: ["onDeviceQueryStringChange"] }, { kind: "component", type: i6.CreateBulkOperationDetailsComponent, selector: "c8y-create-bulk-operation-details", inputs: ["bulkOperationType"] }, { kind: "component", type: i7.OperationSummaryComponent, selector: "c8y-operation-summary", inputs: ["name", "description", "deviceQueryString"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: BulkOperationStepper, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-bulk-operation-stepper', template: "<div class=\"fit-h\">\n  <c8y-stepper\n    class=\"d-col no-align-items fit-h c8y-stepper--no-btns a-i-center\"\n    linear\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    [customClasses]=\"['col-xs-10', 'col-sm-8', 'm-t-24', 'm-b-40', 'p-0', 'flex-no-shrink']\"\n    *ngIf=\"showStepper\"\n    c8yProductExperience\n    [actionName]=\"BULK_OPERATION_EVENT\"\n    [actionData]=\"{ bulkOperationType: type }\"\n  >\n    <!-- CUSTOM STEPS 1 to N-2 -->\n    <cdk-step\n      *ngFor=\"let step of steps\"\n      [label]=\"step.label | translate\"\n      [completed]=\"step.completed\"\n    >\n      <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w\"\n        *ngIf=\"showButtons\"\n        [disabled]=\"step.buttonsDisabled\"\n        (onNext)=\"step.onNext($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n    <!-- STEP N-1 - Data-grid -->\n    <cdk-step [label]=\"'Filter target devices' | translate\">\n      <div class=\"card-block p-b-0 p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"d-flex j-c-center p-b-8 p-t-4\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <h4 class=\"text-center text-normal m-b-16\">\n              {{ 'Filter target devices' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <c8y-device-selector\n          [deviceTypes]=\"deviceTypes$\"\n          (onDeviceQueryStringChange)=\"deviceQueryString = $event\"\n        ></c8y-device-selector>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w\"\n        *ngIf=\"showButtons\"\n        (onNext)=\"confirmDeviceSelection($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n\n    <!-- STEP N - Scheduler -->\n    <cdk-step [label]=\"'Confirm and schedule bulk operation' | translate\">\n      <div class=\"card-block flex-no-shrink p-b-0 p-t-0 separator-bottom col-xs-12\">\n        <div class=\"d-flex j-c-center p-b-8 p-t-4\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <h4 class=\"text-center text-normal m-b-16\">\n              {{ 'Confirm and schedule bulk operation' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-b-0\">\n            <div class=\"d-flex j-c-center p-t-8 p-b-8\">\n              <div class=\"col-xs-12 col-sm-6\">\n                <c8y-operation-summary\n                  [name]=\"operationDetails?.name | translate\"\n                  [description]=\"operationDetails?.description | translate\"\n                  [deviceQueryString]=\"deviceQueryString\"\n                ></c8y-operation-summary>\n              </div>\n            </div>\n            <div class=\"d-flex j-c-center\">\n              <div class=\"col-xs-12 col-sm-6\">\n                <c8y-create-bulk-operation-details\n                  [bulkOperationType]=\"bulkOperationType\"\n                ></c8y-create-bulk-operation-details>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w\"\n        *ngIf=\"showButtons\"\n        [labels]=\"stepperButtonsLabels\"\n        [pending]=\"pendingStatus\"\n        [disabled]=\"operationDetailsForm?.invalid\"\n        (onCancel)=\"cancel()\"\n        (onCustom)=\"scheduleBulkOperation()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BulkOperationsService }, { type: i2.ModalService }, { type: i2.AlertService }]; }, propDecorators: { type: [{
                type: Input
            }], selectionChange: [{
                type: Output
            }], customSteps: [{
                type: ContentChildren,
                args: [CustomStep]
            }], stepper: [{
                type: ViewChild,
                args: [C8yStepper, { static: false }]
            }], createBulkOperationDetailsComponent: [{
                type: ViewChild,
                args: [CreateBulkOperationDetailsComponent, { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tc3RlcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLXN0ZXBwZXIvYnVsay1vcGVyYXRpb24tc3RlcHBlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLXN0ZXBwZXIvYnVsay1vcGVyYXRpb24tc3RlcHBlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQ0wsU0FBUyxFQUNULGVBQWUsRUFDZixZQUFZLEVBQ1osS0FBSyxFQUVMLE1BQU0sRUFDTixTQUFTLEVBQ1QsU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFOUYsT0FBTyxFQUNMLHFCQUFxQixFQUd0QixNQUFNLHdEQUF3RCxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLDhEQUE4RCxDQUFDO0FBQ25ILE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDaEMsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMzQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7Ozs7Ozs7QUFNckQsTUFBTSxPQUFPLG9CQUFvQjtJQTJCL0IsWUFDVSxvQkFBMkMsRUFDM0MsS0FBbUIsRUFDbkIsS0FBbUI7UUFGbkIseUJBQW9CLEdBQXBCLG9CQUFvQixDQUF1QjtRQUMzQyxVQUFLLEdBQUwsS0FBSyxDQUFjO1FB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a1N0ZXAsIFN0ZXBwZXJTZWxlY3Rpb25FdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9zdGVwcGVyJztcbmltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQ29udGVudENoaWxkcmVuLFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPbkRlc3Ryb3ksXG4gIE91dHB1dCxcbiAgUXVlcnlMaXN0LFxuICBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UsIEM4eVN0ZXBwZXIsIGdldHRleHQsIE1vZGFsU2VydmljZSwgU3RhdHVzIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBPcGVyYXRpb25TY2hlZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbi1zY2hlZHVsZXInO1xuaW1wb3J0IHtcbiAgQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICBCdWxrT3BlcmF0aW9uVHlwZSxcbiAgT3BlcmF0aW9uRGV0YWlsc1xufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuaW1wb3J0IHsgQ3JlYXRlQnVsa09wZXJhdGlvbkRldGFpbHNDb21wb25lbnQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvY3JlYXRlLWJ1bGstb3BlcmF0aW9uLWRldGFpbHMnO1xuaW1wb3J0IHsgQlVMS19PUEVSQVRJT05fRVZFTlQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvcHJvZHVjdC1leHBlcmllbmNlJztcbmltcG9ydCB7IGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlVW50aWwgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBDdXN0b21TdGVwIH0gZnJvbSAnLi9jdXN0b20tc3RlcC5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYnVsay1vcGVyYXRpb24tc3RlcHBlcicsXG4gIHRlbXBsYXRlVXJsOiAnYnVsay1vcGVyYXRpb24tc3RlcHBlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQnVsa09wZXJhdGlvblN0ZXBwZXIgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBCVUxLX09QRVJBVElPTl9FVkVOVCA9IEJVTEtfT1BFUkFUSU9OX0VWRU5UO1xuXG4gIEBJbnB1dCgpIHR5cGU6IEJ1bGtPcGVyYXRpb25UeXBlIHwgc3RyaW5nO1xuICBAT3V0cHV0KCkgc2VsZWN0aW9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8U3RlcHBlclNlbGVjdGlvbkV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQENvbnRlbnRDaGlsZHJlbihDdXN0b21TdGVwKSBjdXN0b21TdGVwczogUXVlcnlMaXN0PEN1c3RvbVN0ZXA+O1xuICBAVmlld0NoaWxkKEM4eVN0ZXBwZXIsIHsgc3RhdGljOiBmYWxzZSB9KVxuICBzdGVwcGVyOiBDOHlTdGVwcGVyO1xuICBAVmlld0NoaWxkKENyZWF0ZUJ1bGtPcGVyYXRpb25EZXRhaWxzQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgY3JlYXRlQnVsa09wZXJhdGlvbkRldGFpbHNDb21wb25lbnQ6IENyZWF0ZUJ1bGtPcGVyYXRpb25EZXRhaWxzQ29tcG9uZW50O1xuXG4gIHN0ZXBzOiBDdXN0b21TdGVwW10gPSBbXTtcbiAgc2hvd1N0ZXBwZXIgPSBmYWxzZTtcbiAgc2hvd0J1dHRvbnMgPSBmYWxzZTtcbiAgcGVuZGluZ1N0YXR1czogYm9vbGVhbjtcbiAgc3RlcHBlckJ1dHRvbnNMYWJlbHMgPSB7IGN1c3RvbTogZ2V0dGV4dCgnU2NoZWR1bGUgYnVsayBvcGVyYXRpb24nKSB9O1xuICBkZXZpY2VUeXBlcyQ6IE9ic2VydmFibGU8c3RyaW5nW10+O1xuICBkZXZpY2VRdWVyeVN0cmluZzogc3RyaW5nO1xuICBidWxrT3BlcmF0aW9uVHlwZTogQnVsa09wZXJhdGlvblR5cGU7XG4gIHNjaGVkdWxlRGF0YTogT3BlcmF0aW9uU2NoZWR1bGU7XG4gIG9wZXJhdGlvbkRldGFpbHNGb3JtOiBGb3JtR3JvdXA7XG4gIG9wZXJhdGlvbkRldGFpbHM6IE9wZXJhdGlvbkRldGFpbHM7XG4gIHJldHJpZXZlT3BlcmF0aW9uRGV0YWlsczogKCkgPT4gT3BlcmF0aW9uRGV0YWlscyB8IFByb21pc2U8T3BlcmF0aW9uRGV0YWlscz47XG5cbiAgcHJpdmF0ZSBkZXZpY2VUeXBlc1N1YmplY3QkOiBTdWJqZWN0PHN0cmluZ1tdPiA9IG5ldyBTdWJqZWN0KCk7XG4gIHByaXZhdGUgZW5kU3Vic2NyaXB0aW9uczogU3ViamVjdDx2b2lkPiA9IG5ldyBTdWJqZWN0KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBidWxrT3BlcmF0aW9uU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgbW9kYWw6IE1vZGFsU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0OiBBbGVydFNlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5kZXZpY2VUeXBlcyQgPSB0aGlzLmRldmljZVR5cGVzU3ViamVjdCQuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAvLyB3YWl0IGZvciB0aGUgbmV4dCBldmVudCBsb29wIHR1cm4gYXMgYHN0ZXBzYCBoYXMgYWxyZWFkeSBiZWVuIGNoZWNrZWQgaW4gdGhpcyBDRCBjeWNsZVxuICAgICAgdGhpcy5zdGVwcyA9IHRoaXMuY3VzdG9tU3RlcHMudG9BcnJheSgpO1xuICAgICAgdGhpcy5zaG93U3RlcHBlciA9IHRydWU7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgLy8gcG9zdHBvbmUgcmVuZGVyaW5nIG9mIGJ1dHRvbnMgZm9yIGN1c3RvbSBzdGVwcyB0byB0aGUgcG9pbnQgd2hlcmUgY3VzdG9tIHN0ZXBzIGhhdmUgYWxyZWFkeSBiZWVuIHJlbmRlcmVkXG4gICAgICAgIHRoaXMuc2hvd0J1dHRvbnMgPSB0cnVlO1xuICAgICAgICBpZiAodGhpcy5zdGVwcGVyKSB7XG4gICAgICAgICAgdGhpcy5zdGVwcGVyLnNlbGVjdGlvbkNoYW5nZS5waXBlKHRha2VVbnRpbCh0aGlzLmVuZFN1YnNjcmlwdGlvbnMpKS5zdWJzY3JpYmUoZXZlbnQgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb25DaGFuZ2UubmV4dChldmVudCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy5vcGVyYXRpb25EZXRhaWxzRm9ybSA9XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUJ1bGtPcGVyYXRpb25EZXRhaWxzQ29tcG9uZW50LmZnT3BlcmF0aW9uRGVzY3JpcHRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgY2hhbmdlRGV2aWNlVHlwZXMoZGV2aWNlVHlwZXM6IHN0cmluZyB8IHN0cmluZ1tdKSB7XG4gICAgaWYgKGRldmljZVR5cGVzKSB7XG4gICAgICB0aGlzLmRldmljZVR5cGVzU3ViamVjdCQubmV4dChBcnJheS5pc0FycmF5KGRldmljZVR5cGVzKSA/IGRldmljZVR5cGVzIDogW2RldmljZVR5cGVzXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGV2aWNlVHlwZXNTdWJqZWN0JC5uZXh0KFtdKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBjb25maXJtRGV2aWNlU2VsZWN0aW9uKCRldmVudDogeyBzdGVwcGVyOiBDOHlTdGVwcGVyOyBzdGVwOiBDZGtTdGVwIH0pIHtcbiAgICBpZiAoIXRoaXMuZGV2aWNlUXVlcnlTdHJpbmcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHRoaXMubW9kYWwuY29uZmlybShcbiAgICAgICAgICBnZXR0ZXh0KCdBbGwgZGV2aWNlcyBzZWxlY3RlZCcpLFxuICAgICAgICAgIGdldHRleHQoXG4gICAgICAgICAgICAnWW91IGFyZSBhYm91dCB0byBzY2hlZHVsZSB0aGUgYnVsayBvcGVyYXRpb24gdG8gYmUgZXhlY3V0ZWQgZm9yIGFsbCBkZXZpY2VzLiBEbyB5b3Ugd2FudCB0byBwcm9jZWVkPydcbiAgICAgICAgICApLFxuICAgICAgICAgIFN0YXR1cy5XQVJOSU5HLFxuICAgICAgICAgIHsgb2s6IGdldHRleHQoJ1NjaGVkdWxlIGZvciBhbGwgZGV2aWNlcycpLCBjYW5jZWw6IGdldHRleHQoJ0NhbmNlbCBhbmQgc2VsZWN0IGRldmljZXMnKSB9XG4gICAgICAgICk7XG4gICAgICAgICRldmVudC5zdGVwLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgICRldmVudC5zdGVwcGVyLm5leHQoKTtcbiAgICAgICAgdGhpcy5vcGVyYXRpb25EZXRhaWxzID0gdGhpcy5yZXRyaWV2ZU9wZXJhdGlvbkRldGFpbHNcbiAgICAgICAgICA/IGF3YWl0IHRoaXMucmV0cmlldmVPcGVyYXRpb25EZXRhaWxzKClcbiAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIC8vIEludGVudGlvbmFsbHkgZW1wdHlcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgJGV2ZW50LnN0ZXAuY29tcGxldGVkID0gdHJ1ZTtcbiAgICAgICRldmVudC5zdGVwcGVyLm5leHQoKTtcbiAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlscyA9IHRoaXMucmV0cmlldmVPcGVyYXRpb25EZXRhaWxzXG4gICAgICAgID8gYXdhaXQgdGhpcy5yZXRyaWV2ZU9wZXJhdGlvbkRldGFpbHMoKVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICB0aGlzLmJ1bGtPcGVyYXRpb25UeXBlID0gdGhpcy5idWxrT3BlcmF0aW9uU2VydmljZS5yZXRyaWV2ZUJ1bGtPcGVyYXRpb25UeXBlKFxuICAgICAgZ2V0KHRoaXMub3BlcmF0aW9uRGV0YWlscywgJ3Byb3RvdHlwZScpXG4gICAgKTtcbiAgICBpZiAoXG4gICAgICB0aGlzLm9wZXJhdGlvbkRldGFpbHNGb3JtICYmXG4gICAgICBnZXQodGhpcy5vcGVyYXRpb25EZXRhaWxzRm9ybSwgJ2NvbnRyb2xzLmRlc2NyaXB0aW9uLnByaXN0aW5lJykgJiZcbiAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlsc1xuICAgICkge1xuICAgICAgdGhpcy5vcGVyYXRpb25EZXRhaWxzRm9ybS5wYXRjaFZhbHVlKHtcbiAgICAgICAgZGVzY3JpcHRpb246IGdldCh0aGlzLm9wZXJhdGlvbkRldGFpbHMsICdwcm90b3R5cGUuZGVzY3JpcHRpb24nKVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgY2FuY2VsKCkge1xuICAgIHRoaXMuY2xvc2UoKTtcbiAgfVxuXG4gIGFzeW5jIHNjaGVkdWxlQnVsa09wZXJhdGlvbigpIHtcbiAgICB0aGlzLnBlbmRpbmdTdGF0dXMgPSB0cnVlO1xuXG4gICAgdHJ5IHtcbiAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlscy5wcm90b3R5cGUuZGVzY3JpcHRpb24gPSBnZXQoXG4gICAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlsc0Zvcm0sXG4gICAgICAgICdjb250cm9scy5kZXNjcmlwdGlvbi52YWx1ZSdcbiAgICAgICk7XG4gICAgICB0aGlzLm9wZXJhdGlvbkRldGFpbHMubm90ZSA9IGdldCh0aGlzLm9wZXJhdGlvbkRldGFpbHNGb3JtLCAnY29udHJvbHMubm90ZS52YWx1ZScpO1xuICAgICAgdGhpcy5vcGVyYXRpb25EZXRhaWxzLnNjaGVkdWxlID0gZ2V0KHRoaXMub3BlcmF0aW9uRGV0YWlsc0Zvcm0sICdjb250cm9scy5zY2hlZHVsZS52YWx1ZScpO1xuXG4gICAgICBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25TZXJ2aWNlLnNjaGVkdWxlQnVsa09wZXJhdGlvbihcbiAgICAgICAgdGhpcy5kZXZpY2VRdWVyeVN0cmluZyxcbiAgICAgICAgdGhpcy5vcGVyYXRpb25EZXRhaWxzXG4gICAgICApO1xuICAgICAgdGhpcy5hbGVydC5zdWNjZXNzKGdldHRleHQoJ05ldyBidWxrIG9wZXJhdGlvbiBzY2hlZHVsZWQuJykpO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoZXgpO1xuICAgIH1cblxuICAgIHRoaXMucGVuZGluZ1N0YXR1cyA9IGZhbHNlO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5lbmRTdWJzY3JpcHRpb25zLm5leHQoKTtcbiAgICB0aGlzLmVuZFN1YnNjcmlwdGlvbnMuY29tcGxldGUoKTtcbiAgfVxuXG4gIHByaXZhdGUgY2xvc2UoKSB7XG4gICAgdGhpcy5zdGVwcGVyLnJlc2V0KCk7XG4gICAgdGhpcy5idWxrT3BlcmF0aW9uU2VydmljZS5yZXR1cm5Ub0J1bGtPcGVyYXRpb25PdmVydmlldygpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZml0LWhcIj5cbiAgPGM4eS1zdGVwcGVyXG4gICAgY2xhc3M9XCJkLWNvbCBuby1hbGlnbi1pdGVtcyBmaXQtaCBjOHktc3RlcHBlci0tbm8tYnRucyBhLWktY2VudGVyXCJcbiAgICBsaW5lYXJcbiAgICBbZGlzYWJsZURlZmF1bHRJY29uc109XCJ7IGVkaXQ6IHRydWUsIGRvbmU6IGZhbHNlIH1cIlxuICAgIFtjdXN0b21DbGFzc2VzXT1cIlsnY29sLXhzLTEwJywgJ2NvbC1zbS04JywgJ20tdC0yNCcsICdtLWItNDAnLCAncC0wJywgJ2ZsZXgtbm8tc2hyaW5rJ11cIlxuICAgICpuZ0lmPVwic2hvd1N0ZXBwZXJcIlxuICAgIGM4eVByb2R1Y3RFeHBlcmllbmNlXG4gICAgW2FjdGlvbk5hbWVdPVwiQlVMS19PUEVSQVRJT05fRVZFTlRcIlxuICAgIFthY3Rpb25EYXRhXT1cInsgYnVsa09wZXJhdGlvblR5cGU6IHR5cGUgfVwiXG4gID5cbiAgICA8IS0tIENVU1RPTSBTVEVQUyAxIHRvIE4tMiAtLT5cbiAgICA8Y2RrLXN0ZXBcbiAgICAgICpuZ0Zvcj1cImxldCBzdGVwIG9mIHN0ZXBzXCJcbiAgICAgIFtsYWJlbF09XCJzdGVwLmxhYmVsIHwgdHJhbnNsYXRlXCJcbiAgICAgIFtjb21wbGV0ZWRdPVwic3RlcC5jb21wbGV0ZWRcIlxuICAgID5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJzdGVwLnRlbXBsYXRlUmVmXCI+PC9uZy1jb250YWluZXI+XG4gICAgICA8Yzh5LXN0ZXBwZXItYnV0dG9uc1xuICAgICAgICBjbGFzcz1cImQtYmxvY2sgY2FyZC1mb290ZXIgcC0yNCBzZXBhcmF0b3IgZml0LXdcIlxuICAgICAgICAqbmdJZj1cInNob3dCdXR0b25zXCJcbiAgICAgICAgW2Rpc2FibGVkXT1cInN0ZXAuYnV0dG9uc0Rpc2FibGVkXCJcbiAgICAgICAgKG9uTmV4dCk9XCJzdGVwLm9uTmV4dCgkZXZlbnQpXCJcbiAgICAgICAgKG9uQ2FuY2VsKT1cImNhbmNlbCgpXCJcbiAgICAgID48L2M4eS1zdGVwcGVyLWJ1dHRvbnM+XG4gICAgPC9jZGstc3RlcD5cbiAgICA8IS0tIFNURVAgTi0xIC0gRGF0YS1ncmlkIC0tPlxuICAgIDxjZGstc3RlcCBbbGFiZWxdPVwiJ0ZpbHRlciB0YXJnZXQgZGV2aWNlcycgfCB0cmFuc2xhdGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJsb2NrIHAtYi0wIHAtdC0wIGZsZXgtbm8tc2hyaW5rIHNlcGFyYXRvci1ib3R0b20gY29sLXhzLTEyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggai1jLWNlbnRlciBwLWItOCBwLXQtNFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLXNtLTZcIj5cbiAgICAgICAgICAgIDxoNCBjbGFzcz1cInRleHQtY2VudGVyIHRleHQtbm9ybWFsIG0tYi0xNlwiPlxuICAgICAgICAgICAgICB7eyAnRmlsdGVyIHRhcmdldCBkZXZpY2VzJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0xMiBmbGV4LWdyb3cgbm8tZ3V0dGVyXCI+XG4gICAgICAgIDxjOHktZGV2aWNlLXNlbGVjdG9yXG4gICAgICAgICAgW2RldmljZVR5cGVzXT1cImRldmljZVR5cGVzJFwiXG4gICAgICAgICAgKG9uRGV2aWNlUXVlcnlTdHJpbmdDaGFuZ2UpPVwiZGV2aWNlUXVlcnlTdHJpbmcgPSAkZXZlbnRcIlxuICAgICAgICA+PC9jOHktZGV2aWNlLXNlbGVjdG9yPlxuICAgICAgPC9kaXY+XG4gICAgICA8Yzh5LXN0ZXBwZXItYnV0dG9uc1xuICAgICAgICBjbGFzcz1cImQtYmxvY2sgY2FyZC1mb290ZXIgcC0yNCBzZXBhcmF0b3IgZml0LXdcIlxuICAgICAgICAqbmdJZj1cInNob3dCdXR0b25zXCJcbiAgICAgICAgKG9uTmV4dCk9XCJjb25maXJtRGV2aWNlU2VsZWN0aW9uKCRldmVudClcIlxuICAgICAgICAob25DYW5jZWwpPVwiY2FuY2VsKClcIlxuICAgICAgPjwvYzh5LXN0ZXBwZXItYnV0dG9ucz5cbiAgICA8L2Nkay1zdGVwPlxuXG4gICAgPCEtLSBTVEVQIE4gLSBTY2hlZHVsZXIgLS0+XG4gICAgPGNkay1zdGVwIFtsYWJlbF09XCInQ29uZmlybSBhbmQgc2NoZWR1bGUgYnVsayBvcGVyYXRpb24nIHwgdHJhbnNsYXRlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ibG9jayBmbGV4LW5vLXNocmluayBwLWItMCBwLXQtMCBzZXBhcmF0b3ItYm90dG9tIGNvbC14cy0xMlwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGotYy1jZW50ZXIgcC1iLTggcC10LTRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTEyIGNvbC1zbS02XCI+XG4gICAgICAgICAgICA8aDQgY2xhc3M9XCJ0ZXh0LWNlbnRlciB0ZXh0LW5vcm1hbCBtLWItMTZcIj5cbiAgICAgICAgICAgICAge3sgJ0NvbmZpcm0gYW5kIHNjaGVkdWxlIGJ1bGsgb3BlcmF0aW9uJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0xMiBmbGV4LWdyb3cgbm8tZ3V0dGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWlubmVyLXNjcm9sbCBmaXQtaFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJsb2NrIHAtYi0wXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGotYy1jZW50ZXIgcC10LTggcC1iLThcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0xMiBjb2wtc20tNlwiPlxuICAgICAgICAgICAgICAgIDxjOHktb3BlcmF0aW9uLXN1bW1hcnlcbiAgICAgICAgICAgICAgICAgIFtuYW1lXT1cIm9wZXJhdGlvbkRldGFpbHM/Lm5hbWUgfCB0cmFuc2xhdGVcIlxuICAgICAgICAgICAgICAgICAgW2Rlc2NyaXB0aW9uXT1cIm9wZXJhdGlvbkRldGFpbHM/LmRlc2NyaXB0aW9uIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgICAgICAgICAgIFtkZXZpY2VRdWVyeVN0cmluZ109XCJkZXZpY2VRdWVyeVN0cmluZ1wiXG4gICAgICAgICAgICAgICAgPjwvYzh5LW9wZXJhdGlvbi1zdW1tYXJ5PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBqLWMtY2VudGVyXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLXNtLTZcIj5cbiAgICAgICAgICAgICAgICA8Yzh5LWNyZWF0ZS1idWxrLW9wZXJhdGlvbi1kZXRhaWxzXG4gICAgICAgICAgICAgICAgICBbYnVsa09wZXJhdGlvblR5cGVdPVwiYnVsa09wZXJhdGlvblR5cGVcIlxuICAgICAgICAgICAgICAgID48L2M4eS1jcmVhdGUtYnVsay1vcGVyYXRpb24tZGV0YWlscz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxjOHktc3RlcHBlci1idXR0b25zXG4gICAgICAgIGNsYXNzPVwiZC1ibG9jayBjYXJkLWZvb3RlciBwLTI0IHNlcGFyYXRvciBmaXQtd1wiXG4gICAgICAgICpuZ0lmPVwic2hvd0J1dHRvbnNcIlxuICAgICAgICBbbGFiZWxzXT1cInN0ZXBwZXJCdXR0b25zTGFiZWxzXCJcbiAgICAgICAgW3BlbmRpbmddPVwicGVuZGluZ1N0YXR1c1wiXG4gICAgICAgIFtkaXNhYmxlZF09XCJvcGVyYXRpb25EZXRhaWxzRm9ybT8uaW52YWxpZFwiXG4gICAgICAgIChvbkNhbmNlbCk9XCJjYW5jZWwoKVwiXG4gICAgICAgIChvbkN1c3RvbSk9XCJzY2hlZHVsZUJ1bGtPcGVyYXRpb24oKVwiXG4gICAgICA+PC9jOHktc3RlcHBlci1idXR0b25zPlxuICAgIDwvY2RrLXN0ZXA+XG4gIDwvYzh5LXN0ZXBwZXI+XG48L2Rpdj5cbiJdfQ==