import { ChangeDetectorRef, Component, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';
import { Router } from '@angular/router';
import { InventoryService } from '@c8y/client';
import { gettext } from '../i18n/gettext';
import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';
import { defer, empty, merge, of, Subject } from 'rxjs';
import { switchMap, takeUntil, tap } from 'rxjs/operators';
import { ManagedObjectType } from '../common/managed-object-type';
import { TypeaheadComponent } from '../select/typeahead.component';
import { InventorySearchService } from './inventory-search.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@c8y/client";
import * as i3 from "./inventory-search.service";
import * as i4 from "@angular/cdk/a11y";
import * as i5 from "@angular/forms";
import * as i6 from "ngx-bootstrap/dropdown";
import * as i7 from "../common/empty-state/empty-state.component";
import * as i8 from "../common/icon.directive";
import * as i9 from "../i18n/c8y-translate.directive";
import * as i10 from "@angular/common";
import * as i11 from "../common/forOf.directive";
import * as i12 from "../common/loading.component";
import * as i13 from "../select/typeahead.component";
import * as i14 from "../list-group/list-item.component";
import * as i15 from "../list-group/list-item-icon.component";
import * as i16 from "../device-status/device-status.component";
import * as i17 from "../i18n/c8y-translate.pipe";
import * as i18 from "../common/should-show-mo.pipe";
import * as i19 from "../common/get-group-icon.pipe";
export class SearchInputComponent {
    constructor(router, inventory, inventorySearchService, cd) {
        this.router = router;
        this.inventory = inventory;
        this.inventorySearchService = inventorySearchService;
        this.cd = cd;
        this.mode = 'search';
        /**
         * Unlocks the ability to place a custom template under the search input.
         */
        this.enableCustomTemplatePlaceholder = false;
        this.container = '';
        this.groupsOnly = false;
        this.filter = new EventEmitter();
        this.search = new EventEmitter();
        this.reset = new EventEmitter();
        this.onClick = new EventEmitter();
        this.deviceType = ManagedObjectType;
        this.term = '';
        this.defaultPlaceholder = gettext('Search for groups or assets…');
        this.recentSearchResults = [];
        this.isLoading = false;
        this.noMatch = false;
        this.RECENT_SEARCH_STORAGE_KEY = 'recent_search_view';
        this.MAX_RECENT_SEARCH_RESULTS = 5;
        this.DEFAULT_FILTER = {
            withTotalPages: true,
            pageSize: 5,
            withChildren: false
        };
        this.KEYCODE_ENTER = 'Enter';
        this.KEYCODE_ESC = 'Escape';
        this.onDestroy$ = new Subject();
    }
    /**
     * A custom query setter used to override the standard query. In order to obtain data.
     */
    set customDataQuery(query) {
        if (query) {
            this.customQuery = query;
        }
    }
    async ngOnInit() {
        const recentSearchIds = JSON.parse(localStorage.getItem(this.RECENT_SEARCH_STORAGE_KEY));
        if (recentSearchIds && recentSearchIds.length > 0) {
            const { data } = await this.inventory.list({ ids: recentSearchIds.join(',') });
            this.recentSearchResults = this.groupsOnly
                ? this.inventorySearchService.filterOnlyGroups(data)
                : data;
            this.recentlyRegisteredResults$ = defer(() => this.inventory.list({
                q: '$orderby=creationTime desc',
                ...this.DEFAULT_FILTER
            }));
        }
        if (this.mode === 'select') {
            requestAnimationFrame(() => {
                this.subscribeOnSearch();
            });
        }
        if (this.externalTerm) {
            this.externalTerm.pipe(takeUntil(this.onDestroy$)).subscribe(term => {
                if (term === null) {
                    this.typeahead.onSearch.emit(this.term);
                    return;
                }
                this.typeahead.onSearch.emit(term);
            });
        }
    }
    onKeydownHandler(event) {
        if (event.key === this.KEYCODE_ESC) {
            this.hideDropdown();
        }
    }
    onOpenChange(isOpen) {
        if (isOpen) {
            // needs to request an animation frame as
            // otherwise the typeahead is undefined
            requestAnimationFrame(() => {
                this.subscribeOnSearch();
                this.typeahead.dropdown.show();
                this.typeahead.searchControl.nativeElement.focus();
            });
        }
    }
    open(event, mo, term) {
        event.stopPropagation();
        const isAlreadyRecent = this.recentSearchResults.find(({ id }) => id === mo.id);
        if (!isAlreadyRecent) {
            this.recentSearchResults.unshift(mo);
            this.recentSearchResults = this.recentSearchResults.slice(0, this.MAX_RECENT_SEARCH_RESULTS);
        }
        const recentSearchIds = this.recentSearchResults.map(({ id }) => id);
        localStorage.setItem(this.RECENT_SEARCH_STORAGE_KEY, JSON.stringify(recentSearchIds));
        if (term) {
            this.selected = mo;
            this.term = term;
        }
        this.onClick.emit(mo);
        this.hideDropdown();
    }
    onReset(status) {
        status.$event.stopPropagation();
        this.reset.emit(this.selected);
        this.typeahead.onSearch.emit('');
        this.selected = undefined;
        this.typeahead.searchControl.nativeElement.focus();
    }
    keyDown(event) {
        if (event.key === this.KEYCODE_ENTER) {
            // enter hit can be faster then typeahead debounce,
            // therefore we take the term from the DOM element
            // itself:
            const searchTerm = event.target.value;
            this.onSearch(searchTerm);
        }
    }
    onSearch(search) {
        this.search.emit(search);
        this.hideDropdown();
    }
    onFilter(search) {
        this.filter.emit(search);
        this.hideDropdown();
    }
    onOpenAssetTable() {
        this.router.navigateByUrl('/assetsearch');
        this.hideDropdown();
    }
    ngOnDestroy() {
        if (this.onDestroy$) {
            this.onDestroy$.next();
            this.onDestroy$.complete();
        }
    }
    hideDropdown() {
        if (this.dropdown) {
            this.dropdown.hide();
            return;
        }
        if (this.typeahead && this.typeahead.dropdown) {
            this.typeahead.dropdown.hide();
            return;
        }
    }
    subscribeOnSearch() {
        if (!this.results$) {
            this.results$ = this.typeahead.onSearch.pipe(tap(term => this.onTypingStarted(term)), switchMap(term => this.mergeRequest(term)), tap(() => this.cd.detectChanges()));
        }
    }
    mergeRequest(term) {
        return merge(of({ data: [] }), this.handleQuery(term).pipe(tap(({ data, paging }) => this.onLoadingDone(data, paging))));
    }
    handleQuery(term) {
        if (!term) {
            return empty();
        }
        if (this.customQuery) {
            return defer(() => this.customQuery(term));
        }
        return defer(() => this.groupsOnly
            ? this.inventorySearchService.searchGroups(term)
            : this.inventorySearchService.search(term));
    }
    onLoadingDone(data, paging) {
        this.isLoading = false;
        this.noMatch = paging && paging.nextPage === null && data.length === 0;
    }
    onTypingStarted(term) {
        this.noMatch = false;
        this.term = term;
        this.isLoading = term.length > 0;
    }
}
SearchInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: SearchInputComponent, deps: [{ token: i1.Router }, { token: i2.InventoryService }, { token: i3.InventorySearchService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
SearchInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: SearchInputComponent, selector: "c8y-search-input", inputs: { mode: "mode", enableCustomTemplatePlaceholder: "enableCustomTemplatePlaceholder", customPlaceholder: "customPlaceholder", externalTerm: "externalTerm", customDataQuery: "customDataQuery", container: "container", groupsOnly: "groupsOnly" }, outputs: { filter: "filter", search: "search", reset: "reset", onClick: "onClick" }, host: { listeners: { "document:keydown": "onKeydownHandler($event)" } }, viewQueries: [{ propertyName: "typeahead", first: true, predicate: TypeaheadComponent, descendants: true }, { propertyName: "dropdown", first: true, predicate: ["searchDropdown"], descendants: true }], ngImport: i0, template: "<div\n  class=\"dropdown\"\n  #searchDropdown=\"bs-dropdown\"\n  [insideClick]=\"true\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  [cdkTrapFocus]=\"searchDropdown.isOpen\"\n  *ngIf=\"mode === 'search'\"\n  dropdown\n>\n  <button\n    class=\"main-header-button dropdown-toggle c8y-dropdown\"\n    type=\"button\"\n    [title]=\"'Search' | translate\"\n    type=\"button\"\n    dropdownToggle\n    data-cy=\"search-input--search-btn\"\n  >\n    <i\n      class=\"icon-2x\"\n      c8yIcon=\"search\"\n    ></i>\n  </button>\n\n  <div\n    class=\"search-header-menu dropdown-menu dropdown-menu-right\"\n    id=\"searchDropdown\"\n    *dropdownMenu\n  >\n    <ng-container *ngTemplateOutlet=\"form\"></ng-container>\n  </div>\n</div>\n\n<div \n  class=\"search-header-inline\" \n  *ngIf=\"mode === 'select'\"\n>\n  <ng-container *ngTemplateOutlet=\"form\"></ng-container>\n</div>\n<ng-template #form>\n  <form \n    [ngClass]=\"{ 'c8y-search-form': mode === 'search' }\" \n    novalidate \n    #searchForm=\"ngForm\"\n  >\n    <c8y-typeahead\n      [(ngModel)]=\"selected\"\n      placeholder=\"{{ customPlaceholder ? customPlaceholder : defaultPlaceholder }}\"\n      (keydown)=\"keyDown($event)\"\n      (onIconClick)=\"onReset($event)\"\n      [icon]=\"term ? 'times' : 'search'\"\n      [allowFreeEntries]=\"false\"\n      [container]=\"container\"\n      name=\"selected\"\n      title=\"Search\"\n    >\n      <div\n        class=\"c8y-list__item p-l-24 p-r-24 p-b-8 separator-bottom sticky-top p-t-4\"\n        *ngIf=\"enableCustomTemplatePlaceholder && mode === 'search'\"\n      >\n        <ng-content></ng-content>\n      </div>\n\n      <!-- filter buttons -->\n      <c8y-li *ngIf=\"term.length !== 0 && mode === 'search'\">\n        <div class=\"d-flex\">\n          <p class=\"m-r-4 text-muted\">\n            <em translate>Searching by exact match. Click for other search options:</em>\n          </p>\n          <div class=\"btn-group btn-group-sm\">\n            <button\n              class=\"btn btn-default\"\n              type=\"button\"\n              title=\"{{ 'Starts with' | translate }}\"\n              data-cy=\"search-input--search-starts-with\"\n              (click)=\"onFilter(term + '*')\"\n            >\n              {{ 'Starts with' | translate }}\n            </button>\n            <button\n              class=\"btn btn-default\"\n              type=\"button\"\n              title=\"{{ 'Contains' | translate }}\"\n              data-cy=\"search-input--search-contains\"\n              (click)=\"onFilter('*' + term + '*')\"\n            >\n              {{ 'Contains' | translate }}\n            </button>\n            <button\n              class=\"btn btn-default\"\n              type=\"button\"\n              title=\"{{ 'Ends with' | translate }}\"\n              data-cy=\"search-input--search-ends-with\"\n              (click)=\"onFilter('*' + term)\"\n            >\n              {{ 'Ends with' | translate }}\n            </button>\n          </div>\n        </div>\n      </c8y-li>\n\n      <!-- Recent search -->\n      <c8y-li\n        class=\"p-l-24 p-r-24\"\n        *ngIf=\"term.length === 0 && recentSearchResults.length > 0\"\n        [selectable]=\"false\"\n      >\n        <div class=\"legend form-block\">\n          <span translate>Recent search views</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        class=\"c8y-list__item--link m-l-16 m-r-16\"\n        *ngFor=\"let result of term.length === 0 ? recentSearchResults : []\"\n        (click)=\"open($event, result, result.name)\"\n      >\n        <c8y-li-icon>\n          <ng-container *ngIf=\"result | shouldShowMo: deviceType.DEVICE; else group\">\n            <device-status [mo]=\"result\"></device-status>\n          </ng-container>\n          <ng-template #group>\n            <i \n              class=\"c8y-icon-duocolor\"\n              [c8yIcon]=\"result | getGroupIcon | async\"\n              >\n            </i>\n          </ng-template>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- Recently registered devices -->\n      <c8y-li\n        *ngIf=\"\n          term.length === 0 && (recentlyRegisteredResults$ | async)?.data?.length > 0 && !groupsOnly\n        \"\n        class=\"p-l-24 p-r-24\"\n        [selectable]=\"false\"\n      >\n        <div class=\"legend form-block\">\n          <span translate>Recently registered devices</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        *c8yFor=\"\n          let result of term.length === 0 && !groupsOnly\n            ? recentlyRegisteredResults$\n            : { data: [] };\n          loadMore: 'none'\n        \"\n        class=\"c8y-list__item--link m-l-16 m-r-16\"\n        (click)=\"open($event, result, result.name)\"\n      >\n        <c8y-li-icon>\n          <ng-container *ngIf=\"result | shouldShowMo: deviceType.DEVICE; else group\">\n            <device-status [mo]=\"result\"></device-status>\n          </ng-container>\n          <ng-template #group>\n            <i \n              class=\"c8y-icon-duocolor\"\n              [c8yIcon]=\"result | getGroupIcon | async\" \n              >\n            </i>\n          </ng-template>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- Search results -->\n      <c8y-li *ngIf=\"term.length !== 0\" class=\"p-l-24 p-r-24\" [selectable]=\"false\">\n        <div class=\"legend form-block m-0\">\n          <span translate>Search results</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        *c8yFor=\"\n          let result of results$;\n          loadMore: 'auto';\n          notFound: notFoundTemplate;\n          loadingTemplate: loading;\n          loadNextLabel: 'Find more\u2026'\n        \"\n        class=\"c8y-list__item--link m-l-16 m-r-16\"\n        (click)=\"open($event, result, result.name)\"\n        [title]=\"result.name\"\n        data-cy=\"search-input--search-results\"\n      >\n        <c8y-li-icon>\n          <ng-container *ngIf=\"result | shouldShowMo: deviceType.DEVICE; else group\">\n            <device-status [mo]=\"result\"></device-status>\n          </ng-container>\n          <ng-template #group>\n            <i \n              class=\"c8y-icon-duocolor\"\n              [c8yIcon]=\"result | getGroupIcon | async\"\n              >\n            </i>\n          </ng-template>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- No search results found entry -->\n      <ng-template #notFoundTemplate>\n        <c8y-ui-empty-state \n          data-cy=\"search-input--empty-state\"                   \n          [ngClass]=\"{ 'p-4': mode === 'search' }\"\n          [icon]=\"'search'\"\n          [title]=\"'No match found.' | translate\"\n          [horizontal]=\"true\"\n          *ngIf=\"noMatch\"\n        >\n          <small translate *ngIf=\"mode === 'search'\">\n            Try to filter or open the asset grid to show all devices and groups.\n          </small>\n          <small translate *ngIf=\"mode === 'select'\">Try to rephrase your search word.</small>\n        </c8y-ui-empty-state>\n      </ng-template>\n\n      <!-- loading bar first entries -->\n      <c8y-li *ngIf=\"isLoading\">\n        <c8y-loading></c8y-loading>\n      </c8y-li>\n\n      <!-- loading bar for loading more entries (inventory roles) -->\n      <ng-template #loading>\n        <c8y-li>\n          <c8y-loading></c8y-loading>\n        </c8y-li>\n      </ng-template>\n\n      <!-- more filter possibilities -->\n      <c8y-li\n        class=\"m-t-24 bg-level-2 p-t-16 p-b-16 p-l-24 p-r-24 sticky-bottom\"\n        [selectable]=\"false\"\n        *ngIf=\"mode === 'search'\"\n      >\n        <div class=\"d-flex a-i-center\">\n          <i c8yIcon=\"info-circle\" class=\"text-info m-r-4\"></i>\n          <p translate class=\"m-r-8\">Need more filter possibilities?</p>\n          <button\n            class=\"m-l-16 btn btn-default btn-sm\"\n            title=\"{{ 'Go to the asset data table' | translate }}\"\n            (mousedown)=\"onOpenAssetTable()\"\n            data-cy=\"search-input--asset-table-btn\"\n            type=\"button\"\n            (mousedown)=\"onOpenAssetTable()\"\n          >\n            {{ 'Go to the asset data table' | translate }}\n          </button>\n        </div>\n      </c8y-li>\n    </c8y-typeahead>\n  </form>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i4.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }, { kind: "directive", type: i5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i6.BsDropdownMenuDirective, selector: "[bsDropdownMenu],[dropdownMenu]", exportAs: ["bs-dropdown-menu"] }, { kind: "directive", type: i6.BsDropdownToggleDirective, selector: "[bsDropdownToggle],[dropdownToggle]", exportAs: ["bs-dropdown-toggle"] }, { kind: "directive", type: i6.BsDropdownDirective, selector: "[bsDropdown], [dropdown]", inputs: ["placement", "triggers", "container", "dropup", "autoClose", "isAnimated", "insideClick", "isDisabled", "isOpen"], outputs: ["isOpenChange", "onShown", "onHidden"], exportAs: ["bs-dropdown"] }, { kind: "component", type: i7.EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: ["icon", "title", "subtitle", "horizontal"] }, { kind: "directive", type: i8.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i9.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i10.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i10.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i10.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i10.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i11.ForOfDirective, selector: "[c8yFor]", inputs: ["c8yForOf", "c8yForLoadMore", "c8yForPipe", "c8yForNotFound", "c8yForMaxIterations", "c8yForLoadingTemplate", "c8yForLoadNextLabel", "c8yForRealtime", "c8yForRealtimeOptions", "c8yForComparator", "c8yForEnableVirtualScroll", "c8yForVirtualScrollElementSize", "c8yForVirtualScrollStrategy", "c8yForVirtualScrollContainerHeight"], outputs: ["c8yForCount"] }, { kind: "component", type: i12.LoadingComponent, selector: "c8y-loading" }, { kind: "component", type: i13.TypeaheadComponent, selector: "c8y-typeahead", inputs: ["required", "maxlength", "disabled", "allowFreeEntries", "placeholder", "displayProperty", "icon", "name", "autoClose", "hideNew", "container", "selected"], outputs: ["onSearch", "onIconClick"] }, { kind: "component", type: i14.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i15.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "component", type: i16.DeviceStatusComponent, selector: "device-status", inputs: ["mo"] }, { kind: "pipe", type: i17.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i10.AsyncPipe, name: "async" }, { kind: "pipe", type: i18.ShouldShowMoPipe, name: "shouldShowMo" }, { kind: "pipe", type: i19.GetGroupIconPipe, name: "getGroupIcon" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: SearchInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-search-input', template: "<div\n  class=\"dropdown\"\n  #searchDropdown=\"bs-dropdown\"\n  [insideClick]=\"true\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  [cdkTrapFocus]=\"searchDropdown.isOpen\"\n  *ngIf=\"mode === 'search'\"\n  dropdown\n>\n  <button\n    class=\"main-header-button dropdown-toggle c8y-dropdown\"\n    type=\"button\"\n    [title]=\"'Search' | translate\"\n    type=\"button\"\n    dropdownToggle\n    data-cy=\"search-input--search-btn\"\n  >\n    <i\n      class=\"icon-2x\"\n      c8yIcon=\"search\"\n    ></i>\n  </button>\n\n  <div\n    class=\"search-header-menu dropdown-menu dropdown-menu-right\"\n    id=\"searchDropdown\"\n    *dropdownMenu\n  >\n    <ng-container *ngTemplateOutlet=\"form\"></ng-container>\n  </div>\n</div>\n\n<div \n  class=\"search-header-inline\" \n  *ngIf=\"mode === 'select'\"\n>\n  <ng-container *ngTemplateOutlet=\"form\"></ng-container>\n</div>\n<ng-template #form>\n  <form \n    [ngClass]=\"{ 'c8y-search-form': mode === 'search' }\" \n    novalidate \n    #searchForm=\"ngForm\"\n  >\n    <c8y-typeahead\n      [(ngModel)]=\"selected\"\n      placeholder=\"{{ customPlaceholder ? customPlaceholder : defaultPlaceholder }}\"\n      (keydown)=\"keyDown($event)\"\n      (onIconClick)=\"onReset($event)\"\n      [icon]=\"term ? 'times' : 'search'\"\n      [allowFreeEntries]=\"false\"\n      [container]=\"container\"\n      name=\"selected\"\n      title=\"Search\"\n    >\n      <div\n        class=\"c8y-list__item p-l-24 p-r-24 p-b-8 separator-bottom sticky-top p-t-4\"\n        *ngIf=\"enableCustomTemplatePlaceholder && mode === 'search'\"\n      >\n        <ng-content></ng-content>\n      </div>\n\n      <!-- filter buttons -->\n      <c8y-li *ngIf=\"term.length !== 0 && mode === 'search'\">\n        <div class=\"d-flex\">\n          <p class=\"m-r-4 text-muted\">\n            <em translate>Searching by exact match. Click for other search options:</em>\n          </p>\n          <div class=\"btn-group btn-group-sm\">\n            <button\n              class=\"btn btn-default\"\n              type=\"button\"\n              title=\"{{ 'Starts with' | translate }}\"\n              data-cy=\"search-input--search-starts-with\"\n              (click)=\"onFilter(term + '*')\"\n            >\n              {{ 'Starts with' | translate }}\n            </button>\n            <button\n              class=\"btn btn-default\"\n              type=\"button\"\n              title=\"{{ 'Contains' | translate }}\"\n              data-cy=\"search-input--search-contains\"\n              (click)=\"onFilter('*' + term + '*')\"\n            >\n              {{ 'Contains' | translate }}\n            </button>\n            <button\n              class=\"btn btn-default\"\n              type=\"button\"\n              title=\"{{ 'Ends with' | translate }}\"\n              data-cy=\"search-input--search-ends-with\"\n              (click)=\"onFilter('*' + term)\"\n            >\n              {{ 'Ends with' | translate }}\n            </button>\n          </div>\n        </div>\n      </c8y-li>\n\n      <!-- Recent search -->\n      <c8y-li\n        class=\"p-l-24 p-r-24\"\n        *ngIf=\"term.length === 0 && recentSearchResults.length > 0\"\n        [selectable]=\"false\"\n      >\n        <div class=\"legend form-block\">\n          <span translate>Recent search views</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        class=\"c8y-list__item--link m-l-16 m-r-16\"\n        *ngFor=\"let result of term.length === 0 ? recentSearchResults : []\"\n        (click)=\"open($event, result, result.name)\"\n      >\n        <c8y-li-icon>\n          <ng-container *ngIf=\"result | shouldShowMo: deviceType.DEVICE; else group\">\n            <device-status [mo]=\"result\"></device-status>\n          </ng-container>\n          <ng-template #group>\n            <i \n              class=\"c8y-icon-duocolor\"\n              [c8yIcon]=\"result | getGroupIcon | async\"\n              >\n            </i>\n          </ng-template>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- Recently registered devices -->\n      <c8y-li\n        *ngIf=\"\n          term.length === 0 && (recentlyRegisteredResults$ | async)?.data?.length > 0 && !groupsOnly\n        \"\n        class=\"p-l-24 p-r-24\"\n        [selectable]=\"false\"\n      >\n        <div class=\"legend form-block\">\n          <span translate>Recently registered devices</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        *c8yFor=\"\n          let result of term.length === 0 && !groupsOnly\n            ? recentlyRegisteredResults$\n            : { data: [] };\n          loadMore: 'none'\n        \"\n        class=\"c8y-list__item--link m-l-16 m-r-16\"\n        (click)=\"open($event, result, result.name)\"\n      >\n        <c8y-li-icon>\n          <ng-container *ngIf=\"result | shouldShowMo: deviceType.DEVICE; else group\">\n            <device-status [mo]=\"result\"></device-status>\n          </ng-container>\n          <ng-template #group>\n            <i \n              class=\"c8y-icon-duocolor\"\n              [c8yIcon]=\"result | getGroupIcon | async\" \n              >\n            </i>\n          </ng-template>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- Search results -->\n      <c8y-li *ngIf=\"term.length !== 0\" class=\"p-l-24 p-r-24\" [selectable]=\"false\">\n        <div class=\"legend form-block m-0\">\n          <span translate>Search results</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        *c8yFor=\"\n          let result of results$;\n          loadMore: 'auto';\n          notFound: notFoundTemplate;\n          loadingTemplate: loading;\n          loadNextLabel: 'Find more\u2026'\n        \"\n        class=\"c8y-list__item--link m-l-16 m-r-16\"\n        (click)=\"open($event, result, result.name)\"\n        [title]=\"result.name\"\n        data-cy=\"search-input--search-results\"\n      >\n        <c8y-li-icon>\n          <ng-container *ngIf=\"result | shouldShowMo: deviceType.DEVICE; else group\">\n            <device-status [mo]=\"result\"></device-status>\n          </ng-container>\n          <ng-template #group>\n            <i \n              class=\"c8y-icon-duocolor\"\n              [c8yIcon]=\"result | getGroupIcon | async\"\n              >\n            </i>\n          </ng-template>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- No search results found entry -->\n      <ng-template #notFoundTemplate>\n        <c8y-ui-empty-state \n          data-cy=\"search-input--empty-state\"                   \n          [ngClass]=\"{ 'p-4': mode === 'search' }\"\n          [icon]=\"'search'\"\n          [title]=\"'No match found.' | translate\"\n          [horizontal]=\"true\"\n          *ngIf=\"noMatch\"\n        >\n          <small translate *ngIf=\"mode === 'search'\">\n            Try to filter or open the asset grid to show all devices and groups.\n          </small>\n          <small translate *ngIf=\"mode === 'select'\">Try to rephrase your search word.</small>\n        </c8y-ui-empty-state>\n      </ng-template>\n\n      <!-- loading bar first entries -->\n      <c8y-li *ngIf=\"isLoading\">\n        <c8y-loading></c8y-loading>\n      </c8y-li>\n\n      <!-- loading bar for loading more entries (inventory roles) -->\n      <ng-template #loading>\n        <c8y-li>\n          <c8y-loading></c8y-loading>\n        </c8y-li>\n      </ng-template>\n\n      <!-- more filter possibilities -->\n      <c8y-li\n        class=\"m-t-24 bg-level-2 p-t-16 p-b-16 p-l-24 p-r-24 sticky-bottom\"\n        [selectable]=\"false\"\n        *ngIf=\"mode === 'search'\"\n      >\n        <div class=\"d-flex a-i-center\">\n          <i c8yIcon=\"info-circle\" class=\"text-info m-r-4\"></i>\n          <p translate class=\"m-r-8\">Need more filter possibilities?</p>\n          <button\n            class=\"m-l-16 btn btn-default btn-sm\"\n            title=\"{{ 'Go to the asset data table' | translate }}\"\n            (mousedown)=\"onOpenAssetTable()\"\n            data-cy=\"search-input--asset-table-btn\"\n            type=\"button\"\n            (mousedown)=\"onOpenAssetTable()\"\n          >\n            {{ 'Go to the asset data table' | translate }}\n          </button>\n        </div>\n      </c8y-li>\n    </c8y-typeahead>\n  </form>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.InventoryService }, { type: i3.InventorySearchService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { mode: [{
                type: Input
            }], enableCustomTemplatePlaceholder: [{
                type: Input
            }], customPlaceholder: [{
                type: Input
            }], externalTerm: [{
                type: Input
            }], customDataQuery: [{
                type: Input
            }], container: [{
                type: Input
            }], groupsOnly: [{
                type: Input
            }], filter: [{
                type: Output
            }], search: [{
                type: Output
            }], reset: [{
                type: Output
            }], onClick: [{
                type: Output
            }], typeahead: [{
                type: ViewChild,
                args: [TypeaheadComponent, { static: false }]
            }], dropdown: [{
                type: ViewChild,
                args: ['searchDropdown', { static: false }]
            }], onKeydownHandler: [{
                type: HostListener,
                args: ['document:keydown', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,