import { Component } from '@angular/core';
import { AppStateService } from '../common/ui-state.service';
import { TranslateService } from '../i18n/translate.service';
import { ModalService } from '../modal/modal.service';
import { gettext } from '../i18n/gettext';
import { UserPreferencesService } from '../common/user-preferences/user-preferences.service';
import { Status } from '../common/status.model';
import { HeaderService } from '../header/header.service';
import * as i0 from "@angular/core";
import * as i1 from "../i18n/translate.service";
import * as i2 from "../common/ui-state.service";
import * as i3 from "../common/user-preferences/user-preferences.service";
import * as i4 from "../modal/modal.service";
import * as i5 from "../header/header.service";
import * as i6 from "../common/icon.directive";
import * as i7 from "../i18n/c8y-translate.directive";
import * as i8 from "@angular/common";
import * as i9 from "@angular/forms";
import * as i10 from "../i18n/c8y-translate.pipe";
export class UiSettingsComponent {
    constructor(translate, state, ui, userPreferences, c8yModalService, headerService) {
        this.translate = translate;
        this.state = state;
        this.ui = ui;
        this.userPreferences = userPreferences;
        this.c8yModalService = c8yModalService;
        this.headerService = headerService;
        this.currentLang = this.ui.state.lang;
        this.open$ = this.headerService.rightDrawerOpen$;
    }
    ngOnInit() {
        this.languages = this.state.state.langs.map(l => ({
            lang: l,
            nativeLanguage: this.translate.getNativeLanguage(l)
        }));
    }
    async onLanguageChange(changedLang) {
        if (!changedLang) {
            return;
        }
        let reloadRequired = false;
        await this.translate.switchToLanguage(changedLang);
        if (changedLang !== this.currentLang) {
            reloadRequired = await this.persistLanguage(changedLang);
        }
        if (reloadRequired) {
            location.reload();
        }
    }
    async persistLanguage(lang) {
        let shouldReload;
        try {
            await this.c8yModalService.confirm(gettext('Reload recommended'), gettext('To change the language in the entire application, we recommend you to reload the page. If you have any unsaved changes, you can reload later. How would you like to proceed?'), Status.WARNING, {
                ok: gettext('Reload now'),
                cancel: gettext('Reload later')
            });
            this.translate.saveInLocalStorage(lang);
            await this.userPreferences.set('language', lang);
            this.currentLang = lang;
            shouldReload = true;
        }
        catch (ex) {
            this.translate.saveInLocalStorage(lang);
            await this.userPreferences.set('language', lang);
            this.currentLang = lang;
            shouldReload = false;
        }
        return shouldReload;
    }
}
UiSettingsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: UiSettingsComponent, deps: [{ token: i1.TranslateService }, { token: i2.AppStateService }, { token: i2.AppStateService }, { token: i3.UserPreferencesService }, { token: i4.ModalService }, { token: i5.HeaderService }], target: i0.ɵɵFactoryTarget.Component });
UiSettingsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: UiSettingsComponent, selector: "c8y-ui-settings", ngImport: i0, template: "<div class=\"separator-top p-t-8 p-b-8\">\n  <div class=\"c8y-right-drawer__item sticky-top\">\n    <i c8yIcon=\"eyedropper\"></i>\n    <span class=\"text-bold\">{{ 'UI settings' | translate }}</span>\n  </div>\n  <!-- TODO: uncomment and finish implementation when there will be agreement on using dark theme -->\n  <!-- <div class=\"p-l-16 p-r-16 p-b-16\">\n    <p>{{'Theme' | translate}}</p>\n    <div class=\"c8y-switch-multistate\">\n      <input tabindex=\"{{ (open$ | async) ? '0' : '-1'}}\" type=\"radio\" name=\"theme-switcher\" id=\"op1\" checked=\"checked\" [attr.aria-label]=\"'Light'\">\n      <label for=\"op1\" title=\"{{'Light' | translate}}\">\n        <i c8yIcon=\"sun\"></i>\n      </label>\n      <input tabindex=\"{{ (open$ | async) ? '0' : '-1'}}\" type=\"radio\" name=\"theme-switcher\" id=\"op2\" [attr.aria-label]=\"'Dark'\">\n      <label for=\"op2\" title=\"{{'Dark' | translate}}\">\n        <i c8yIcon=\"moon\"></i></label>\n      <input tabindex=\"{{ (open$ | async) ? '0' : '-1'}}\" type=\"radio\" name=\"theme-switcher\" id=\"op3\" [attr.aria-label]=\"'System'\">\n      <label for=\"op3\" title=\"{{'System' | translate}}\">\n        <i c8yIcon=\"imac-settings\"></i>\n      </label>\n      <div class=\"c8y-switch-multistate__handle\"></div>\n    </div>\n  </div> -->\n  <div class=\"form-group p-l-16 p-r-16\">\n    <p translate for=\"userLang\">Language</p>\n    <div class=\"c8y-select-wrapper\">\n      <select\n        id=\"userLang\"\n        #selectLang\n        tabindex=\"{{ (open$ | async) ? '0' : '-1'}}\"\n        [ngModel]=\"currentLang\"\n        (change)=\"onLanguageChange(selectLang.value)\"\n      >\n      <option *ngFor=\"let language of languages\" [value]=\"language.lang\">\n        {{ language.nativeLanguage }}\n        </option>\n      </select>\n      <span></span>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i6.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i7.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i8.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i9.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i9.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i9.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i9.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i9.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "pipe", type: i10.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i8.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: UiSettingsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-ui-settings', template: "<div class=\"separator-top p-t-8 p-b-8\">\n  <div class=\"c8y-right-drawer__item sticky-top\">\n    <i c8yIcon=\"eyedropper\"></i>\n    <span class=\"text-bold\">{{ 'UI settings' | translate }}</span>\n  </div>\n  <!-- TODO: uncomment and finish implementation when there will be agreement on using dark theme -->\n  <!-- <div class=\"p-l-16 p-r-16 p-b-16\">\n    <p>{{'Theme' | translate}}</p>\n    <div class=\"c8y-switch-multistate\">\n      <input tabindex=\"{{ (open$ | async) ? '0' : '-1'}}\" type=\"radio\" name=\"theme-switcher\" id=\"op1\" checked=\"checked\" [attr.aria-label]=\"'Light'\">\n      <label for=\"op1\" title=\"{{'Light' | translate}}\">\n        <i c8yIcon=\"sun\"></i>\n      </label>\n      <input tabindex=\"{{ (open$ | async) ? '0' : '-1'}}\" type=\"radio\" name=\"theme-switcher\" id=\"op2\" [attr.aria-label]=\"'Dark'\">\n      <label for=\"op2\" title=\"{{'Dark' | translate}}\">\n        <i c8yIcon=\"moon\"></i></label>\n      <input tabindex=\"{{ (open$ | async) ? '0' : '-1'}}\" type=\"radio\" name=\"theme-switcher\" id=\"op3\" [attr.aria-label]=\"'System'\">\n      <label for=\"op3\" title=\"{{'System' | translate}}\">\n        <i c8yIcon=\"imac-settings\"></i>\n      </label>\n      <div class=\"c8y-switch-multistate__handle\"></div>\n    </div>\n  </div> -->\n  <div class=\"form-group p-l-16 p-r-16\">\n    <p translate for=\"userLang\">Language</p>\n    <div class=\"c8y-select-wrapper\">\n      <select\n        id=\"userLang\"\n        #selectLang\n        tabindex=\"{{ (open$ | async) ? '0' : '-1'}}\"\n        [ngModel]=\"currentLang\"\n        (change)=\"onLanguageChange(selectLang.value)\"\n      >\n      <option *ngFor=\"let language of languages\" [value]=\"language.lang\">\n        {{ language.nativeLanguage }}\n        </option>\n      </select>\n      <span></span>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.TranslateService }, { type: i2.AppStateService }, { type: i2.AppStateService }, { type: i3.UserPreferencesService }, { type: i4.ModalService }, { type: i5.HeaderService }]; } });
//# sourceMappingURL=data:application/json;base64,