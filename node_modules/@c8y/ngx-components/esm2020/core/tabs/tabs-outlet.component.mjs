import { Component, Input, HostBinding, Renderer2, ElementRef, ViewChild } from '@angular/core';
import { debounceTime } from 'rxjs/operators';
import { fromEventPattern, fromEvent, merge, BehaviorSubject } from 'rxjs';
import { Router } from '@angular/router';
import { HeaderService } from '../header/header.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../header/header.service";
import * as i3 from "../common/icon.directive";
import * as i4 from "@angular/common";
import * as i5 from "../i18n/c8y-translate.pipe";
export class TabsOutletComponent {
    constructor(router, renderer, el, header) {
        this.router = router;
        this.renderer = renderer;
        this.el = el;
        this.header = header;
        this.tabs = [];
        this.orientation = 'vertical';
        this.navigatorOpen = false;
        this.showLeft = false;
        this.showRight = false;
        this.tabsChanges$ = new BehaviorSubject([]);
    }
    get isNavigatorOpen() {
        return this.navigatorOpen;
    }
    get hasTabs() {
        let visibleTabs = [];
        if (this.tabs) {
            visibleTabs = this.tabs.filter(tab => tab.hide !== true);
        }
        return visibleTabs.length > 1;
    }
    get isHorizontal() {
        return this.orientation === 'horizontal';
    }
    get isVertical() {
        return this.orientation !== 'horizontal';
    }
    ngOnChanges(changes) {
        if (changes.tabs) {
            this.tabsChanges$.next(this.tabs);
        }
    }
    ngOnDestroy() {
        if (this.scrollSubscription) {
            this.scrollSubscription.unsubscribe();
        }
    }
    ngAfterContentInit() {
        if (this.orientation === 'horizontal') {
            this.scrollSubscribe();
        }
    }
    isActive(tab) {
        if (tab && tab.path) {
            return this.router.isActive(tab.path, false);
        }
        else {
            return false;
        }
    }
    navigateTo(path) {
        this.header.toggle();
        this.router.navigate([path]);
    }
    scroll(direction = 'right') {
        const { widthScroll, width, scrollLeft } = this.getDimensions();
        const multiplier = direction === 'left' ? -1 : 1;
        let targetScroll = scrollLeft + width * multiplier;
        if (targetScroll < 0) {
            targetScroll = 0;
        }
        if (targetScroll > widthScroll - width) {
            targetScroll = widthScroll - width;
        }
        this.container.nativeElement.scrollLeft = targetScroll;
    }
    scrollSubscribe() {
        let unlisten;
        this.scrollSubscription = merge(this.tabsChanges$, fromEvent(this.container.nativeElement, 'scroll'), fromEventPattern((handler) => {
            unlisten = this.renderer.listen('window', 'resize', handler);
        }, () => unlisten()))
            .pipe(debounceTime(250))
            .subscribe(() => this.updateScroll());
    }
    updateScroll() {
        const { widthScroll, width, scrollLeft } = this.getDimensions();
        this.showLeft = !!scrollLeft;
        this.showRight = widthScroll > width + scrollLeft;
    }
    getDimensions() {
        const elTabs = this.tabsContainer.nativeElement;
        const el = this.container.nativeElement;
        const widthScroll = elTabs.scrollWidth;
        const width = el.clientWidth;
        const scrollLeft = el.scrollLeft;
        return { widthScroll, width, scrollLeft };
    }
}
TabsOutletComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: TabsOutletComponent, deps: [{ token: i1.Router }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i2.HeaderService }], target: i0.ɵɵFactoryTarget.Component });
TabsOutletComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.6", type: TabsOutletComponent, selector: "c8y-tabs-outlet,c8y-ui-tabs", inputs: { tabs: "tabs", orientation: "orientation", navigatorOpen: "navigatorOpen" }, host: { properties: { "class.navigator-open": "this.isNavigatorOpen", "class.page-tabs": "this.hasTabs", "class.page-tabs-horizontal": "this.isHorizontal", "class.page-tabs-vertical": "this.isVertical" } }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true, read: ElementRef, static: true }, { propertyName: "leftBtn", first: true, predicate: ["left"], descendants: true, read: ElementRef }, { propertyName: "rightBtn", first: true, predicate: ["right"], descendants: true, read: ElementRef }, { propertyName: "tabsContainer", first: true, predicate: ["tabsContainer"], descendants: true, read: ElementRef }], usesOnChanges: true, ngImport: i0, template: "<div #container class=\"tabContainer hidden-xs\">\n  <button\n    type=\"button\"\n    class=\"tabs-slider tabs-slider-left\"\n    #left\n    *ngIf=\"showLeft || showRight\"\n    [disabled]=\"!showLeft\"\n    (click)=\"scroll('left')\"\n    title=\"{{'Scroll to the left' | translate}}\"\n  >\n    <i [c8yIcon]=\"'chevron-left'\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"tabs-slider tabs-slider-right\"\n    #right\n    *ngIf=\"showRight || showLeft\"\n    [disabled]=\"!showRight\"\n    (click)=\"scroll('right')\"\n    title=\"{{'Scroll to the right' | translate}}\"\n  >\n    <i [c8yIcon]=\"'chevron-right'\"></i>\n  </button>\n  <div role=\"list\" class=\"nav nav-tabs nav-tabsc8y\" #tabsContainer>\n    <ng-container *ngFor=\"let tab of tabs\">\n      <div role=\"listitem\" [ngClass]=\"{ active: rla?.isActive }\" *ngIf=\"!tab.component\">\n        <a\n          [routerLink]=\"tab.path\"\n          routerLinkActive\n          #rla=\"routerLinkActive\"\n          title=\"{{ tab?.label | translate }}\"\n        >\n          <i [c8yIcon]=\"tab?.icon\" *ngIf=\"!tab.template && tab?.icon\"></i>\n          <span *ngIf=\"!tab.template && !tab.component\">\n            {{ tab?.label | translate }}\n          </span>\n        </a>\n        <ng-container *ngTemplateOutlet=\"tab.template; injector: tab.injector\"></ng-container>\n      </div>\n      <ng-container *ngComponentOutlet=\"tab.component; injector: tab.injector\"></ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<div class=\"visible-xs mobile-tabs\">\n  <ul class=\"list-unstyled d-flex m-b-0\">\n    <li class=\"c8y-select-wrapper flex-grow\">\n      <select (change)=\"navigateTo($event.target)\" #select>\n        <ng-container *ngFor=\"let tab of tabs\">\n          <option *ngIf=\"!tab.component\" [value]=\"tab.path\" [selected]=\"isActive(tab)\">\n            {{ tab?.label | translate }}\n          </option>\n        </ng-container>\n      </select>\n    </li>\n    <ng-container *ngFor=\"let tab of tabs\">\n      <ng-container *ngIf=\"tab.component\">\n        <ng-container *ngComponentOutlet=\"tab.component; injector: tab.injector\"></ng-container>\n      </ng-container>\n    </ng-container>\n  </ul>\n</div>\n", dependencies: [{ kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgComponentOutlet, selector: "[ngComponentOutlet]", inputs: ["ngComponentOutlet", "ngComponentOutletInjector", "ngComponentOutletContent", "ngComponentOutletNgModule", "ngComponentOutletNgModuleFactory"] }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i1.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo", "routerLink"] }, { kind: "directive", type: i1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "pipe", type: i5.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: TabsOutletComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-tabs-outlet,c8y-ui-tabs', template: "<div #container class=\"tabContainer hidden-xs\">\n  <button\n    type=\"button\"\n    class=\"tabs-slider tabs-slider-left\"\n    #left\n    *ngIf=\"showLeft || showRight\"\n    [disabled]=\"!showLeft\"\n    (click)=\"scroll('left')\"\n    title=\"{{'Scroll to the left' | translate}}\"\n  >\n    <i [c8yIcon]=\"'chevron-left'\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"tabs-slider tabs-slider-right\"\n    #right\n    *ngIf=\"showRight || showLeft\"\n    [disabled]=\"!showRight\"\n    (click)=\"scroll('right')\"\n    title=\"{{'Scroll to the right' | translate}}\"\n  >\n    <i [c8yIcon]=\"'chevron-right'\"></i>\n  </button>\n  <div role=\"list\" class=\"nav nav-tabs nav-tabsc8y\" #tabsContainer>\n    <ng-container *ngFor=\"let tab of tabs\">\n      <div role=\"listitem\" [ngClass]=\"{ active: rla?.isActive }\" *ngIf=\"!tab.component\">\n        <a\n          [routerLink]=\"tab.path\"\n          routerLinkActive\n          #rla=\"routerLinkActive\"\n          title=\"{{ tab?.label | translate }}\"\n        >\n          <i [c8yIcon]=\"tab?.icon\" *ngIf=\"!tab.template && tab?.icon\"></i>\n          <span *ngIf=\"!tab.template && !tab.component\">\n            {{ tab?.label | translate }}\n          </span>\n        </a>\n        <ng-container *ngTemplateOutlet=\"tab.template; injector: tab.injector\"></ng-container>\n      </div>\n      <ng-container *ngComponentOutlet=\"tab.component; injector: tab.injector\"></ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<div class=\"visible-xs mobile-tabs\">\n  <ul class=\"list-unstyled d-flex m-b-0\">\n    <li class=\"c8y-select-wrapper flex-grow\">\n      <select (change)=\"navigateTo($event.target)\" #select>\n        <ng-container *ngFor=\"let tab of tabs\">\n          <option *ngIf=\"!tab.component\" [value]=\"tab.path\" [selected]=\"isActive(tab)\">\n            {{ tab?.label | translate }}\n          </option>\n        </ng-container>\n      </select>\n    </li>\n    <ng-container *ngFor=\"let tab of tabs\">\n      <ng-container *ngIf=\"tab.component\">\n        <ng-container *ngComponentOutlet=\"tab.component; injector: tab.injector\"></ng-container>\n      </ng-container>\n    </ng-container>\n  </ul>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i2.HeaderService }]; }, propDecorators: { tabs: [{
                type: Input
            }], orientation: [{
                type: Input
            }], navigatorOpen: [{
                type: Input
            }], isNavigatorOpen: [{
                type: HostBinding,
                args: ['class.navigator-open']
            }], hasTabs: [{
                type: HostBinding,
                args: ['class.page-tabs']
            }], isHorizontal: [{
                type: HostBinding,
                args: ['class.page-tabs-horizontal']
            }], isVertical: [{
                type: HostBinding,
                args: ['class.page-tabs-vertical']
            }], container: [{
                type: ViewChild,
                args: ['container', { read: ElementRef, static: true }]
            }], leftBtn: [{
                type: ViewChild,
                args: ['left', { read: ElementRef, static: false }]
            }], rightBtn: [{
                type: ViewChild,
                args: ['right', { read: ElementRef, static: false }]
            }], tabsContainer: [{
                type: ViewChild,
                args: ['tabsContainer', { read: ElementRef, static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,