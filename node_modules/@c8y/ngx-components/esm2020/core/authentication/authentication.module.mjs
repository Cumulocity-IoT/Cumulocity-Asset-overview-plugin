import { NgModule } from '@angular/core';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '../common/common.module';
import { PasswordCheckListComponent } from './password-check-list.component';
import { PasswordConfirm } from './password-confirm.directive';
import { PasswordStrengthCheckerService } from './password-strength-checker.service';
import { PasswordStrengthComponent } from './password-strength.component';
import { NewPasswordComponent } from './new-password.component';
import { PasswordConfirmModalComponent } from './password-confirm-modal.component';
import { ModalModule } from '../modal/modal.module';
import { FormsModule } from '../forms/forms.module';
import { TotpChallengeComponent } from './totp-challenge.component';
import { SmsChallengeComponent } from './sms-challenge.component';
import { TotpSetupComponent } from './totp-setup.component';
import { PasswordService } from './password.service';
import { QRCodeModule } from 'angularx-qrcode';
import { ProvidePhoneNumberComponent } from './provide-phone-number.component';
import { CurrentPasswordModalComponent } from './current-password-modal.component';
import * as i0 from "@angular/core";
/**
 * The angular module definition for new password.
 * @exports PasswordStrengthComponent
 * @exports PasswordCheckListComponent
 * @exports PasswordConfirm
 * @exports NewPasswordComponent
 * @exports PasswordConfirmModalComponent
 */
export class AuthenticationModule {
}
AuthenticationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: AuthenticationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AuthenticationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.0.6", ngImport: i0, type: AuthenticationModule, declarations: [TotpChallengeComponent,
        PasswordConfirm,
        PasswordStrengthComponent,
        PasswordCheckListComponent,
        NewPasswordComponent,
        PasswordConfirmModalComponent,
        CurrentPasswordModalComponent,
        SmsChallengeComponent,
        TotpSetupComponent,
        ProvidePhoneNumberComponent], imports: [FormsModule, TooltipModule, CommonModule, ModalModule, QRCodeModule], exports: [TotpChallengeComponent,
        PasswordStrengthComponent,
        PasswordCheckListComponent,
        PasswordConfirm,
        NewPasswordComponent,
        PasswordConfirmModalComponent,
        CurrentPasswordModalComponent,
        SmsChallengeComponent,
        TotpSetupComponent,
        ProvidePhoneNumberComponent] });
AuthenticationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: AuthenticationModule, providers: [PasswordStrengthCheckerService, PasswordService], imports: [FormsModule, TooltipModule, CommonModule, ModalModule, QRCodeModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: AuthenticationModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        TotpChallengeComponent,
                        PasswordConfirm,
                        PasswordStrengthComponent,
                        PasswordCheckListComponent,
                        NewPasswordComponent,
                        PasswordConfirmModalComponent,
                        CurrentPasswordModalComponent,
                        SmsChallengeComponent,
                        TotpSetupComponent,
                        ProvidePhoneNumberComponent
                    ],
                    imports: [FormsModule, TooltipModule, CommonModule, ModalModule, QRCodeModule],
                    exports: [
                        TotpChallengeComponent,
                        PasswordStrengthComponent,
                        PasswordCheckListComponent,
                        PasswordConfirm,
                        NewPasswordComponent,
                        PasswordConfirmModalComponent,
                        CurrentPasswordModalComponent,
                        SmsChallengeComponent,
                        TotpSetupComponent,
                        ProvidePhoneNumberComponent
                    ],
                    entryComponents: [PasswordConfirmModalComponent],
                    providers: [PasswordStrengthCheckerService, PasswordService]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aGVudGljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9hdXRoZW50aWNhdGlvbi9hdXRoZW50aWNhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUNyRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDL0UsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7O0FBRW5GOzs7Ozs7O0dBT0c7QUE4QkgsTUFBTSxPQUFPLG9CQUFvQjs7aUhBQXBCLG9CQUFvQjtrSEFBcEIsb0JBQW9CLGlCQTNCN0Isc0JBQXNCO1FBQ3RCLGVBQWU7UUFDZix5QkFBeUI7UUFDekIsMEJBQTBCO1FBQzFCLG9CQUFvQjtRQUNwQiw2QkFBNkI7UUFDN0IsNkJBQTZCO1FBQzdCLHFCQUFxQjtRQUNyQixrQkFBa0I7UUFDbEIsMkJBQTJCLGFBRW5CLFdBQVcsRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxZQUFZLGFBRTNFLHNCQUFzQjtRQUN0Qix5QkFBeUI7UUFDekIsMEJBQTBCO1FBQzFCLGVBQWU7UUFDZixvQkFBb0I7UUFDcEIsNkJBQTZCO1FBQzdCLDZCQUE2QjtRQUM3QixxQkFBcUI7UUFDckIsa0JBQWtCO1FBQ2xCLDJCQUEyQjtrSEFLbEIsb0JBQW9CLGFBRnBCLENBQUMsOEJBQThCLEVBQUUsZUFBZSxDQUFDLFlBZGxELFdBQVcsRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxZQUFZOzJGQWdCbEUsb0JBQW9CO2tCQTdCaEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osc0JBQXNCO3dCQUN0QixlQUFlO3dCQUNmLHlCQUF5Qjt3QkFDekIsMEJBQTBCO3dCQUMxQixvQkFBb0I7d0JBQ3BCLDZCQUE2Qjt3QkFDN0IsNkJBQTZCO3dCQUM3QixxQkFBcUI7d0JBQ3JCLGtCQUFrQjt3QkFDbEIsMkJBQTJCO3FCQUM1QjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxXQUFXLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsWUFBWSxDQUFDO29CQUM5RSxPQUFPLEVBQUU7d0JBQ1Asc0JBQXNCO3dCQUN0Qix5QkFBeUI7d0JBQ3pCLDBCQUEwQjt3QkFDMUIsZUFBZTt3QkFDZixvQkFBb0I7d0JBQ3BCLDZCQUE2Qjt3QkFDN0IsNkJBQTZCO3dCQUM3QixxQkFBcUI7d0JBQ3JCLGtCQUFrQjt3QkFDbEIsMkJBQTJCO3FCQUM1QjtvQkFDRCxlQUFlLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQztvQkFDaEQsU0FBUyxFQUFFLENBQUMsOEJBQThCLEVBQUUsZUFBZSxDQUFDO2lCQUM3RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9wYXNzd29yZC1jaGVjay1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYXNzd29yZENvbmZpcm0gfSBmcm9tICcuL3Bhc3N3b3JkLWNvbmZpcm0uZGlyZWN0aXZlJztcbmltcG9ydCB7IFBhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZSB9IGZyb20gJy4vcGFzc3dvcmQtc3RyZW5ndGgtY2hlY2tlci5zZXJ2aWNlJztcbmltcG9ydCB7IFBhc3N3b3JkU3RyZW5ndGhDb21wb25lbnQgfSBmcm9tICcuL3Bhc3N3b3JkLXN0cmVuZ3RoLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZXdQYXNzd29yZENvbXBvbmVudCB9IGZyb20gJy4vbmV3LXBhc3N3b3JkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vcGFzc3dvcmQtY29uZmlybS1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICcuLi9tb2RhbC9tb2RhbC5tb2R1bGUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICcuLi9mb3Jtcy9mb3Jtcy5tb2R1bGUnO1xuaW1wb3J0IHsgVG90cENoYWxsZW5nZUNvbXBvbmVudCB9IGZyb20gJy4vdG90cC1jaGFsbGVuZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNtc0NoYWxsZW5nZUNvbXBvbmVudCB9IGZyb20gJy4vc21zLWNoYWxsZW5nZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVG90cFNldHVwQ29tcG9uZW50IH0gZnJvbSAnLi90b3RwLXNldHVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuL3Bhc3N3b3JkLnNlcnZpY2UnO1xuaW1wb3J0IHsgUVJDb2RlTW9kdWxlIH0gZnJvbSAnYW5ndWxhcngtcXJjb2RlJztcbmltcG9ydCB7IFByb3ZpZGVQaG9uZU51bWJlckNvbXBvbmVudCB9IGZyb20gJy4vcHJvdmlkZS1waG9uZS1udW1iZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEN1cnJlbnRQYXNzd29yZE1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9jdXJyZW50LXBhc3N3b3JkLW1vZGFsLmNvbXBvbmVudCc7XG5cbi8qKlxuICogVGhlIGFuZ3VsYXIgbW9kdWxlIGRlZmluaXRpb24gZm9yIG5ldyBwYXNzd29yZC5cbiAqIEBleHBvcnRzIFBhc3N3b3JkU3RyZW5ndGhDb21wb25lbnRcbiAqIEBleHBvcnRzIFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50XG4gKiBAZXhwb3J0cyBQYXNzd29yZENvbmZpcm1cbiAqIEBleHBvcnRzIE5ld1Bhc3N3b3JkQ29tcG9uZW50XG4gKiBAZXhwb3J0cyBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudFxuICovXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBUb3RwQ2hhbGxlbmdlQ29tcG9uZW50LFxuICAgIFBhc3N3b3JkQ29uZmlybSxcbiAgICBQYXNzd29yZFN0cmVuZ3RoQ29tcG9uZW50LFxuICAgIFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50LFxuICAgIE5ld1Bhc3N3b3JkQ29tcG9uZW50LFxuICAgIFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50LFxuICAgIEN1cnJlbnRQYXNzd29yZE1vZGFsQ29tcG9uZW50LFxuICAgIFNtc0NoYWxsZW5nZUNvbXBvbmVudCxcbiAgICBUb3RwU2V0dXBDb21wb25lbnQsXG4gICAgUHJvdmlkZVBob25lTnVtYmVyQ29tcG9uZW50XG4gIF0sXG4gIGltcG9ydHM6IFtGb3Jtc01vZHVsZSwgVG9vbHRpcE1vZHVsZSwgQ29tbW9uTW9kdWxlLCBNb2RhbE1vZHVsZSwgUVJDb2RlTW9kdWxlXSxcbiAgZXhwb3J0czogW1xuICAgIFRvdHBDaGFsbGVuZ2VDb21wb25lbnQsXG4gICAgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudCxcbiAgICBQYXNzd29yZENoZWNrTGlzdENvbXBvbmVudCxcbiAgICBQYXNzd29yZENvbmZpcm0sXG4gICAgTmV3UGFzc3dvcmRDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnQsXG4gICAgQ3VycmVudFBhc3N3b3JkTW9kYWxDb21wb25lbnQsXG4gICAgU21zQ2hhbGxlbmdlQ29tcG9uZW50LFxuICAgIFRvdHBTZXR1cENvbXBvbmVudCxcbiAgICBQcm92aWRlUGhvbmVOdW1iZXJDb21wb25lbnRcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtQYXNzd29yZFN0cmVuZ3RoQ2hlY2tlclNlcnZpY2UsIFBhc3N3b3JkU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgQXV0aGVudGljYXRpb25Nb2R1bGUge31cbiJdfQ==