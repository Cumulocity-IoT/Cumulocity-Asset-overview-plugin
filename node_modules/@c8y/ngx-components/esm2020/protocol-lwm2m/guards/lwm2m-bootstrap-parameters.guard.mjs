import { Injectable } from '@angular/core';
import { TenantUiService, Permissions } from '@c8y/ngx-components';
import { Lwm2mClientService } from '@c8y/ngx-components/protocol-lwm2m/services';
import { Lwm2mBaseGuard } from './lwm2m-base.guard';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@c8y/ngx-components/protocol-lwm2m/services";
export class Lwm2mBootstrapParametersGuard extends Lwm2mBaseGuard {
    constructor(tenantService, permissions, lwm2mService) {
        super(tenantService);
        this.tenantService = tenantService;
        this.permissions = permissions;
        this.lwm2mService = lwm2mService;
    }
    additionalChecks(route) {
        const contextData = route?.data.contextData ||
            route?.parent.data.contextData;
        return (this.lwm2mService.isLwm2mDevice(contextData) &&
            this.permissions.hasRole('ROLE_INVENTORY_READ'));
    }
}
Lwm2mBootstrapParametersGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: Lwm2mBootstrapParametersGuard, deps: [{ token: i1.TenantUiService }, { token: i1.Permissions }, { token: i2.Lwm2mClientService }], target: i0.ɵɵFactoryTarget.Injectable });
Lwm2mBootstrapParametersGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: Lwm2mBootstrapParametersGuard });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.6", ngImport: i0, type: Lwm2mBootstrapParametersGuard, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.TenantUiService }, { type: i1.Permissions }, { type: i2.Lwm2mClientService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHdtMm0tYm9vdHN0cmFwLXBhcmFtZXRlcnMuZ3VhcmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm90b2NvbC1sd20ybS9ndWFyZHMvbHdtMm0tYm9vdHN0cmFwLXBhcmFtZXRlcnMuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7OztBQU9wRCxNQUFNLE9BQU8sNkJBQThCLFNBQVEsY0FBYztJQUMvRCxZQUNZLGFBQThCLEVBQ2hDLFdBQXdCLEVBQ3hCLFlBQTBEO1FBRWxFLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUpYLGtCQUFhLEdBQWIsYUFBYSxDQUFpQjtRQUNoQyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUN4QixpQkFBWSxHQUFaLFlBQVksQ0FBOEM7SUFHcEUsQ0FBQztJQUVTLGdCQUFnQixDQUFDLEtBQThCO1FBQ3ZELE1BQU0sV0FBVyxHQUNiLEtBQUssRUFBRSxJQUFZLENBQUMsV0FBa0M7WUFDdEQsS0FBSyxFQUFFLE1BQU0sQ0FBQyxJQUFZLENBQUMsV0FBa0MsQ0FBQztRQUVsRSxPQUFPLENBQ0wsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDO1lBQzVDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQ2hELENBQUM7SUFDSixDQUFDOzswSEFsQlUsNkJBQTZCOzhIQUE3Qiw2QkFBNkI7MkZBQTdCLDZCQUE2QjtrQkFEekMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlU25hcHNob3QgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgVGVuYW50VWlTZXJ2aWNlLCBQZXJtaXNzaW9ucyB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgTHdtMm1DbGllbnRTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9wcm90b2NvbC1sd20ybS9zZXJ2aWNlcyc7XG5pbXBvcnQgeyBMd20ybUJhc2VHdWFyZCB9IGZyb20gJy4vbHdtMm0tYmFzZS5ndWFyZCc7XG5pbXBvcnQge1xuICBMd20ybUJvb3RzdHJhcFBhcmFtZXRlcnMsXG4gIEx3bTJtTWFuYWdlZE9iamVjdFxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3Byb3RvY29sLWx3bTJtL21vZGVsJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEx3bTJtQm9vdHN0cmFwUGFyYW1ldGVyc0d1YXJkIGV4dGVuZHMgTHdtMm1CYXNlR3VhcmQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgdGVuYW50U2VydmljZTogVGVuYW50VWlTZXJ2aWNlLFxuICAgIHByaXZhdGUgcGVybWlzc2lvbnM6IFBlcm1pc3Npb25zLFxuICAgIHByaXZhdGUgbHdtMm1TZXJ2aWNlOiBMd20ybUNsaWVudFNlcnZpY2U8THdtMm1Cb290c3RyYXBQYXJhbWV0ZXJzPlxuICApIHtcbiAgICBzdXBlcih0ZW5hbnRTZXJ2aWNlKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBhZGRpdGlvbmFsQ2hlY2tzKHJvdXRlPzogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGNvbnRleHREYXRhID1cbiAgICAgICgocm91dGU/LmRhdGEgYXMgYW55KS5jb250ZXh0RGF0YSBhcyBMd20ybU1hbmFnZWRPYmplY3QpIHx8XG4gICAgICAoKHJvdXRlPy5wYXJlbnQuZGF0YSBhcyBhbnkpLmNvbnRleHREYXRhIGFzIEx3bTJtTWFuYWdlZE9iamVjdCk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5sd20ybVNlcnZpY2UuaXNMd20ybURldmljZShjb250ZXh0RGF0YSkgJiZcbiAgICAgIHRoaXMucGVybWlzc2lvbnMuaGFzUm9sZSgnUk9MRV9JTlZFTlRPUllfUkVBRCcpXG4gICAgKTtcbiAgfVxufVxuIl19