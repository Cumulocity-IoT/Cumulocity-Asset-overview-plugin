"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcumulocity_asset_overview_widget"] = self["webpackChunkcumulocity_asset_overview_widget"] || []).push([["node_modules_angular_common_locales_ln_mjs"],{

/***/ "./node_modules/@angular/common/locales/ln.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@angular/common/locales/ln.mjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY.\nconst u = undefined;\nfunction plural(val) {\n    const n = val;\n    if (n === Math.floor(n) && (n >= 0 && n <= 1))\n        return 1;\n    return 5;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\"ln\", [[\"ntɔ́ngɔ́\", \"mpókwa\"], u, u], u, [[\"e\", \"y\", \"m\", \"m\", \"m\", \"m\", \"p\"], [\"eye\", \"ybo\", \"mbl\", \"mst\", \"min\", \"mtn\", \"mps\"], [\"eyenga\", \"mokɔlɔ mwa yambo\", \"mokɔlɔ mwa míbalé\", \"mokɔlɔ mwa mísáto\", \"mokɔlɔ ya mínéi\", \"mokɔlɔ ya mítáno\", \"mpɔ́sɔ\"], [\"eye\", \"ybo\", \"mbl\", \"mst\", \"min\", \"mtn\", \"mps\"]], u, [[\"y\", \"f\", \"m\", \"a\", \"m\", \"y\", \"y\", \"a\", \"s\", \"ɔ\", \"n\", \"d\"], [\"yan\", \"fbl\", \"msi\", \"apl\", \"mai\", \"yun\", \"yul\", \"agt\", \"stb\", \"ɔtb\", \"nvb\", \"dsb\"], [\"sánzá ya yambo\", \"sánzá ya míbalé\", \"sánzá ya mísáto\", \"sánzá ya mínei\", \"sánzá ya mítáno\", \"sánzá ya motóbá\", \"sánzá ya nsambo\", \"sánzá ya mwambe\", \"sánzá ya libwa\", \"sánzá ya zómi\", \"sánzá ya zómi na mɔ̌kɔ́\", \"sánzá ya zómi na míbalé\"]], u, [[\"libóso ya\", \"nsima ya Y\"], u, [\"Yambo ya Yézu Krís\", \"Nsima ya Yézu Krís\"]], 1, [6, 0], [\"d/M/y\", \"d MMM y\", \"d MMMM y\", \"EEEE d MMMM y\"], [\"HH:mm\", \"HH:mm:ss\", \"HH:mm:ss z\", \"HH:mm:ss zzzz\"], [\"{1} {0}\", u, u, u], [\",\", \".\", \";\", \"%\", \"+\", \"-\", \"E\", \"×\", \"‰\", \"∞\", \"NaN\", \":\"], [\"#,##0.###\", \"#,##0%\", \"#,##0.00 ¤\", \"#E0\"], \"CDF\", \"FC\", \"Falánga ya Kongó\", { \"CDF\": [\"FC\"], \"JPY\": [\"JP¥\", \"¥\"], \"USD\": [\"US$\", \"$\"] }, \"ltr\", plural]);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21tb24vbG9jYWxlcy9sbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCwwQ0FBMEM7QUFDMUMsTUFBTSxDQUFDLEdBQUcsU0FBUyxDQUFDO0FBRXBCLFNBQVMsTUFBTSxDQUFDLEdBQVc7SUFDM0IsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBRWQsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxPQUFPLENBQUMsQ0FBQztJQUNiLE9BQU8sQ0FBQyxDQUFDO0FBQ1QsQ0FBQztBQUVELGVBQWUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBQyxRQUFRLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLENBQUMsRUFBQyxDQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssQ0FBQyxFQUFDLENBQUMsUUFBUSxFQUFDLGtCQUFrQixFQUFDLG1CQUFtQixFQUFDLG1CQUFtQixFQUFDLGlCQUFpQixFQUFDLGtCQUFrQixFQUFDLFFBQVEsQ0FBQyxFQUFDLENBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxDQUFDLEVBQUMsQ0FBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssQ0FBQyxFQUFDLENBQUMsZ0JBQWdCLEVBQUMsaUJBQWlCLEVBQUMsaUJBQWlCLEVBQUMsZ0JBQWdCLEVBQUMsaUJBQWlCLEVBQUMsaUJBQWlCLEVBQUMsaUJBQWlCLEVBQUMsaUJBQWlCLEVBQUMsZ0JBQWdCLEVBQUMsZUFBZSxFQUFDLHlCQUF5QixFQUFDLHlCQUF5QixDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBQyxZQUFZLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxvQkFBb0IsRUFBQyxvQkFBb0IsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsT0FBTyxFQUFDLFNBQVMsRUFBQyxVQUFVLEVBQUMsZUFBZSxDQUFDLEVBQUMsQ0FBQyxPQUFPLEVBQUMsVUFBVSxFQUFDLFlBQVksRUFBQyxlQUFlLENBQUMsRUFBQyxDQUFDLFNBQVMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEtBQUssRUFBQyxHQUFHLENBQUMsRUFBQyxDQUFDLFdBQVcsRUFBQyxRQUFRLEVBQUMsWUFBWSxFQUFDLEtBQUssQ0FBQyxFQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsa0JBQWtCLEVBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxLQUFLLEVBQUMsR0FBRyxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsS0FBSyxFQUFDLEdBQUcsQ0FBQyxFQUFDLEVBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbi8vIFRISVMgQ09ERSBJUyBHRU5FUkFURUQgLSBETyBOT1QgTU9ESUZZLlxuY29uc3QgdSA9IHVuZGVmaW5lZDtcblxuZnVuY3Rpb24gcGx1cmFsKHZhbDogbnVtYmVyKTogbnVtYmVyIHtcbmNvbnN0IG4gPSB2YWw7XG5cbmlmIChuID09PSBNYXRoLmZsb29yKG4pICYmIChuID49IDAgJiYgbiA8PSAxKSlcbiAgICByZXR1cm4gMTtcbnJldHVybiA1O1xufVxuXG5leHBvcnQgZGVmYXVsdCBbXCJsblwiLFtbXCJudMmUzIFuZ8mUzIFcIixcIm1ww7Nrd2FcIl0sdSx1XSx1LFtbXCJlXCIsXCJ5XCIsXCJtXCIsXCJtXCIsXCJtXCIsXCJtXCIsXCJwXCJdLFtcImV5ZVwiLFwieWJvXCIsXCJtYmxcIixcIm1zdFwiLFwibWluXCIsXCJtdG5cIixcIm1wc1wiXSxbXCJleWVuZ2FcIixcIm1va8mUbMmUIG13YSB5YW1ib1wiLFwibW9ryZRsyZQgbXdhIG3DrWJhbMOpXCIsXCJtb2vJlGzJlCBtd2EgbcOtc8OhdG9cIixcIm1va8mUbMmUIHlhIG3DrW7DqWlcIixcIm1va8mUbMmUIHlhIG3DrXTDoW5vXCIsXCJtcMmUzIFzyZRcIl0sW1wiZXllXCIsXCJ5Ym9cIixcIm1ibFwiLFwibXN0XCIsXCJtaW5cIixcIm10blwiLFwibXBzXCJdXSx1LFtbXCJ5XCIsXCJmXCIsXCJtXCIsXCJhXCIsXCJtXCIsXCJ5XCIsXCJ5XCIsXCJhXCIsXCJzXCIsXCLJlFwiLFwiblwiLFwiZFwiXSxbXCJ5YW5cIixcImZibFwiLFwibXNpXCIsXCJhcGxcIixcIm1haVwiLFwieXVuXCIsXCJ5dWxcIixcImFndFwiLFwic3RiXCIsXCLJlHRiXCIsXCJudmJcIixcImRzYlwiXSxbXCJzw6FuesOhIHlhIHlhbWJvXCIsXCJzw6FuesOhIHlhIG3DrWJhbMOpXCIsXCJzw6FuesOhIHlhIG3DrXPDoXRvXCIsXCJzw6FuesOhIHlhIG3DrW5laVwiLFwic8OhbnrDoSB5YSBtw610w6Fub1wiLFwic8OhbnrDoSB5YSBtb3TDs2LDoVwiLFwic8OhbnrDoSB5YSBuc2FtYm9cIixcInPDoW56w6EgeWEgbXdhbWJlXCIsXCJzw6FuesOhIHlhIGxpYndhXCIsXCJzw6FuesOhIHlhIHrDs21pXCIsXCJzw6FuesOhIHlhIHrDs21pIG5hIG3JlMyMa8mUzIFcIixcInPDoW56w6EgeWEgesOzbWkgbmEgbcOtYmFsw6lcIl1dLHUsW1tcImxpYsOzc28geWFcIixcIm5zaW1hIHlhIFlcIl0sdSxbXCJZYW1ibyB5YSBZw6l6dSBLcsOtc1wiLFwiTnNpbWEgeWEgWcOpenUgS3LDrXNcIl1dLDEsWzYsMF0sW1wiZC9NL3lcIixcImQgTU1NIHlcIixcImQgTU1NTSB5XCIsXCJFRUVFIGQgTU1NTSB5XCJdLFtcIkhIOm1tXCIsXCJISDptbTpzc1wiLFwiSEg6bW06c3MgelwiLFwiSEg6bW06c3Mgenp6elwiXSxbXCJ7MX0gezB9XCIsdSx1LHVdLFtcIixcIixcIi5cIixcIjtcIixcIiVcIixcIitcIixcIi1cIixcIkVcIixcIsOXXCIsXCLigLBcIixcIuKInlwiLFwiTmFOXCIsXCI6XCJdLFtcIiMsIyMwLiMjI1wiLFwiIywjIzAlXCIsXCIjLCMjMC4wMMKgwqRcIixcIiNFMFwiXSxcIkNERlwiLFwiRkNcIixcIkZhbMOhbmdhIHlhIEtvbmfDs1wiLHtcIkNERlwiOltcIkZDXCJdLFwiSlBZXCI6W1wiSlDCpVwiLFwiwqVcIl0sXCJVU0RcIjpbXCJVUyRcIixcIiRcIl19LFwibHRyXCIsIHBsdXJhbF07XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@angular/common/locales/ln.mjs\n");

/***/ })

}]);