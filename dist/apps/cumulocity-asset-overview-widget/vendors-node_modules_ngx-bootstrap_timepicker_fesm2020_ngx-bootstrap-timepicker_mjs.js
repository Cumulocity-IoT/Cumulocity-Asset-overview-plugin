"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcumulocity_asset_overview_widget"] = self["webpackChunkcumulocity_asset_overview_widget"] || []).push([["vendors-node_modules_ngx-bootstrap_timepicker_fesm2020_ngx-bootstrap-timepicker_mjs"],{

/***/ "./node_modules/ngx-bootstrap/timepicker/fesm2020/ngx-bootstrap-timepicker.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/ngx-bootstrap/timepicker/fesm2020/ngx-bootstrap-timepicker.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("var _angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TimepickerActions\": function() { return /* binding */ TimepickerActions; },\n/* harmony export */   \"TimepickerComponent\": function() { return /* binding */ TimepickerComponent; },\n/* harmony export */   \"TimepickerConfig\": function() { return /* binding */ TimepickerConfig; },\n/* harmony export */   \"TimepickerModule\": function() { return /* binding */ TimepickerModule; },\n/* harmony export */   \"TimepickerStore\": function() { return /* binding */ TimepickerStore; }\n/* harmony export */ });\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ \"webpack/sharing/consume/default/@angular/core/@angular/core\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ \"webpack/sharing/consume/default/@angular/forms/@angular/forms\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"webpack/sharing/consume/default/rxjs/rxjs\");\n/* harmony import */ var ngx_bootstrap_mini_ngrx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/mini-ngrx */ \"webpack/sharing/consume/default/ngx-bootstrap/mini-ngrx/ngx-bootstrap/mini-ngrx\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ \"webpack/sharing/consume/default/@angular/common/@angular/common\");\n\n\n\n\n\n\n\n\nclass TimepickerActions {\n    writeValue(value) {\n        return {\n            type: TimepickerActions.WRITE_VALUE,\n            payload: value\n        };\n    }\n    changeHours(event) {\n        return {\n            type: TimepickerActions.CHANGE_HOURS,\n            payload: event\n        };\n    }\n    changeMinutes(event) {\n        return {\n            type: TimepickerActions.CHANGE_MINUTES,\n            payload: event\n        };\n    }\n    changeSeconds(event) {\n        return {\n            type: TimepickerActions.CHANGE_SECONDS,\n            payload: event\n        };\n    }\n    setTime(value) {\n        return {\n            type: TimepickerActions.SET_TIME_UNIT,\n            payload: value\n        };\n    }\n    updateControls(value) {\n        return {\n            type: TimepickerActions.UPDATE_CONTROLS,\n            payload: value\n        };\n    }\n}\nTimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\nTimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\nTimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\nTimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\nTimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\nTimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\nTimepickerActions.ɵfac = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareFactory\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerActions, deps: [], target: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵFactoryTarget\"].Injectable });\nTimepickerActions.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareInjectable\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerActions, providedIn: 'platform' });\n_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareClassMetadata\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerActions, decorators: [{\n            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,\n            args: [{ providedIn: 'platform' }]\n        }] });\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n    if (!value) {\n        return false;\n    }\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n    return true;\n}\nfunction isValidLimit(controls, newDate) {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n    return true;\n}\nfunction toNumber(value) {\n    if (typeof value === 'undefined') {\n        return NaN;\n    }\n    if (typeof value === 'number') {\n        return value;\n    }\n    return parseInt(value, dex);\n}\nfunction isNumber(value) {\n    return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n    const hour = toNumber(value);\n    if (isNaN(hour) ||\n        hour < 0 ||\n        hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n    return hour;\n}\nfunction parseMinutes(value) {\n    const minute = toNumber(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n    return minute;\n}\nfunction parseSeconds(value) {\n    const seconds = toNumber(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n    return seconds;\n}\nfunction parseTime(value) {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n    return value;\n}\nfunction changeTime(value, diff) {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n    if (!diff) {\n        return value;\n    }\n    let hour = value.getHours();\n    let minutes = value.getMinutes();\n    let seconds = value.getSeconds();\n    if (diff.hour) {\n        hour = hour + toNumber(diff.hour);\n    }\n    if (diff.minute) {\n        minutes = minutes + toNumber(diff.minute);\n    }\n    if (diff.seconds) {\n        seconds = seconds + toNumber(diff.seconds);\n    }\n    return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n    let hour = parseHours(opts.hour);\n    const minute = parseMinutes(opts.minute);\n    const seconds = parseSeconds(opts.seconds) || 0;\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n        return value;\n    }\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n    return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n    const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n    // #3139 ensure date part remains unchanged\n    newValue.setFullYear(value.getFullYear());\n    newValue.setMonth(value.getMonth());\n    newValue.setDate(value.getDate());\n    return newValue;\n}\nfunction padNumber(value) {\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n    return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n    return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n    return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n    return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n    const newDate = setTime(new Date(), diff);\n    if (!newDate) {\n        return false;\n    }\n    if (max && newDate > max) {\n        return false;\n    }\n    if (min && newDate < min) {\n        return false;\n    }\n    return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n    return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n    return isHourInputValid(hours, isPM)\n        && isMinuteInputValid(minutes)\n        && isSecondInputValid(seconds);\n}\n\nfunction canChangeValue(state, event) {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n        if (event.source === 'key' && !state.arrowkeys) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canChangeHours(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeMinutes(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeSeconds(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n    return true;\n}\nfunction getControlsValue(state) {\n    const { hourStep, minuteStep, secondsStep, readonlyInput, disabled, mousewheel, arrowkeys, showSpinners, showMeridian, showSeconds, meridians, min, max } = state;\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowkeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\nfunction timepickerControls(value, state) {\n    const hoursPerDay = 24;\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    const res = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    };\n    if (!value) {\n        return res;\n    }\n    // compare dates\n    if (max) {\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n        if (!res.canIncrementHours) {\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds\n                ? max > _newMinutes\n                : max >= _newMinutes;\n        }\n        if (!res.canIncrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n    if (min) {\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n        if (!res.canDecrementHours) {\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds\n                ? min < _newMinutes\n                : min <= _newMinutes;\n        }\n        if (!res.canDecrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n    return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n    constructor() {\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds changes step */\n        this.secondsStep = 10;\n        /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n        this.showMeridian = true;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true emptyTime is not marked as invalid */\n        this.allowEmptyTime = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** hours aria label */\n        this.ariaLabelHours = 'hours';\n        /** minutes aria label */\n        this.ariaLabelMinutes = 'minutes';\n        /** seconds aria label */\n        this.ariaLabelSeconds = 'seconds';\n    }\n}\nTimepickerConfig.ɵfac = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareFactory\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerConfig, deps: [], target: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵFactoryTarget\"].Injectable });\nTimepickerConfig.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareInjectable\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerConfig, providedIn: 'root' });\n_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareClassMetadata\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerConfig, decorators: [{\n            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst initialState = {\n    value: void 0,\n    config: new TimepickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    }\n};\nfunction timepickerReducer(state = initialState, action) {\n    switch (action.type) {\n        case TimepickerActions.WRITE_VALUE: {\n            return Object.assign({}, state, { value: action.payload });\n        }\n        case TimepickerActions.CHANGE_HOURS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeHours(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { hour: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_MINUTES: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeMinutes(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { minute: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_SECONDS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeSeconds(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, {\n                seconds: action.payload.step\n            });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.SET_TIME_UNIT: {\n            if (!canChangeValue(state.config)) {\n                return state;\n            }\n            const _newTime = setTime(state.value, action.payload);\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.UPDATE_CONTROLS: {\n            const _newControlsState = timepickerControls(state.value, action.payload);\n            const _newState = {\n                value: state.value,\n                config: action.payload,\n                controls: _newControlsState\n            };\n            if (state.config.showMeridian !== _newState.config.showMeridian) {\n                if (state.value) {\n                    _newState.value = new Date(state.value);\n                }\n            }\n            return Object.assign({}, state, _newState);\n        }\n        default:\n            return state;\n    }\n}\n\nclass TimepickerStore extends ngx_bootstrap_mini_ngrx__WEBPACK_IMPORTED_MODULE_3__.MiniStore {\n    constructor() {\n        const _dispatcher = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject({\n            type: '[mini-ngrx] dispatcher init'\n        });\n        const state = new ngx_bootstrap_mini_ngrx__WEBPACK_IMPORTED_MODULE_3__.MiniState(initialState, _dispatcher, timepickerReducer);\n        super(_dispatcher, timepickerReducer, state);\n    }\n}\nTimepickerStore.ɵfac = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareFactory\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerStore, deps: [], target: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵFactoryTarget\"].Injectable });\nTimepickerStore.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareInjectable\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerStore, providedIn: 'platform' });\n_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareClassMetadata\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerStore, decorators: [{\n            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__.NG_VALUE_ACCESSOR,\n    useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => TimepickerComponent),\n    multi: true\n};\nclass TimepickerComponent {\n    constructor(_config, _cd, _store, _timepickerActions) {\n        this._cd = _cd;\n        this._store = _store;\n        this._timepickerActions = _timepickerActions;\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds change step */\n        this.secondsStep = 10;\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** if true meridian button will be shown */\n        this.showMeridian = true;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** emits true if value is a valid date */\n        this.isValid = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n        /** emits value of meridian*/\n        this.meridianChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n        // ui variables\n        this.hours = '';\n        this.minutes = '';\n        this.seconds = '';\n        this.meridian = '';\n        // min\\max validation for input fields\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n        // aria-label variables\n        this.labelHours = 'hours';\n        this.labelMinutes = 'minutes';\n        this.labelSeconds = 'seconds';\n        // time picker controls state\n        this.canIncrementHours = true;\n        this.canIncrementMinutes = true;\n        this.canIncrementSeconds = true;\n        this.canDecrementHours = true;\n        this.canDecrementMinutes = true;\n        this.canDecrementSeconds = true;\n        this.canToggleMeridian = true;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onChange = Function.prototype;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onTouched = Function.prototype;\n        this.config = _config;\n        Object.assign(this, this.config);\n        this.timepickerSub = _store.select(state => state.value)\n            .subscribe((value) => {\n            // update UI values if date changed\n            this._renderTime(value);\n            this.onChange(value);\n            this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n        });\n        _store.select(state => state.controls)\n            .subscribe((controlsState) => {\n            const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n            const isValid = this.config.allowEmptyTime ?\n                this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n                : isTimepickerInputValid;\n            this.isValid.emit(isValid);\n            Object.assign(this, controlsState);\n            _cd.markForCheck();\n        });\n    }\n    /** @deprecated - please use `isEditable` instead */\n    get isSpinnersVisible() {\n        return this.showSpinners && !this.readonlyInput;\n    }\n    get isEditable() {\n        return !(this.readonlyInput || this.disabled);\n    }\n    resetValidation() {\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n    }\n    isPM() {\n        return this.showMeridian && this.meridian === this.meridians[1];\n    }\n    prevDef($event) {\n        $event.preventDefault();\n    }\n    wheelSign($event) {\n        return Math.sign($event.deltaY || 0) * -1;\n    }\n    ngOnChanges() {\n        this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n    changeHours(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n    }\n    changeMinutes(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeMinutes({ step, source }));\n    }\n    changeSeconds(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeSeconds({ step, source }));\n    }\n    updateHours(target) {\n        this.resetValidation();\n        this.hours = target.value;\n        const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidHours = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateMinutes(target) {\n        this.resetValidation();\n        this.minutes = target.value;\n        const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidMinutes = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateSeconds(target) {\n        this.resetValidation();\n        this.seconds = target.value;\n        const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidSeconds = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    isValidLimit() {\n        return isInputLimitValid({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }, this.max, this.min);\n    }\n    isOneOfDatesIsEmpty() {\n        return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n    }\n    _updateTime() {\n        const _seconds = this.showSeconds ? this.seconds : void 0;\n        const _minutes = this.showMinutes ? this.minutes : void 0;\n        const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._store.dispatch(this._timepickerActions.setTime({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }));\n    }\n    toggleMeridian() {\n        if (!this.showMeridian || !this.isEditable) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        this._store.dispatch(this._timepickerActions.changeHours({\n            step: _hoursPerDayHalf,\n            source: ''\n        }));\n    }\n    /**\n     * Write a new value to the element.\n     */\n    writeValue(obj) {\n        if (isValidDate(obj)) {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n        }\n        else if (obj == null) {\n            this._store.dispatch(this._timepickerActions.writeValue());\n        }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n    ngOnDestroy() {\n        this.timepickerSub?.unsubscribe();\n    }\n    _renderTime(value) {\n        if (!value || !isValidDate(value)) {\n            this.hours = '';\n            this.minutes = '';\n            this.seconds = '';\n            this.meridian = this.meridians[0];\n            this.meridianChange.emit(this.meridian);\n            return;\n        }\n        const _value = parseTime(value);\n        if (!_value) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        let _hours = _value.getHours();\n        if (this.showMeridian) {\n            this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n            this.meridianChange.emit(this.meridian);\n            _hours = _hours % _hoursPerDayHalf;\n            // should be 12 PM, not 00 PM\n            if (_hours === 0) {\n                _hours = _hoursPerDayHalf;\n            }\n        }\n        this.hours = padNumber(_hours);\n        this.minutes = padNumber(_value.getMinutes());\n        this.seconds = padNumber(_value.getUTCSeconds());\n    }\n}\nTimepickerComponent.ɵfac = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareFactory\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerComponent, deps: [{ token: TimepickerConfig }, { token: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef }, { token: TimepickerStore }, { token: TimepickerActions }], target: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵFactoryTarget\"].Component });\nTimepickerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareComponent\"]({ minVersion: \"14.0.0\", version: \"15.0.3\", type: TimepickerComponent, selector: \"timepicker\", inputs: { hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondsStep: \"secondsStep\", readonlyInput: \"readonlyInput\", disabled: \"disabled\", mousewheel: \"mousewheel\", arrowkeys: \"arrowkeys\", showSpinners: \"showSpinners\", showMeridian: \"showMeridian\", showMinutes: \"showMinutes\", showSeconds: \"showSeconds\", meridians: \"meridians\", min: \"min\", max: \"max\", hoursPlaceholder: \"hoursPlaceholder\", minutesPlaceholder: \"minutesPlaceholder\", secondsPlaceholder: \"secondsPlaceholder\" }, outputs: { isValid: \"isValid\", meridianChange: \"meridianChange\" }, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], usesOnChanges: true, ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"], dependencies: [{ kind: \"directive\", type: _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush, encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None });\n_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareClassMetadata\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerComponent, decorators: [{\n            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,\n            args: [{ selector: 'timepicker', changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: TimepickerConfig }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef }, { type: TimepickerStore }, { type: TimepickerActions }]; }, propDecorators: { hourStep: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], minuteStep: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], secondsStep: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], readonlyInput: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], disabled: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], mousewheel: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], arrowkeys: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], showSpinners: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], showMeridian: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], showMinutes: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], showSeconds: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], meridians: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], min: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], max: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], hoursPlaceholder: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], minutesPlaceholder: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], secondsPlaceholder: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input\n            }], isValid: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output\n            }], meridianChange: [{\n                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output\n            }] } });\n\nclass TimepickerModule {\n    static forRoot() {\n        return {\n            ngModule: TimepickerModule,\n            providers: [TimepickerActions, TimepickerStore]\n        };\n    }\n}\nTimepickerModule.ɵfac = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareFactory\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerModule, deps: [], target: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵFactoryTarget\"].NgModule });\nTimepickerModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareNgModule\"]({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerModule, declarations: [TimepickerComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule], exports: [TimepickerComponent] });\nTimepickerModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareInjector\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerModule, providers: [TimepickerStore], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule] });\n_angular_core__WEBPACK_IMPORTED_MODULE_0__[\"ɵɵngDeclareClassMetadata\"]({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: /*#__PURE__*/ (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_angular_core__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_angular_core__WEBPACK_IMPORTED_MODULE_0__, 2))), type: TimepickerModule, decorators: [{\n            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,\n            args: [{\n                    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule],\n                    declarations: [TimepickerComponent],\n                    exports: [TimepickerComponent],\n                    providers: [TimepickerStore]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n//# sourceMappingURL=ngx-bootstrap-timepicker.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ngx-bootstrap/timepicker/fesm2020/ngx-bootstrap-timepicker.mjs\n");

/***/ })

}]);