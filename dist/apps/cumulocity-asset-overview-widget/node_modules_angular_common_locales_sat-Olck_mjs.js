"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcumulocity_asset_overview_widget"] = self["webpackChunkcumulocity_asset_overview_widget"] || []).push([["node_modules_angular_common_locales_sat-Olck_mjs"],{

/***/ "./node_modules/@angular/common/locales/sat-Olck.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@angular/common/locales/sat-Olck.mjs ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY.\nconst u = undefined;\nfunction plural(val) {\n    const n = val;\n    if (n === 1)\n        return 1;\n    if (n === 2)\n        return 2;\n    return 5;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\"sat-Olck\", [[\"AM\", \"PM\"], u, [\"ᱥᱮᱛᱟᱜ\", \"ᱧᱤᱫᱟᱹ\"]], [[\"AM\", \"PM\"], u, u], [[\"ᱥ\", \"ᱚ\", \"ᱵ\", \"ᱥ\", \"ᱥ\", \"ᱡ\", \"ᱧ\"], [\"ᱥᱤᱸ\", \"ᱚᱛ\", \"ᱵᱟ\", \"ᱥᱟᱹ\", \"ᱥᱟᱹᱨ\", \"ᱡᱟᱹ\", \"ᱧᱩ\"], [\"ᱥᱤᱸᱜᱮ\", \"ᱚᱛᱮ\", \"ᱵᱟᱞᱮ\", \"ᱥᱟᱹᱜᱩᱱ\", \"ᱥᱟᱹᱨᱫᱤ\", \"ᱡᱟᱹᱨᱩᱢ\", \"ᱧᱩᱦᱩᱢ\"], [\"ᱥᱤᱸ\", \"ᱚᱛ\", \"ᱵᱟ\", \"ᱥᱟᱹ\", \"ᱥᱟᱹᱨ\", \"ᱡᱟᱹ\", \"ᱧᱩ\"]], u, [[\"ᱡ\", \"ᱯ\", \"ᱢ\", \"ᱟ\", \"ᱢ\", \"ᱡ\", \"ᱡ\", \"ᱟ\", \"ᱥ\", \"ᱚ\", \"ᱱ\", \"ᱫ\"], [\"ᱡᱟᱱ\", \"ᱯᱷᱟ\", \"ᱢᱟᱨ\", \"ᱟᱯᱨ\", \"ᱢᱮ\", \"ᱡᱩᱱ\", \"ᱡᱩᱞ\", \"ᱟᱜᱟ\", \"ᱥᱮᱯ\", \"ᱚᱠᱴ\", \"ᱱᱟᱣ\", \"ᱫᱤᱥ\"], [\"ᱡᱟᱱᱣᱟᱨᱤ\", \"ᱯᱷᱟᱨᱣᱟᱨᱤ\", \"ᱢᱟᱨᱪ\", \"ᱟᱯᱨᱮᱞ\", \"ᱢᱮ\", \"ᱡᱩᱱ\", \"ᱡᱩᱞᱟᱭ\", \"ᱟᱜᱟᱥᱛ\", \"ᱥᱮᱯᱴᱮᱢᱵᱟᱨ\", \"ᱚᱠᱴᱚᱵᱟᱨ\", \"ᱱᱟᱣᱟᱢᱵᱟᱨ\", \"ᱫᱤᱥᱟᱢᱵᱟᱨ\"]], u, [[\"ᱥᱮᱨᱢᱟ ᱞᱟᱦᱟ\", \"ᱤᱥᱣᱤ\"], u, u], 0, [0, 0], [\"d/M/yy\", \"d MMM y\", \"d MMMM y\", \"EEEE, d MMMM y\"], [\"h:mm a\", \"h:mm:ss a\", \"h:mm:ss a z\", \"h:mm:ss a zzzz\"], [\"{1} {0}\", u, u, u], [\".\", \",\", \";\", \"%\", \"+\", \"-\", \"E\", \"×\", \"‰\", \"∞\", \"NaN\", \":\"], [\"#,##0.###\", \"#,##0%\", \"¤ #,##0.00\", \"#E0\"], \"INR\", \"₹\", \"ᱥᱤᱧᱚᱛ ᱨᱮᱱᱟᱜ ᱴᱟᱠᱟ\", { \"JPY\": [\"JP¥\", \"¥\"], \"USD\": [\"US$\", \"$\"] }, \"ltr\", plural]);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F0LU9sY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21tb24vbG9jYWxlcy9zYXQtT2xjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCwwQ0FBMEM7QUFDMUMsTUFBTSxDQUFDLEdBQUcsU0FBUyxDQUFDO0FBRXBCLFNBQVMsTUFBTSxDQUFDLEdBQVc7SUFDM0IsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBRWQsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNQLE9BQU8sQ0FBQyxDQUFDO0lBQ2IsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNQLE9BQU8sQ0FBQyxDQUFDO0lBQ2IsT0FBTyxDQUFDLENBQUM7QUFDVCxDQUFDO0FBRUQsZUFBZSxDQUFDLFVBQVUsRUFBQyxDQUFDLENBQUMsSUFBSSxFQUFDLElBQUksQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLE9BQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUMsSUFBSSxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLENBQUMsRUFBQyxDQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLEtBQUssRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFDLElBQUksQ0FBQyxFQUFDLENBQUMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUMsT0FBTyxDQUFDLEVBQUMsQ0FBQyxLQUFLLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxLQUFLLEVBQUMsTUFBTSxFQUFDLEtBQUssRUFBQyxJQUFJLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLENBQUMsRUFBQyxDQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxDQUFDLEVBQUMsQ0FBQyxTQUFTLEVBQUMsVUFBVSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsSUFBSSxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsT0FBTyxFQUFDLFdBQVcsRUFBQyxTQUFTLEVBQUMsVUFBVSxFQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxZQUFZLEVBQUMsTUFBTSxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLFFBQVEsRUFBQyxTQUFTLEVBQUMsVUFBVSxFQUFDLGdCQUFnQixDQUFDLEVBQUMsQ0FBQyxRQUFRLEVBQUMsV0FBVyxFQUFDLGFBQWEsRUFBQyxnQkFBZ0IsQ0FBQyxFQUFDLENBQUMsU0FBUyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsS0FBSyxFQUFDLEdBQUcsQ0FBQyxFQUFDLENBQUMsV0FBVyxFQUFDLFFBQVEsRUFBQyxZQUFZLEVBQUMsS0FBSyxDQUFDLEVBQUMsS0FBSyxFQUFDLEdBQUcsRUFBQyxrQkFBa0IsRUFBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEtBQUssRUFBQyxHQUFHLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxLQUFLLEVBQUMsR0FBRyxDQUFDLEVBQUMsRUFBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuLy8gVEhJUyBDT0RFIElTIEdFTkVSQVRFRCAtIERPIE5PVCBNT0RJRlkuXG5jb25zdCB1ID0gdW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBwbHVyYWwodmFsOiBudW1iZXIpOiBudW1iZXIge1xuY29uc3QgbiA9IHZhbDtcblxuaWYgKG4gPT09IDEpXG4gICAgcmV0dXJuIDE7XG5pZiAobiA9PT0gMilcbiAgICByZXR1cm4gMjtcbnJldHVybiA1O1xufVxuXG5leHBvcnQgZGVmYXVsdCBbXCJzYXQtT2xja1wiLFtbXCJBTVwiLFwiUE1cIl0sdSxbXCLhsaXhsa7hsZvhsZ/hsZxcIixcIuGxp+GxpOGxq+Gxn+GxuVwiXV0sW1tcIkFNXCIsXCJQTVwiXSx1LHVdLFtbXCLhsaVcIixcIuGxmlwiLFwi4bG1XCIsXCLhsaVcIixcIuGxpVwiLFwi4bGhXCIsXCLhsadcIl0sW1wi4bGl4bGk4bG4XCIsXCLhsZrhsZtcIixcIuGxteGxn1wiLFwi4bGl4bGf4bG5XCIsXCLhsaXhsZ/hsbnhsahcIixcIuGxoeGxn+GxuVwiLFwi4bGn4bGpXCJdLFtcIuGxpeGxpOGxuOGxnOGxrlwiLFwi4bGa4bGb4bGuXCIsXCLhsbXhsZ/hsZ7hsa5cIixcIuGxpeGxn+GxueGxnOGxqeGxsVwiLFwi4bGl4bGf4bG54bGo4bGr4bGkXCIsXCLhsaHhsZ/hsbnhsajhsanhsaJcIixcIuGxp+GxqeGxpuGxqeGxolwiXSxbXCLhsaXhsaThsbhcIixcIuGxmuGxm1wiLFwi4bG14bGfXCIsXCLhsaXhsZ/hsblcIixcIuGxpeGxn+GxueGxqFwiLFwi4bGh4bGf4bG5XCIsXCLhsafhsalcIl1dLHUsW1tcIuGxoVwiLFwi4bGvXCIsXCLhsaJcIixcIuGxn1wiLFwi4bGiXCIsXCLhsaFcIixcIuGxoVwiLFwi4bGfXCIsXCLhsaVcIixcIuGxmlwiLFwi4bGxXCIsXCLhsatcIl0sW1wi4bGh4bGf4bGxXCIsXCLhsa/hsbfhsZ9cIixcIuGxouGxn+GxqFwiLFwi4bGf4bGv4bGoXCIsXCLhsaLhsa5cIixcIuGxoeGxqeGxsVwiLFwi4bGh4bGp4bGeXCIsXCLhsZ/hsZzhsZ9cIixcIuGxpeGxruGxr1wiLFwi4bGa4bGg4bG0XCIsXCLhsbHhsZ/hsaNcIixcIuGxq+GxpOGxpVwiXSxbXCLhsaHhsZ/hsbHhsaPhsZ/hsajhsaRcIixcIuGxr+Gxt+Gxn+GxqOGxo+Gxn+GxqOGxpFwiLFwi4bGi4bGf4bGo4bGqXCIsXCLhsZ/hsa/hsajhsa7hsZ5cIixcIuGxouGxrlwiLFwi4bGh4bGp4bGxXCIsXCLhsaHhsanhsZ7hsZ/hsa1cIixcIuGxn+GxnOGxn+GxpeGxm1wiLFwi4bGl4bGu4bGv4bG04bGu4bGi4bG14bGf4bGoXCIsXCLhsZrhsaDhsbThsZrhsbXhsZ/hsahcIixcIuGxseGxn+Gxo+Gxn+GxouGxteGxn+GxqFwiLFwi4bGr4bGk4bGl4bGf4bGi4bG14bGf4bGoXCJdXSx1LFtbXCLhsaXhsa7hsajhsaLhsZ8g4bGe4bGf4bGm4bGfXCIsXCLhsaThsaXhsaPhsaRcIl0sdSx1XSwwLFswLDBdLFtcImQvTS95eVwiLFwiZCBNTU0geVwiLFwiZCBNTU1NIHlcIixcIkVFRUUsIGQgTU1NTSB5XCJdLFtcImg6bW0gYVwiLFwiaDptbTpzcyBhXCIsXCJoOm1tOnNzIGEgelwiLFwiaDptbTpzcyBhIHp6enpcIl0sW1wiezF9IHswfVwiLHUsdSx1XSxbXCIuXCIsXCIsXCIsXCI7XCIsXCIlXCIsXCIrXCIsXCItXCIsXCJFXCIsXCLDl1wiLFwi4oCwXCIsXCLiiJ5cIixcIk5hTlwiLFwiOlwiXSxbXCIjLCMjMC4jIyNcIixcIiMsIyMwJVwiLFwiwqTCoCMsIyMwLjAwXCIsXCIjRTBcIl0sXCJJTlJcIixcIuKCuVwiLFwi4bGl4bGk4bGn4bGa4bGbIOGxqOGxruGxseGxn+GxnCDhsbThsZ/hsaDhsZ9cIix7XCJKUFlcIjpbXCJKUMKlXCIsXCLCpVwiXSxcIlVTRFwiOltcIlVTJFwiLFwiJFwiXX0sXCJsdHJcIiwgcGx1cmFsXTtcbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@angular/common/locales/sat-Olck.mjs\n");

/***/ })

}]);